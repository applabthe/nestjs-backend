var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/classes/AddResetToken1665198934490.html",[0,0.013,1,3.527]],["body/classes/AddResetToken1665198934490.html",[0,0.014,1,6.043,2,1.3,3,0.092,4,0.092,5,0.082,6,6.626,7,4.054,8,2.036,9,5.645,10,0.269,11,1.138,12,1.439,13,1.347,14,4.637,15,2.461,16,4.988,17,4.988,18,0.505,19,0.009,20,0.588,21,2.755,22,2.755,23,0.898,24,4.596,25,4.988,26,6.847,27,4.596,28,1.447,29,1.166,30,1.284,31,2.976,32,4.988,33,4.596,34,0.222,35,2.188,36,0.103,37,2.976,38,7.512,39,5.607,40,1.976,41,4.628,42,3.717,43,2.264,44,4.34,45,3.217,46,4.988,47,4.101,48,0.006,49,0.006]],["title/injectables/ApiKeyMiddleware.html",[50,0.845,51,3.272]],["body/injectables/ApiKeyMiddleware.html",[0,0.016,3,0.106,4,0.106,5,0.095,8,1.74,10,0.31,12,0.972,13,1.479,18,0.381,19,0.009,23,0.678,28,1.237,29,0.996,30,1.097,34,0.363,36,0.118,48,0.007,49,0.007,50,1.312,51,5.083,52,1.882,53,6.007,54,4.675,55,6.007,56,6.811,57,4.991,58,5.617,59,4.558,60,6.389,61,7.943,62,5.3,63,3.955,64,2.807,65,6.811,66,3.71,67,0.926,68,3.33,69,4.263,70,3.71,71,5.3,72,4.675,73,2.611,74,1.933,75,5.3,76,2.918,77,4.675]],["title/controllers/AppController.html",[78,1.788,79,3.272]],["body/controllers/AppController.html",[0,0.018,3,0.119,4,0.119,5,0.106,10,0.347,13,1.589,19,0.009,20,0.936,23,0.76,30,1.23,34,0.353,36,0.132,48,0.007,49,0.007,67,1.037,78,2.983,79,5.46,80,2.493,81,5.238,82,7.3,83,1.853,84,5.938,85,5.245,86,5.238,87,3.031,88,3.407,89,1.562,90,5.938]],["title/modules/AppModule.html",[91,1.557,92,3.272]],["body/modules/AppModule.html",[0,0.009,3,0.057,4,0.057,5,0.051,8,0.937,12,0.524,13,0.62,15,0.869,18,0.205,19,0.009,23,0.365,28,0.666,29,0.537,30,0.591,34,0.424,36,0.064,48,0.004,49,0.004,51,2.13,64,1.512,67,0.499,70,1.998,79,3.996,80,1.844,85,4.535,86,2.518,89,0.751,91,1.56,92,6.428,93,1.359,94,2.164,95,2.518,96,2.518,97,2.518,98,4.799,99,4.294,100,4.535,101,4.535,102,4.799,103,4.799,104,4.11,105,4.799,106,2.327,107,1.359,108,1.512,109,2.854,110,2.419,111,2.836,112,2.854,113,4.393,114,6.013,115,2.854,116,4.393,117,2.296,118,4.393,119,2.518,120,4.393,121,2.854,122,2.13,123,2.327,124,1.315,125,1.888,126,1.512,127,2.854,128,2.76,129,1.998,130,3.075,131,2.296,132,2.296,133,2.905,134,2.13,135,3.875,136,2.518,137,3.533,138,2.854,139,2.854,140,2.854,141,2.854,142,2.854,143,2.854,144,2.854,145,2.854,146,1.512,147,2.854,148,2.854,149,2.854,150,2.518,151,2.13,152,3.533,153,3.533,154,2.854,155,3.278,156,2.518,157,3.278,158,2.518,159,2.296,160,1.998,161,2.13,162,3.075,163,4.393,164,3.278,165,2.854,166,3.542,167,2.13,168,3.278,169,2.518,170,2.854,171,2.854,172,2.854,173,2.854,174,2.854,175,2.518,176,3.875,177,2.76,178,2.518,179,2.854,180,1.901,181,2.854,182,3.075,183,2.52,184,2.518,185,2.854,186,2.76,187,2.854,188,1.572,189,2.854,190,2.854,191,2.296,192,2.854]],["title/modules/AppModuleFixture.html",[91,1.557,193,3.272]],["body/modules/AppModuleFixture.html",[0,0.016,3,0.108,4,0.108,5,0.096,19,0.009,34,0.407,36,0.119,48,0.007,49,0.007,67,0.935,91,2.433,93,2.548,94,3.377,104,5.054,106,3.63,107,2.548,108,2.835,111,3.63,119,4.721,122,3.994,124,2.466,125,3.54,126,2.835,133,4.533,134,3.994,175,4.721,176,6.045,177,4.307,178,4.721,184,4.721,193,6.292,194,4.721,195,5.352,196,5.352,197,5.352,198,4.305,199,5.352,200,5.352]],["title/injectables/AppService.html",[50,0.845,85,2.9]],["body/injectables/AppService.html",[0,0.014,3,0.093,4,0.093,5,0.082,10,0.269,12,0.846,13,1.349,18,0.331,19,0.009,20,0.962,23,0.795,28,1.075,29,0.867,30,0.954,34,0.339,36,0.103,48,0.006,49,0.006,50,1.197,52,1.636,67,0.805,82,6.926,85,4.109,89,1.634,123,3.984,124,2.124,135,4.065,136,4.065,177,2.896,180,1.994,201,4.065,202,2.265,203,4.609,204,4.609,205,6.213,206,4.609,207,6.213,208,0.888,209,4.609,210,6.037,211,6.65,212,2.763,213,2.773,214,4.609,215,4.609,216,2.348,217,4.609,218,4.609,219,6.213,220,4.609,221,4.609,222,4.609,223,4.609]],["title/interfaces/AuthConfigInterface.html",[208,0.845,224,3.272]],["body/interfaces/AuthConfigInterface.html",[3,0.127,4,0.127,5,0.113,10,0.37,11,1.396,18,0.586,19,0.009,36,0.141,42,5.071,48,0.008,49,0.008,208,1.219,212,3.795,224,5.677,225,1.705,226,5.092,227,3.795,228,6.119,229,5.092]],["title/controllers/AuthController.html",[78,1.788,230,3.272]],["body/controllers/AuthController.html",[0,0.007,3,0.05,4,0.05,5,0.045,10,0.146,12,1.19,13,0.86,18,0.507,19,0.009,20,0.716,23,0.78,28,1.423,29,1.146,30,1.263,31,2.793,34,0.378,36,0.056,40,1.909,42,3.889,43,1.951,48,0.004,49,0.004,57,3.09,67,0.437,78,1.019,80,1.049,83,1.903,87,1.276,89,1.604,107,2.664,230,2.955,231,2.204,232,1.498,233,2.605,234,3.493,235,3.96,236,3.67,237,2.955,238,4.918,239,2.499,240,4.841,241,3.96,242,2.499,243,3.493,244,4.841,245,2.272,246,2.724,247,3.7,248,4.268,249,2.499,250,5.594,251,2.877,252,2.772,253,3.96,254,3.96,255,2.955,256,3.493,257,2.499,258,4.934,259,5.594,260,2.499,261,2.499,262,3.357,263,2.499,264,2.499,265,2.499,266,2.499,267,3.67,268,3.96,269,1.663,270,2.499,271,2.499,272,2.499,273,4.541,274,2.499,275,2.499,276,3.253,277,2.499,278,2.499,279,4.935,280,3.96,281,2.499,282,3.493,283,3.185,284,2.605,285,2.941,286,2.499,287,3.493,288,2.499,289,3.493,290,2.499,291,2.499,292,3.96,293,3.185,294,3.493,295,2.499,296,2.488,297,2.499,298,2.01,299,1.653,300,1.749,301,2.619,302,3.493,303,3.96,304,3.916,305,3.96,306,6.487,307,0.78,308,2.01,309,2.01,310,1.324,311,1.57,312,2.948,313,1.865,314,1.865,315,2.204,316,2.204,317,4.905,318,2.499,319,1.653,320,2.204,321,1.865,322,2.204,323,1.57,324,2.499,325,2.272,326,1.653,327,2.204,328,2.499,329,2.499,330,2.499,331,2.499,332,2.204,333,2.499,334,2.499,335,2.499,336,2.499,337,1.653,338,2.499,339,2.499,340,2.499,341,2.499,342,5.379,343,2.204,344,2.499,345,2.499,346,2.499,347,1.498,348,2.499,349,2.499,350,2.499]],["title/classes/AuthEmailDto.html",[0,0.013,240,3.272]],["body/classes/AuthEmailDto.html",[0,0.019,2,1.826,3,0.13,4,0.13,5,0.116,19,0.009,34,0.371,36,0.144,48,0.008,49,0.008,240,5.744,246,2.711,262,3.074,307,2.015,311,4.057,351,4.27,352,5.695,353,4.27,354,1.739,355,5.695]],["title/controllers/AuthGithubController.html",[78,1.788,356,3.272]],["body/controllers/AuthGithubController.html",[0,0.017,3,0.084,4,0.084,5,0.074,10,0.243,12,0.763,13,1.258,15,2.029,18,0.416,19,0.009,23,0.741,28,0.971,29,0.782,30,1.199,34,0.396,36,0.093,40,1.523,48,0.006,49,0.006,57,4.187,64,3.068,67,0.727,78,1.697,80,1.747,83,1.808,87,2.124,89,1.523,232,2.494,233,2.204,236,5.853,237,4.323,244,4.973,251,2.366,262,3.43,276,4.407,300,2.913,307,1.299,311,2.615,312,3.994,313,3.105,314,3.105,315,3.67,316,3.67,317,3.347,319,3.831,321,3.105,325,2.388,332,3.67,356,4.323,357,5.877,358,3.67,359,4.161,360,4.161,361,4.161,362,5.792,363,4.659,364,4.161,365,4.161,366,2.204,367,4.161,368,3.831,369,5.792,370,4.664,371,4.161,372,4.161,373,4.973,374,2.615,375,3.67,376,1.857,377,3.105,378,4.161,379,4.161,380,4.161,381,4.161,382,5.792,383,3.347,384,2.913,385,4.161,386,3.347,387,4.161,388,4.161,389,4.161]],["title/injectables/AuthGithubStrategy.html",[50,0.845,390,3.069]],["body/injectables/AuthGithubStrategy.html",[0,0.013,3,0.085,4,0.085,5,0.076,10,0.248,12,1.076,13,1.274,15,2.048,18,0.422,19,0.009,20,1.009,23,0.751,28,1.369,29,1.103,30,0.877,34,0.398,36,0.095,37,1.679,40,1.769,48,0.006,49,0.006,50,1.13,52,1.504,66,4.106,67,0.74,73,2.89,74,2.139,89,1.114,123,3.846,124,1.952,168,3.162,169,3.737,180,1.833,183,3.366,202,2.139,213,2.618,216,1.831,246,3.049,354,1.141,366,2.244,370,2.966,390,4.106,391,3.737,392,5.021,393,2.802,394,5.348,395,4.237,396,4.237,397,5.021,398,5.934,399,5.419,400,4.237,401,4.718,402,3.408,403,2.54,404,3.162,405,3.162,406,4.237,407,2.244,408,3.162,409,4.237,410,4.237,411,3.408,412,4.237,413,3.162,414,3.408,415,4.237,416,3.408,417,4.237,418,3.408,419,4.237,420,4.237,421,4.237,422,3.737,423,4.237,424,4.237]],["title/classes/AuthLoginDto.html",[0,0.013,267,3.272]],["body/classes/AuthLoginDto.html",[0,0.022,2,1.424,3,0.101,4,0.101,5,0.09,8,2.164,10,0.294,11,1.209,18,0.56,19,0.009,20,1.097,23,0.843,34,0.376,36,0.112,48,0.007,49,0.007,83,2.057,188,3.629,236,5.482,251,2.766,267,4.918,269,3.271,285,3.371,307,1.572,351,4.858,376,2.248,425,4.443,426,5.482,427,5.813,428,5.037,429,5.037,430,4.052,431,5.037,432,3.384,433,4.403,434,4.214,435,2.571,436,5.037,437,5.037]],["title/classes/AuthLoginInterface.html",[0,0.013,426,3.272]],["body/classes/AuthLoginInterface.html",[0,0.018,2,1.749,3,0.124,4,0.124,5,0.111,10,0.362,11,1.376,18,0.539,19,0.009,20,1.074,23,0.96,36,0.138,48,0.008,49,0.008,226,6.494,269,3.39,285,3.494,426,5.599,438,5.457,439,6.186,440,6.186]],["title/modules/AuthModule.html",[91,1.557,98,3.069]],["body/modules/AuthModule.html",[0,0.012,3,0.08,4,0.08,5,0.072,15,1.217,19,0.009,34,0.421,36,0.089,48,0.006,49,0.006,67,0.698,80,2.365,91,1.999,93,1.903,94,2.775,98,6.138,99,2.644,100,5.121,104,3.376,106,2.983,107,1.903,108,2.117,110,3.101,111,2.983,123,2.983,124,1.842,128,2.512,129,2.798,180,1.73,182,2.798,183,3.232,230,4.867,233,2.983,312,4.641,313,2.983,325,2.294,326,5.121,327,3.526,356,4.867,390,5.42,403,2.396,404,2.983,441,3.526,442,3.526,443,3.997,444,5.42,445,5.42,446,3.997,447,5.632,448,3.997,449,2.798,450,5.632,451,3.997,452,3.997,453,3.526,454,3.997,455,3.997,456,3.997,457,3.997,458,3.997,459,3.997,460,3.997]],["title/classes/AuthRefreshDto.html",[0,0.013,273,3.069]],["body/classes/AuthRefreshDto.html",[0,0.022,2,1.685,3,0.12,4,0.12,5,0.107,10,0.348,11,1.345,18,0.428,19,0.009,20,0.938,23,0.763,34,0.354,36,0.133,48,0.007,49,0.007,83,1.86,273,5.133,307,1.86,351,4.85,397,5.928,432,3.378,434,4.207,435,3.042,461,5.257,462,5.96,463,5.96,464,4.794,465,5.257,466,5.96,467,5.96]],["title/classes/AuthResponseDto.html",[0,0.013,276,2.9]],["body/classes/AuthResponseDto.html",[0,0.016,2,1.479,3,0.105,4,0.105,5,0.094,10,0.306,11,1.239,12,0.96,18,0.538,19,0.009,20,1.127,23,0.957,28,1.221,29,0.984,34,0.252,36,0.117,48,0.007,49,0.007,83,2.108,88,4.809,202,1.908,276,4.467,307,1.633,351,5.228,397,6.364,401,6.582,432,3.771,468,4.208,469,6.754,470,6.754,471,5.231,472,5.231,473,5.231]],["title/injectables/AuthService.html",[50,0.845,312,2.628]],["body/injectables/AuthService.html",[0,0.006,3,0.04,4,0.04,5,0.035,10,0.116,12,1.132,13,0.713,15,2.394,18,0.444,19,0.009,20,0.972,23,0.826,28,1.44,29,1.16,30,1.278,31,2.865,34,0.371,36,0.044,37,2.652,40,2.068,48,0.003,49,0.003,50,0.632,52,0.704,64,1.738,66,2.297,67,0.346,70,1.387,73,1.616,74,1.531,89,1.97,107,2.324,123,3.268,124,0.913,128,1.245,129,1.387,157,1.479,158,1.748,180,0.858,186,3.878,202,1.196,213,3.228,216,2.402,229,5.192,234,2.894,244,5.15,245,1.883,246,2.591,247,3.228,256,1.748,262,2.324,269,1.763,273,3.786,276,1.311,279,4.319,282,2.894,283,2.639,284,3.268,285,2.67,310,1.05,311,1.245,312,1.967,317,3.377,320,1.748,321,1.479,322,1.748,343,1.748,397,2.449,401,1.594,407,3.268,408,1.479,449,1.387,474,1.748,475,3.281,476,3.281,477,4.881,478,3.703,479,3.281,480,4.198,481,1.982,482,4.198,483,6.171,484,3.398,485,1.982,486,3.281,487,3.281,488,1.982,489,2.894,490,3.281,491,3.281,492,1.982,493,3.281,494,1.982,495,1.982,496,1.982,497,1.982,498,3.281,499,1.982,500,1.982,501,1.982,502,2.17,503,2.639,504,1.982,505,2.062,506,1.748,507,1.311,508,1.594,509,1.594,510,2.297,511,1.748,512,1.748,513,1.982,514,1.594,515,1.982,516,1.982,517,1.982,518,1.967,519,1.982,520,1.982,521,3.281,522,3.281,523,3.703,524,1.594,525,1.748,526,3.281,527,1.982,528,1.982,529,1.982,530,3.281,531,1.982,532,1.982,533,1.982,534,0.808,535,1.982,536,1.982,537,1.982,538,1.982,539,1.982,540,3.643,541,1.748,542,1.748,543,1.387,544,1.748,545,1.982,546,1.479,547,2.894,548,1.387,549,1.137,550,1.982,551,1.982,552,1.982,553,1.982,554,1.748,555,0.976,556,1.982,557,1.982,558,3.281,559,3.281,560,2.894,561,3.281,562,1.982,563,2.639,564,1.982,565,1.982,566,1.982,567,1.982,568,1.982,569,1.982,570,1.982,571,1.982,572,1.982,573,1.479,574,1.982,575,1.982]],["title/classes/AuthUpdatePasswordDto.html",[0,0.013,279,3.069]],["body/classes/AuthUpdatePasswordDto.html",[0,0.019,2,1.797,3,0.128,4,0.128,5,0.114,19,0.009,34,0.368,36,0.142,48,0.008,49,0.008,279,5.337,284,3.366,285,2.75,307,1.984,351,4.204,353,4.204,354,1.712,576,5.606,577,3.994,578,6.355,579,4.449,580,6.355]],["title/interfaces/AwsS3ConfigInterface.html",[208,0.845,581,3.272]],["body/interfaces/AwsS3ConfigInterface.html",[3,0.12,4,0.12,5,0.107,10,0.35,11,1.348,18,0.572,19,0.009,20,1.144,21,3.586,36,0.133,48,0.007,49,0.007,208,1.152,225,1.611,227,3.586,581,5.485,582,5.276,583,4.187,584,6.674,585,6.674,586,6.674]],["title/classes/CommonEntity.html",[0,0.013,587,2.628]],["body/classes/CommonEntity.html",[0,0.016,2,1.499,3,0.106,4,0.106,5,0.095,8,2.236,10,0.31,11,1.25,18,0.541,19,0.009,20,0.871,23,0.963,34,0.363,35,2.523,36,0.118,48,0.007,49,0.007,83,2.349,307,1.654,432,3.66,534,3.069,555,3.913,587,4.083,588,4.675,589,4.512,590,4.318,591,4.318,592,4.675,593,5.3,594,4.675,595,5.3,596,4.675,597,5.3,598,6.811,599,5.3,600,6.811,601,5.3,602,5.3,603,4.675,604,5.3]],["title/classes/CommonEntityDto.html",[0,0.013,605,2.9]],["body/classes/CommonEntityDto.html",[0,0.018,2,1.24,3,0.088,4,0.088,5,0.078,10,0.256,11,1.102,18,0.573,19,0.009,20,1.063,23,0.877,34,0.29,36,0.098,43,2.959,48,0.006,49,0.006,76,3.307,83,2.138,188,3.307,251,2.83,307,1.369,347,4.778,376,1.957,432,3.395,433,4.417,534,3.147,555,4.276,590,3.931,591,3.931,605,3.973,606,6.499,607,3.868,608,4.531,609,6.202,610,5.271,611,4.106,612,5.76,613,3.273,614,4.385,615,3.973,616,3.273,617,4.385,618,4.795,619,4.483,620,3.273,621,4.385]],["title/interfaces/CommonEntityInterface.html",[208,0.845,589,2.628]],["body/interfaces/CommonEntityInterface.html",[3,0.121,4,0.121,5,0.108,10,0.352,11,1.355,18,0.574,19,0.009,20,1.021,36,0.134,48,0.007,49,0.007,208,1.161,225,1.623,534,3.392,555,4.279,589,4.426,590,4.773,591,4.773,622,5.315,623,5.315]],["title/classes/CreateRoleDto.html",[0,0.013,624,3.069]],["body/classes/CreateRoleDto.html",[0,0.022,2,1.661,3,0.118,4,0.118,5,0.105,10,0.343,11,1.333,12,1.448,18,0.522,19,0.009,20,1.055,23,0.752,34,0.351,36,0.131,48,0.007,49,0.007,83,1.833,251,2.58,269,2.466,307,1.833,430,4.724,432,3.348,434,4.17,435,2.998,608,3.885,624,5.087,625,6.41,626,4.111,627,5.181]],["title/classes/CreateUserDto.html",[0,0.013,577,2.755]],["body/classes/CreateUserDto.html",[0,0.014,2,1.334,3,0.095,4,0.095,5,0.084,8,2.072,10,0.276,11,1.393,18,0.454,19,0.009,20,0.807,23,0.603,29,0.887,34,0.382,36,0.105,48,0.006,49,0.006,83,1.472,212,3.782,225,1.27,246,1.98,251,2.24,262,2.245,269,1.98,285,3.656,307,1.472,309,3.793,353,4.173,354,1.27,355,4.16,432,2.907,464,5.075,577,3.964,579,3.301,610,3.119,628,5.565,629,3.793,630,5.306,631,3.793,632,5.306,633,6.309,634,6.55,635,6.309,636,7.591,637,6.309,638,4.716,639,4.716,640,5.565,641,4.16,642,5.075,643,5.075,644,3.52,645,3.52,646,4.716,647,2.827,648,3.119,649,3.52,650,4.716,651,4.16,652,3.119]],["title/classes/CreateUserRoleDto.html",[0,0.013,653,3.069]],["body/classes/CreateUserRoleDto.html",[0,0.021,2,1.544,3,0.11,4,0.11,5,0.098,10,0.319,11,1.274,18,0.499,19,0.009,20,1.028,23,0.888,34,0.335,36,0.122,40,2.007,43,3.42,48,0.007,49,0.007,83,2.167,307,1.704,347,4.161,432,3.516,435,2.787,626,3.822,653,4.859,654,4.203,655,6.732,656,4.796,657,3.634,658,6.123,659,6.123,660,4.816,661,5.46,662,6.732]],["title/classes/CryptUtil.html",[0,0.013,663,3.069]],["body/classes/CryptUtil.html",[0,0.014,2,1.3,3,0.092,4,0.092,5,0.082,10,0.269,12,1.138,13,1.347,15,2.592,18,0.446,19,0.009,20,1.138,23,0.898,28,1.447,29,1.166,30,1.453,31,3.202,34,0.222,36,0.103,37,1.821,48,0.006,49,0.006,89,1.845,151,6.353,216,1.435,285,1.989,603,4.054,663,4.34,664,4.054,665,7.512,666,6.201,667,7.018,668,4.596,669,6.201,670,5.88,671,4.596,672,4.596,673,7.512,674,4.596,675,6.201,676,5.469,677,4.596,678,4.596,679,5.469,680,4.596]],["title/controllers/EmailController.html",[78,1.788,681,3.272]],["body/controllers/EmailController.html",[0,0.014,3,0.092,4,0.092,5,0.082,10,0.269,12,0.843,13,1.347,15,2.461,18,0.33,19,0.009,23,0.793,28,1.072,29,0.864,30,1.284,34,0.363,36,0.103,48,0.006,49,0.006,67,0.803,74,2.261,78,1.874,80,1.93,83,1.936,87,2.346,89,1.631,167,3.43,186,4.41,232,2.755,245,4.31,246,2.947,248,4.34,251,2.667,296,2.888,299,4.101,304,4.912,307,1.435,319,4.101,366,3.284,374,2.888,681,4.628,682,4.054,683,7.512,684,6.201,685,4.628,686,6.201,687,5.607,688,4.596,689,4.596,690,4.596,691,5.607,692,6.201,693,5.469,694,4.596,695,4.596,696,4.596,697,4.596,698,4.596,699,4.596,700,4.596,701,4.596,702,4.596,703,4.596]],["title/classes/EmailDto.html",[0,0.013,691,3.272]],["body/classes/EmailDto.html",[0,0.023,2,1.598,3,0.114,4,0.114,5,0.101,10,0.33,11,1.301,18,0.51,19,0.009,20,1.041,23,0.908,34,0.374,36,0.126,48,0.007,49,0.007,83,2.214,188,3.906,307,1.763,376,2.521,432,3.572,433,4.648,434,4.449,435,2.883,647,4.648,691,5.294,704,4.983,705,7.093,706,5.649,707,5.649]],["title/modules/EmailModule.html",[91,1.557,99,2.9]],["body/modules/EmailModule.html",[0,0.015,3,0.102,4,0.102,5,0.091,12,0.93,13,1.101,18,0.364,19,0.009,23,0.649,28,1.183,29,0.953,30,1.05,34,0.391,36,0.113,48,0.007,49,0.007,67,0.885,80,2.128,89,1.333,91,2.773,93,2.413,99,4.873,110,2.791,111,2.685,151,4.938,167,3.783,180,2.193,182,3.548,186,4.629,507,3.352,681,4.938,708,5.068,709,5.068,710,6.617,711,5.829,712,5.068,713,3.783,714,7.367,715,5.836,716,5.068,717,4.471,718,4.938,719,4.471,720,5.068,721,4.471,722,5.068,723,5.068,724,3.548]],["title/interfaces/EmailModuleOptionsInterface.html",[208,0.845,711,3.272]],["body/interfaces/EmailModuleOptionsInterface.html",[3,0.118,4,0.118,5,0.105,10,0.345,11,1.336,18,0.424,19,0.009,34,0.351,36,0.132,48,0.007,49,0.007,67,1.03,91,2.093,180,2.551,182,5.779,208,1.136,225,1.588,245,3.382,246,2.475,354,1.962,645,5.436,649,4.4,711,5.436,725,4.742,726,4.742,727,5.858,728,5.895,729,5.895,730,5.228,731,4.742,732,5.2,733,5.895]],["title/interfaces/EmailOptionsInterface.html",[208,0.845,505,2.755]],["body/interfaces/EmailOptionsInterface.html",[3,0.086,4,0.086,5,0.077,10,0.251,11,1.086,12,0.788,18,0.626,19,0.009,20,1.173,29,1.697,36,0.096,48,0.006,49,0.006,208,0.827,225,1.156,228,4.761,505,3.719,540,5.449,548,5.111,549,4.19,725,3.453,726,3.453,734,7.302,735,7.302,736,6.44,737,7.302,738,7.302,739,5.449,740,8.391]],["title/injectables/EmailService.html",[50,0.845,186,2.755]],["body/injectables/EmailService.html",[0,0.011,3,0.071,4,0.071,5,0.063,10,0.207,12,1.117,13,1.121,15,2.441,18,0.438,19,0.009,20,0.951,23,0.856,28,1.421,29,1.145,30,1.261,34,0.343,36,0.079,37,2.413,48,0.005,49,0.005,50,0.994,52,1.256,67,0.618,73,1.742,74,1.29,88,2.96,89,1.601,159,2.845,160,2.476,180,1.53,186,3.242,202,1.881,213,2.302,216,1.104,245,4.083,246,2.81,296,3.242,310,1.873,366,3.225,484,4.224,502,3.412,505,4.206,507,2.339,508,2.845,540,2.64,546,4.545,548,3.611,549,2.029,647,4.266,713,3.85,717,3.12,718,2.64,719,3.12,730,4.427,731,2.845,732,4.55,736,4.55,739,2.64,741,3.12,742,5.159,743,6.693,744,3.537,745,3.537,746,4.149,747,3.537,748,4.55,749,4.149,750,5.159,751,3.537,752,3.537,753,4.149,754,3.537,755,3.537,756,2.476,757,4.55,758,3.537,759,3.537,760,3.12,761,2.12,762,2.476,763,3.537,764,3.537,765,3.537,766,1.948,767,3.12,768,5.159,769,3.537,770,3.537,771,5.159,772,5.159,773,3.537,774,3.537,775,3.12,776,3.537,777,3.12,778,3.537,779,5.159,780,3.537,781,3.537]],["title/classes/ErrorCodeExceptionFilter.html",[0,0.013,782,3.527]],["body/classes/ErrorCodeExceptionFilter.html",[0,0.014,2,1.361,3,0.097,4,0.097,5,0.086,10,0.281,12,0.883,13,1.389,18,0.346,19,0.009,23,0.616,28,1.123,29,0.905,30,0.997,34,0.369,36,0.107,45,3.369,48,0.006,49,0.006,59,3.67,64,2.55,67,0.841,68,3.025,74,1.755,210,5.712,216,2.389,342,5.641,354,1.723,384,5.028,761,4.776,782,5.144,783,5.641,784,3.872,785,6.336,786,4.246,787,6.751,788,4.814,789,4.773,790,5.641,791,3.369,792,4.477,793,4.814,794,4.246,795,4.246,796,4.814,797,4.814,798,6.396,799,4.814,800,6.396,801,4.814,802,4.814,803,4.814,804,3.872,805,4.814,806,3.872,807,3.184,808,4.814,809,4.246]],["title/interfaces/ErrorCodeExceptionInterface.html",[208,0.845,792,3.069]],["body/interfaces/ErrorCodeExceptionInterface.html",[3,0.129,4,0.129,5,0.115,10,0.376,11,1.409,18,0.462,19,0.009,20,1.051,36,0.143,48,0.008,49,0.008,208,1.239,225,1.732,384,4.502,792,5.375,804,6.84,810,5.672,811,5.672]],["title/entities/Federated.html",[812,2.238,813,2.238]],["body/entities/Federated.html",[0,0.015,3,0.099,4,0.099,5,0.088,8,1.624,10,0.289,11,1.195,18,0.556,19,0.009,20,1.056,23,0.99,34,0.373,35,2.355,36,0.11,40,2.272,47,5.565,48,0.007,49,0.007,83,2.415,225,1.332,354,1.332,509,3.978,587,3.903,657,3.466,812,3.323,813,3.323,814,3.271,815,4.362,816,4.574,817,4.574,818,4.945,819,4.945,820,4.362,821,6.511,822,4.945,823,4.945,824,3.462,825,5.743,826,4.558]],["title/classes/Federated1665882607149.html",[0,0.013,827,3.527]],["body/classes/Federated1665882607149.html",[0,0.012,2,1.106,3,0.079,4,0.079,5,0.07,8,1.821,9,5.183,10,0.229,11,1.018,12,1.358,13,1.205,14,4.411,15,2.34,16,4.461,17,4.461,18,0.463,19,0.009,20,0.5,21,4.203,22,2.345,23,0.824,25,4.461,26,6.609,28,1.294,29,1.043,30,1.148,31,2.777,32,4.461,34,0.189,35,1.862,36,0.087,37,3.046,39,5.737,40,1.458,41,2.919,43,2.732,45,3.882,46,4.461,47,3.668,48,0.006,49,0.006,76,3.054,246,2.329,284,2.072,518,4.842,534,2.261,590,2.244,591,2.244,615,2.587,657,2.64,813,3.578,816,2.458,817,2.458,827,5.639,828,6.184,829,3.45,830,3.911,831,3.911,832,3.911,833,6.529,834,1.996,835,3.45,836,4.461,837,4.891,838,4.891,839,5.683,840,3.911,841,6.781,842,5.546,843,3.146,844,3.45,845,3.45,846,2.738,847,4.891,848,2.738,849,3.45]],["title/classes/FederatedCreateDto.html",[0,0.013,850,3.527]],["body/classes/FederatedCreateDto.html",[0,0.021,2,1.637,3,0.116,4,0.116,5,0.104,8,2.365,19,0.009,34,0.396,36,0.129,48,0.007,49,0.007,188,3.966,251,2.056,307,1.807,319,4.764,353,3.83,354,1.56,376,2.584,657,2.757,813,3.676,816,3.638,817,3.638,834,3.676,850,5.794,851,5.107,852,4.657,853,6.916,854,4.053,855,5.107,856,5.107,857,5.79,858,5.107]],["title/classes/FederatedDto.html",[0,0.013,854,3.069]],["body/classes/FederatedDto.html",[0,0.019,2,1.128,3,0.08,4,0.08,5,0.071,8,1.846,10,0.233,11,1.032,18,0.593,19,0.009,20,1.101,23,0.99,34,0.36,36,0.089,40,1.479,48,0.006,49,0.006,83,2.415,188,3.096,225,1.074,251,2.822,307,1.245,319,3.719,354,1.515,376,1.78,427,5.744,432,3.258,433,4.239,434,4.058,435,2.035,534,2.292,548,4.95,555,2.77,587,4.638,590,3.226,591,3.226,592,3.517,594,3.517,596,3.517,657,3.101,813,3.806,816,4.995,817,4.092,824,2.791,826,4.558,854,3.935,859,3.517,860,6.512,861,3.988,862,3.988,863,3.988,864,4.86,865,3.988,866,3.988,867,3.988]],["title/interfaces/FederatedInterface.html",[208,0.845,826,3.069]],["body/interfaces/FederatedInterface.html",[3,0.106,4,0.106,5,0.094,10,0.308,11,1.244,12,1.244,18,0.539,19,0.009,20,1.119,34,0.254,36,0.117,40,1.784,48,0.007,49,0.007,208,1.014,225,1.418,354,1.827,370,4.748,589,4.498,657,3.773,813,3.462,816,5.437,817,4.979,826,4.748,868,4.644,869,5.982,870,6.782,871,6.782,872,6.782,873,5.455,874,3.93]],["title/modules/FederatedModule.html",[91,1.557,100,2.9]],["body/modules/FederatedModule.html",[0,0.016,3,0.105,4,0.105,5,0.094,19,0.009,34,0.395,36,0.117,48,0.007,49,0.007,67,0.917,80,2.204,91,2.403,93,2.499,94,3.334,100,5.778,104,5.028,106,3.585,107,2.499,108,2.78,110,3.727,111,3.585,125,3.471,126,2.78,394,5.901,453,4.629,724,4.738,813,2.679,875,4.629,876,5.248,877,4.629,878,4.629,879,5.248,880,5.248,881,4.629,882,5.248]],["title/injectables/FederatedService.html",[50,0.845,394,2.9]],["body/injectables/FederatedService.html",[0,0.007,3,0.047,4,0.047,5,0.042,10,0.137,12,1.264,13,0.817,15,2.409,18,0.453,19,0.009,20,1.13,23,0.807,28,1.472,29,1.186,30,1.306,31,2.729,34,0.304,35,1.116,36,0.052,37,2.729,40,2.103,48,0.004,49,0.004,50,0.725,52,0.832,67,0.41,73,2.658,74,1.967,89,1.812,126,1.242,202,1.372,213,2.815,216,1.969,246,3.445,247,3.568,251,0.832,255,1.75,262,1.116,269,2.265,285,1.014,293,3.027,310,2.497,311,1.473,366,1.242,370,3.299,394,2.489,398,3.319,407,3.51,408,1.75,502,2.489,534,2.2,544,2.068,548,2.634,634,1.886,657,2.569,756,3.299,761,2.826,762,3.299,813,3.874,816,4.912,817,5.116,834,2.754,869,3.319,873,1.886,881,2.068,883,2.068,884,4.713,885,4.707,886,4.157,887,4.713,888,5.907,889,1.75,890,3.776,891,2.344,892,2.808,893,2.344,894,2.344,895,3.763,896,2.344,897,2.344,898,2.344,899,2.344,900,3.763,901,2.344,902,2.344,903,2.344,904,3.763,905,3.319,906,3.763,907,4.713,908,1.75,909,2.344,910,2.344,911,3.319,912,2.344,913,2.344,914,2.344,915,2.344,916,3.763,917,2.344,918,2.344,919,2.344,920,2.344,921,4.713,922,3.319,923,2.344,924,2.068,925,2.068]],["title/classes/FederatedUpdateDto.html",[0,0.013,926,3.527]],["body/classes/FederatedUpdateDto.html",[0,0.021,2,1.637,3,0.116,4,0.116,5,0.104,8,2.365,19,0.009,34,0.396,36,0.129,48,0.007,49,0.007,188,3.966,216,1.807,251,2.056,284,3.815,307,1.807,319,4.764,353,3.83,354,1.56,376,2.584,813,3.676,816,3.638,817,3.638,852,4.657,854,4.053,855,5.107,856,5.107,858,5.107,926,5.794,927,5.107,928,6.916,929,5.79]],["title/classes/FileResponseDto.html",[0,0.013,930,3.272]],["body/classes/FileResponseDto.html",[0,0.02,2,1.211,3,0.086,4,0.086,5,0.137,10,0.25,11,1.084,12,1.404,18,0.524,19,0.009,20,1.127,23,0.933,28,0.999,29,1.272,34,0.352,36,0.096,40,1.554,48,0.006,49,0.006,83,2.112,188,3.253,202,1.561,251,2.589,269,3.062,307,1.336,376,1.911,432,3.117,433,4.587,434,3.881,435,2.185,468,3.444,610,3.908,631,4.752,930,4.409,931,6.75,932,5.967,933,5.967,934,5.967,935,5.908,936,7.293,937,7.293,938,4.282,939,5.908,940,5.908,941,4.282,942,5.211,943,4.282,944,4.282,945,3.776,946,3.444,947,4.282,948,4.282,949,4.282,950,4.282]],["title/interfaces/GitHubProfileInterface.html",[208,0.845,399,3.272]],["body/interfaces/GitHubProfileInterface.html",[3,0.114,4,0.114,5,0.101,10,0.33,11,1.301,18,0.615,19,0.009,20,1.141,22,3.387,29,1.529,36,0.126,48,0.007,49,0.007,208,1.088,225,1.522,228,5.705,269,3.415,399,5.294,534,3.316,951,4.983,952,4.983,953,8.132,954,8.132]],["title/injectables/GithubAuthGuard.html",[50,0.845,377,3.272]],["body/injectables/GithubAuthGuard.html",[0,0.019,3,0.129,4,0.129,5,0.115,19,0.009,34,0.371,36,0.143,48,0.008,49,0.008,50,1.479,52,2.283,67,1.123,233,3.406,354,1.732,377,5.731,403,3.855,955,5.672,956,4.799,957,5.173,958,6.431]],["title/interfaces/GithubConfigInterface.html",[208,0.845,959,3.272]],["body/interfaces/GithubConfigInterface.html",[3,0.121,4,0.121,5,0.108,10,0.352,11,1.355,18,0.574,19,0.009,20,1.145,36,0.134,48,0.007,49,0.007,208,1.161,225,1.623,227,3.612,414,6.691,416,6.691,418,6.691,959,5.51,960,5.315]],["title/modules/HandlebarEmailModule.html",[91,1.557,162,3.069]],["body/modules/HandlebarEmailModule.html",[0,0.015,3,0.103,4,0.103,5,0.092,15,1.567,19,0.009,34,0.393,36,0.115,48,0.007,49,0.007,67,0.899,89,1.354,91,2.373,93,2.452,94,3.293,106,3.541,107,2.452,108,2.727,110,3.681,111,2.727,123,3.541,124,2.372,155,3.843,156,4.541,159,4.141,160,3.604,161,3.843,162,5.947,164,3.843,166,5.885,167,3.843,180,2.228,182,3.604,183,3.836,724,4.679,961,4.541,962,4.541,963,4.541,964,4.141,965,5.149,966,5.149,967,5.149,968,5.149]],["title/injectables/HandlebarEmailService.html",[50,0.845,166,2.9]],["body/injectables/HandlebarEmailService.html",[0,0.014,3,0.096,4,0.096,5,0.086,8,1.571,10,0.28,12,1.169,13,1.384,15,2.18,18,0.458,19,0.009,23,0.815,28,1.487,29,1.198,30,0.991,34,0.368,36,0.107,37,1.896,48,0.006,49,0.006,50,1.227,52,1.699,67,0.836,87,2.442,88,2.746,89,1.258,160,3.35,161,3.571,164,5.345,166,4.214,202,1.745,216,1.494,245,4.381,246,3.007,310,2.535,366,2.535,505,4.798,506,4.221,507,3.165,546,4.755,713,4.755,730,4.214,731,3.849,746,5.124,748,5.619,749,5.124,757,5.619,760,4.221,964,5.761,969,4.221,970,4.785,971,8.177,972,4.785,973,4.785,974,4.785,975,4.785]],["title/injectables/JwtAuthGuard.html",[50,0.845,323,2.755]],["body/injectables/JwtAuthGuard.html",[0,0.019,3,0.129,4,0.129,5,0.115,19,0.009,34,0.371,36,0.143,48,0.008,49,0.008,50,1.479,52,2.283,67,1.123,233,3.406,323,4.825,354,1.732,403,3.855,956,4.799,957,5.173,976,5.672,977,6.431]],["title/interfaces/JwtConfigInterface.html",[208,0.845,978,3.272]],["body/interfaces/JwtConfigInterface.html",[3,0.119,4,0.119,5,0.106,10,0.346,11,1.339,18,0.569,19,0.009,20,1.013,34,0.286,36,0.132,48,0.007,49,0.007,208,1.14,225,1.594,227,3.547,237,6.169,363,6.649,449,4.141,978,5.448,979,5.219,980,6.649,981,7.73]],["title/injectables/JwtConfigService.html",[50,0.845,982,3.527]],["body/injectables/JwtConfigService.html",[0,0.014,3,0.097,4,0.097,5,0.086,8,1.581,10,0.281,12,0.883,13,1.389,18,0.346,19,0.009,23,0.979,28,1.123,29,0.905,30,1.487,34,0.369,36,0.107,48,0.006,49,0.006,50,1.232,52,1.709,67,0.841,89,1.889,123,4.054,124,2.218,128,3.025,129,3.369,180,2.083,183,3.67,202,2.332,213,2.148,393,3.184,449,3.369,514,3.872,980,3.872,981,7.372,982,5.144,983,7.027,984,4.246,985,7.654,986,7.654,987,7.654,988,4.814,989,4.814,990,4.814,991,4.814,992,6.396,993,4.814,994,4.814,995,4.814,996,4.246,997,4.814]],["title/interfaces/JwtPayload.html",[208,0.845,510,3.069]],["body/interfaces/JwtPayload.html",[3,0.13,4,0.13,5,0.116,10,0.377,11,1.412,18,0.464,19,0.009,20,1.052,36,0.144,48,0.008,49,0.008,208,1.244,225,1.739,510,5.388,524,6.849,998,5.695,999,5.695]],["title/injectables/JwtStrategy.html",[50,0.845,444,3.069]],["body/injectables/JwtStrategy.html",[0,0.013,3,0.089,4,0.089,5,0.08,10,0.26,12,1.112,13,1.317,15,2.1,18,0.436,19,0.009,23,0.776,28,1.415,29,1.14,30,0.92,31,2.402,34,0.402,36,0.099,37,1.761,40,1.814,48,0.006,49,0.006,50,1.168,52,1.578,66,4.243,67,0.777,73,2.19,74,1.621,89,1.169,123,3.925,124,2.048,128,2.793,129,3.112,180,1.924,183,3.478,202,2.211,213,2.706,216,1.892,262,2.117,311,2.793,354,1.198,392,4.524,393,2.94,402,3.576,403,2.665,404,3.318,405,3.318,407,4.338,408,3.318,411,3.576,413,3.318,444,4.243,510,5.187,511,3.921,512,3.921,514,3.576,523,5.347,524,3.576,1000,3.921,1001,4.445,1002,6.062,1003,4.445,1004,4.445,1005,3.921,1006,4.445,1007,4.445,1008,4.445,1009,4.445,1010,4.445]],["title/injectables/LocalAuthGuard.html",[50,0.845,326,2.9]],["body/injectables/LocalAuthGuard.html",[0,0.019,3,0.129,4,0.129,5,0.115,19,0.009,34,0.371,36,0.143,48,0.008,49,0.008,50,1.479,52,2.283,67,1.123,233,3.406,326,5.079,354,1.732,403,3.855,956,4.799,957,5.173,1011,5.672,1012,6.431]],["title/injectables/LocalStrategy.html",[50,0.845,445,3.069]],["body/injectables/LocalStrategy.html",[0,0.014,3,0.093,4,0.093,5,0.083,10,0.27,12,1.142,13,1.352,15,2.143,18,0.448,19,0.009,20,1.036,23,0.796,28,1.452,29,1.17,30,0.957,31,2.466,34,0.379,36,0.103,37,1.831,40,1.851,48,0.006,49,0.006,50,1.199,52,1.641,66,4.926,67,0.807,73,3.066,74,2.27,87,2.359,89,1.216,202,1.685,216,1.443,262,2.201,269,1.941,285,3.258,311,2.904,312,4.853,313,3.45,354,1.245,392,4.645,402,3.718,403,2.771,404,3.45,405,3.45,411,3.718,413,3.45,445,4.357,756,3.235,761,2.771,762,3.235,766,2.545,1013,6.208,1014,4.077,1015,4.622,1016,4.622,1017,6.225,1018,4.622,1019,4.077,1020,4.622,1021,4.622,1022,4.622,1023,4.622]],["title/interfaces/LoggerConfigInterface.html",[208,0.845,1024,3.272]],["body/interfaces/LoggerConfigInterface.html",[3,0.122,4,0.122,5,0.109,10,0.355,11,1.361,18,0.533,19,0.009,29,1.394,34,0.293,36,0.135,48,0.008,49,0.008,67,1.061,208,1.169,225,1.635,227,3.639,1024,5.535,1025,4.531,1026,5.43,1027,7.357]],["title/injectables/LoggerExceptionFilter.html",[50,0.845,1028,3.272]],["body/injectables/LoggerExceptionFilter.html",[0,0.014,3,0.095,4,0.095,5,0.085,10,0.277,11,1.16,12,0.868,13,1.373,18,0.454,19,0.009,23,0.809,28,1.104,29,0.889,30,0.979,34,0.344,36,0.106,48,0.006,49,0.006,50,1.218,52,1.679,64,2.505,67,0.826,83,1.476,180,3.081,210,5.672,213,3.178,354,1.703,484,4.488,563,5.085,761,4.885,766,3.921,784,3.804,785,6.28,786,5.576,787,6.704,789,5.672,791,3.311,809,4.172,1028,4.718,1029,5.314,1030,4.73,1031,6.321,1032,3.789,1033,6.321,1034,6.321,1035,6.321,1036,4.73,1037,4.425,1038,3.804,1039,4.73,1040,3.311,1041,4.73]],["title/modules/LoggerModule.html",[91,1.557,101,2.9]],["body/modules/LoggerModule.html",[0,0.013,3,0.09,4,0.09,5,0.08,19,0.009,34,0.413,36,0.1,48,0.006,49,0.006,67,0.781,91,2.16,93,2.128,94,2.998,101,5.714,106,3.223,107,2.128,108,2.367,110,3.351,111,2.367,122,3.336,124,2.059,130,3.129,131,3.595,132,3.595,133,2.956,134,3.336,484,4.794,715,5.367,721,5.367,724,4.259,791,3.129,1028,4.541,1037,4.843,1038,3.595,1042,3.943,1043,3.943,1044,3.943,1045,5.611,1046,5.302,1047,4.47,1048,3.943,1049,6.085,1050,6.085,1051,4.47,1052,4.541,1053,4.47,1054,4.47,1055,4.47,1056,4.47,1057,4.47,1058,6.085]],["title/injectables/LoggerRequestInterceptor.html",[50,0.845,1052,3.272]],["body/injectables/LoggerRequestInterceptor.html",[0,0.009,3,0.057,4,0.057,5,0.051,8,0.939,10,0.167,12,1.104,13,0.955,18,0.433,19,0.009,20,0.878,23,0.77,28,1.404,29,1.132,30,1.246,34,0.314,36,0.064,48,0.004,49,0.004,50,0.847,52,1.015,57,5.013,58,6.029,59,4.686,63,5.647,64,1.514,67,0.499,68,1.797,73,1.409,74,1.043,87,1.459,89,1.157,191,3.538,202,1.043,216,2.231,251,1.015,252,3.079,310,3.785,347,3.895,484,3.778,549,4.635,555,3.728,761,1.714,766,4.497,789,4.001,807,5.005,848,2.001,942,2.522,1029,4.849,1032,3.895,1038,2.3,1052,3.283,1059,2.522,1060,4.312,1061,5.36,1062,5.36,1063,2.859,1064,2.859,1065,2.859,1066,4.213,1067,5.36,1068,4.841,1069,2.859,1070,4.399,1071,4.312,1072,2.859,1073,7.126,1074,2.859,1075,2.859,1076,2.859,1077,3.538,1078,4.399,1079,2.134,1080,2.859,1081,4.399,1082,2.3,1083,2.859,1084,2.859,1085,2.859,1086,2.859,1087,2.859,1088,2.859,1089,2.859,1090,4.399,1091,2.859,1092,2.859,1093,2.859,1094,2.859,1095,2.859,1096,4.399,1097,2.859,1098,2.522,1099,2.859]],["title/interfaces/LoggerSentryConfigInterface.html",[208,0.845,1100,3.272]],["body/interfaces/LoggerSentryConfigInterface.html",[3,0.118,4,0.118,5,0.105,10,0.345,11,1.336,18,0.424,19,0.009,34,0.381,36,0.132,48,0.007,49,0.007,67,1.03,208,1.136,225,1.588,227,3.534,354,1.962,727,5.858,1025,4.4,1026,4.738,1100,5.436,1101,4.742,1102,7.904,1103,7.282,1104,5.895,1105,5.895,1106,6.424,1107,5.895]],["title/injectables/LoggerSentryTransport.html",[50,0.845,1045,3.069]],["body/injectables/LoggerSentryTransport.html",[0,0.013,3,0.084,4,0.084,5,0.075,8,1.38,10,0.246,12,1.07,13,1.267,18,0.419,19,0.009,20,1.032,23,0.746,28,1.361,29,1.097,30,0.871,34,0.367,36,0.094,48,0.006,49,0.006,50,1.124,52,1.493,55,3.708,64,3.09,67,0.734,123,3.833,124,1.937,130,2.943,131,3.382,132,3.382,180,1.819,183,3.347,202,2.127,213,1.876,216,1.312,225,1.133,245,2.412,383,3.382,393,2.781,573,3.138,766,4.599,807,4.431,1026,4.837,1032,4.338,1045,4.084,1101,5.821,1108,5.909,1109,3.708,1110,4.204,1111,4.354,1112,4.204,1113,2.781,1114,3.708,1115,3.859,1116,4.204,1117,4.204,1118,4.204,1119,3.708,1120,4.204,1121,3.138,1122,4.204,1123,4.693,1124,6.383,1125,4.204,1126,4.204,1127,4.204,1128,4.204,1129,4.204,1130,4.204,1131,4.204,1132,4.204]],["title/injectables/LoggerService.html",[50,0.845,484,2.414]],["body/injectables/LoggerService.html",[0,0.009,3,0.06,4,0.06,5,0.053,10,0.173,12,1.431,13,0.982,18,0.561,19,0.009,20,1.135,23,0.998,28,1.82,29,1.466,30,1.583,34,0.319,36,0.066,48,0.005,49,0.005,50,0.871,52,1.052,57,4.149,58,3.374,59,3.145,63,3.374,64,3.833,67,0.518,68,1.862,77,2.614,87,1.513,202,1.081,225,0.798,251,1.052,258,2.614,354,1.218,413,2.212,484,2.489,549,4.671,554,2.614,555,2.227,563,3.636,766,4.367,789,4.091,790,3.988,807,5.245,848,2.074,1026,1.777,1032,2.71,1037,3.837,1040,5.066,1046,4.056,1048,2.614,1073,3.988,1111,2.212,1113,5.159,1115,3.625,1124,2.614,1133,2.614,1134,4.521,1135,5.481,1136,3.988,1137,3.988,1138,4.521,1139,4.521,1140,3.988,1141,3.988,1142,2.963,1143,2.963,1144,4.521,1145,2.614,1146,2.963,1147,2.384,1148,2.963,1149,2.963,1150,2.963,1151,4.521,1152,2.963,1153,4.521,1154,2.963,1155,2.963,1156,2.963,1157,2.963,1158,2.963,1159,2.963,1160,2.963,1161,2.963,1162,2.963,1163,2.963,1164,2.963,1165,2.963,1166,2.963,1167,2.963,1168,4.521]],["title/interfaces/LoggerTransportInterface.html",[208,0.845,1115,2.9]],["body/interfaces/LoggerTransportInterface.html",[3,0.116,4,0.116,5,0.104,10,0.339,12,1.062,13,1.565,18,0.416,19,0.009,20,1.003,23,0.741,28,1.351,29,1.089,30,1.199,34,0.279,36,0.129,48,0.007,49,0.007,64,3.815,67,1.011,208,1.115,225,1.56,766,4.737,807,3.83,1025,5.376,1026,5.229,1032,4.318,1111,5.376,1113,3.83,1115,4.764,1169,5.107,1170,5.79]],["title/injectables/LoggerTransportService.html",[50,0.845,1046,2.9]],["body/injectables/LoggerTransportService.html",[0,0.011,3,0.077,4,0.077,5,0.069,10,0.225,11,1.007,12,1.173,13,1.192,14,4.39,18,0.529,19,0.009,20,0.818,21,3.291,22,3.291,23,0.942,28,1.492,29,1.202,30,1.137,34,0.336,36,0.086,48,0.006,49,0.006,50,1.057,52,1.369,64,3.386,67,0.673,88,4.39,123,3.689,124,1.776,133,2.55,134,2.877,180,1.668,183,3.15,202,2.002,213,3.514,245,2.212,393,2.55,573,2.877,766,4.509,807,2.55,1026,4.979,1029,5.71,1032,3.832,1037,2.699,1046,3.631,1111,4.097,1113,3.631,1115,5.061,1123,3.101,1136,4.842,1145,4.842,1147,3.101,1171,3.401,1172,6.393,1173,6.393,1174,5.489,1175,3.855,1176,3.855,1177,3.855,1178,3.855,1179,3.855,1180,3.855,1181,3.855,1182,3.855,1183,3.855,1184,3.855,1185,3.855,1186,3.855,1187,3.855,1188,3.855,1189,3.855]],["title/interfaces/Response.html",[59,2.516,208,0.845]],["body/interfaces/Response.html",[0,0.015,3,0.099,4,0.099,5,0.088,8,1.619,10,0.288,11,1.192,18,0.523,19,0.009,20,0.93,29,1.222,34,0.351,36,0.11,48,0.007,49,0.007,50,1.252,59,3.728,60,3.966,67,0.861,89,1.709,208,0.95,212,4.357,216,1.539,225,1.328,518,2.956,543,5.621,549,2.829,806,6.459,1060,3.966,1066,4.549,1068,5.227,1071,5.227,1077,5.227,1079,3.68,1082,3.966,1121,3.68,1190,3.966,1191,7.416,1192,6.411,1193,3.68,1194,4.349,1195,4.349,1196,4.349,1197,4.349,1198,4.349]],["title/entities/Role.html",[812,2.238,1199,2.088]],["body/entities/Role.html",[0,0.015,3,0.104,4,0.104,5,0.092,10,0.302,11,1.229,12,1.364,18,0.482,19,0.009,20,0.857,23,0.857,34,0.359,35,2.459,36,0.115,40,2.069,47,4.917,48,0.007,49,0.007,83,2.091,146,2.736,354,1.391,368,3.416,383,4.155,587,4.016,634,4.155,812,3.419,814,3.416,824,3.615,1199,3.19,1200,4.556,1201,5.204,1202,5.165,1203,4.424,1204,4.556,1205,6.699,1206,5.165,1207,5.909,1208,3.855,1209,2.964,1210,5.165,1211,5.165,1212,6.699,1213,5.165,1214,5.165]],["title/controllers/RoleController.html",[78,1.788,1215,3.272]],["body/controllers/RoleController.html",[0,0.009,3,0.059,4,0.059,5,0.052,10,0.171,12,1.118,13,0.973,15,2.442,18,0.438,19,0.009,20,0.975,23,0.84,28,1.421,29,1.145,30,1.359,31,2.413,34,0.375,36,0.065,48,0.005,49,0.005,67,0.511,74,2.221,78,1.193,80,1.229,83,2.049,87,1.494,88,1.679,89,1.727,232,1.754,233,1.55,248,4.596,251,2.882,252,4.264,284,3.227,296,2.813,298,2.354,299,2.961,300,2.048,301,2.961,304,4.847,307,0.913,310,1.55,323,1.839,325,1.679,337,1.935,366,2.88,373,4.059,374,1.839,534,2.823,611,3.26,624,4.847,685,3.341,687,5.802,834,3.534,846,3.807,1199,3.627,1215,3.341,1216,2.581,1217,2.371,1218,4.029,1219,2.961,1220,2.961,1221,2.926,1222,2.354,1223,4.477,1224,4.477,1225,2.926,1226,2.354,1227,4.477,1228,4.264,1229,2.926,1230,1.935,1231,2.354,1232,4.477,1233,2.354,1234,2.926,1235,1.935,1236,4.477,1237,2.354,1238,2.926,1239,2.184,1240,5.202,1241,4.477,1242,2.926,1243,2.926,1244,3.601,1245,1.935,1246,3.134,1247,2.184,1248,1.935,1249,2.581,1250,2.961,1251,2.184,1252,2.048,1253,2.926,1254,2.354,1255,1.839,1256,2.581,1257,2.581,1258,2.926,1259,2.926,1260,2.048,1261,2.048,1262,2.926,1263,2.581,1264,2.926,1265,2.926,1266,2.354,1267,2.581,1268,2.926,1269,2.581,1270,2.926,1271,2.926,1272,2.354,1273,2.354,1274,2.926]],["title/classes/RoleDto.html",[0,0.013,1248,2.9]],["body/classes/RoleDto.html",[0,0.02,2,1.243,3,0.088,4,0.088,5,0.079,8,1.976,10,0.257,11,1.104,12,1.259,18,0.555,19,0.009,20,1.064,23,0.944,34,0.373,36,0.098,43,2.166,48,0.006,49,0.006,76,2.421,83,2.302,188,3.314,225,1.185,251,2.743,269,1.846,307,1.373,347,4.112,354,1.621,376,1.963,432,2.772,433,3.607,434,3.453,435,2.244,534,2.797,555,3.93,590,3.453,591,3.453,605,5.276,608,4.879,609,5.505,610,4.537,611,2.636,612,4.491,613,3.282,615,2.908,616,3.282,618,3.078,619,3.282,620,3.282,864,5.12,1248,3.98,1275,3.879,1276,5.12,1277,4.397,1278,4.397,1279,3.537,1280,3.537,1281,3.537,1282,3.537]],["title/classes/RoleFactory.html",[0,0.013,1283,3.272]],["body/classes/RoleFactory.html",[0,0.017,2,1.598,3,0.114,4,0.114,5,0.101,10,0.33,13,1.541,15,2.36,19,0.009,23,0.723,30,1.17,31,2.81,34,0.374,36,0.126,48,0.007,49,0.007,74,2.06,89,1.486,216,1.763,354,1.911,812,4.151,885,5.786,1199,3.872,1209,3.241,1283,5.294,1284,4.983,1285,6.236,1286,5.649,1287,6.256,1288,4.983,1289,4.216,1290,4.216]],["title/interfaces/RoleInterface.html",[208,0.845,1276,3.272]],["body/interfaces/RoleInterface.html",[3,0.126,4,0.126,5,0.112,10,0.366,11,1.386,12,1.546,18,0.45,19,0.009,20,1.038,34,0.302,36,0.14,48,0.008,49,0.008,208,1.205,225,1.686,354,2.035,589,4.864,874,4.67,1276,5.638,1291,5.52]],["title/modules/RoleModule.html",[91,1.557,102,3.069]],["body/modules/RoleModule.html",[0,0.017,3,0.112,4,0.112,5,0.1,19,0.009,34,0.403,36,0.125,48,0.007,49,0.007,67,0.977,80,2.959,91,2.502,93,2.662,94,3.472,102,5.969,106,3.732,107,2.662,108,2.961,110,3.881,111,2.961,125,3.698,126,2.961,1199,2.662,1209,3.208,1215,5.759,1250,5.64,1251,4.173,1292,4.932,1293,4.932,1294,5.591,1295,4.932,1296,5.591]],["title/injectables/RoleService.html",[50,0.845,1250,2.9]],["body/injectables/RoleService.html",[0,0.014,3,0.061,4,0.061,5,0.055,10,0.179,12,1.292,13,1.006,14,4.791,15,2.596,18,0.506,19,0.009,20,1.036,23,0.936,28,1.644,29,1.324,30,1.459,31,3.209,34,0.364,35,1.456,36,0.068,37,2.899,48,0.005,49,0.005,50,0.892,52,1.086,67,0.534,73,1.507,74,1.115,89,1.761,126,1.62,202,1.688,213,2.781,216,2.352,284,2.96,376,1.365,534,2.872,624,4.362,834,2.363,889,2.282,890,4.362,892,3.456,908,2.282,1199,3.805,1209,1.755,1217,2.452,1218,4.122,1219,3.062,1220,3.062,1230,3.062,1235,3.062,1239,2.282,1240,5.274,1245,2.023,1246,3.241,1247,2.282,1248,2.023,1249,2.697,1250,3.062,1297,2.697,1298,3.724,1299,3.058,1300,4.63,1301,3.058,1302,3.058,1303,3.058,1304,3.724,1305,3.058,1306,3.058,1307,3.058,1308,3.058,1309,2.46,1310,3.456,1311,3.058,1312,3.058,1313,4.63,1314,3.058,1315,6.232,1316,2.46,1317,2.697,1318,4.494,1319,4.63,1320,3.058,1321,3.058]],["title/guards/RolesGuard.html",[325,2.516,1252,3.069]],["body/guards/RolesGuard.html",[0,0.014,3,0.096,4,0.096,5,0.086,8,1.576,10,0.281,12,1.171,13,1.387,18,0.459,19,0.009,23,0.817,28,1.489,29,1.2,30,0.994,34,0.369,36,0.107,40,1.886,48,0.006,49,0.006,50,1.23,57,3.016,67,0.838,87,2.45,89,1.679,177,3.016,191,3.86,202,1.75,216,1.992,549,2.754,791,3.359,911,4.233,1066,5.351,1217,3.381,1252,4.468,1255,3.016,1256,4.233,1257,4.233,1322,4.799,1323,4.233,1324,7.645,1325,4.799,1326,8.184,1327,4.799,1328,6.383,1329,4.799,1330,4.468,1331,5.134,1332,4.233,1333,6.383,1334,4.799,1335,4.799,1336,4.799,1337,4.799,1338,4.799,1339,4.799,1340,4.799]],["title/interfaces/SendEmailServiceInterface.html",[208,0.845,730,2.9]],["body/interfaces/SendEmailServiceInterface.html",[3,0.121,4,0.121,5,0.107,10,0.351,12,1.102,13,1.6,18,0.432,19,0.009,23,0.768,28,1.401,29,1.129,30,1.243,31,2.918,34,0.29,36,0.134,48,0.007,49,0.007,208,1.156,225,1.617,245,4.226,246,3.346,505,5.221,507,3.971,546,4.481,730,4.872,746,5.925,1341,6.497,1342,5.296,1343,6.004]],["title/interfaces/ServerConfigInterface.html",[208,0.845,1344,3.272]],["body/interfaces/ServerConfigInterface.html",[3,0.114,4,0.114,5,0.101,10,0.331,11,1.304,18,0.585,19,0.009,20,1.095,29,1.336,34,0.274,36,0.126,48,0.007,49,0.007,208,1.092,211,6.549,212,4.655,225,1.527,227,3.398,507,3.75,1344,5.305,1345,5,1346,7.182,1347,7.182,1348,6.549,1349,8.142,1350,5.669]],["title/injectables/TransformInterceptor.html",[50,0.845,1193,3.272]],["body/injectables/TransformInterceptor.html",[0,0.015,3,0.1,4,0.1,5,0.089,8,1.634,10,0.291,12,0.913,13,1.42,18,0.358,19,0.009,20,0.637,23,0.637,28,1.161,29,0.935,30,1.03,34,0.352,36,0.111,48,0.007,49,0.007,50,1.259,52,1.766,59,2.855,60,5.873,67,0.869,89,1.719,208,0.958,212,2.983,216,1.553,518,2.983,543,4.576,549,3.751,806,5.258,1060,5.873,1066,5.428,1068,6.237,1071,5.873,1077,5.258,1079,3.713,1082,4.002,1121,3.713,1190,4.002,1191,6.839,1192,4.389,1193,4.879,1194,4.389,1195,4.389,1196,4.389,1197,4.389,1198,4.389,1351,4.975,1352,4.975]],["title/classes/UpdateRoleDto.html",[0,0.013,1240,3.069]],["body/classes/UpdateRoleDto.html",[0,0.022,2,1.661,3,0.118,4,0.118,5,0.105,10,0.343,11,1.333,12,1.448,18,0.522,19,0.009,20,1.055,23,0.752,34,0.351,36,0.131,48,0.007,49,0.007,83,1.833,251,2.58,269,2.466,307,1.833,430,4.724,432,3.348,434,4.17,435,2.998,608,3.885,626,4.111,627,5.181,1240,5.087,1353,6.41]],["title/classes/UpdateUserDto.html",[0,0.013,1354,3.069]],["body/classes/UpdateUserDto.html",[0,0.018,2,1.673,3,0.119,4,0.119,5,0.106,8,2.397,19,0.009,34,0.399,36,0.132,48,0.007,49,0.007,225,1.594,262,2.817,285,2.56,307,1.847,353,3.913,354,1.594,577,3.718,579,5.11,629,4.759,640,6.439,641,5.219,647,3.547,648,3.913,651,5.219,652,3.913,834,3.02,1354,5.11,1355,5.219,1356,6.983,1357,5.916]],["title/controllers/UploadController.html",[78,1.788,1358,3.272]],["body/controllers/UploadController.html",[0,0.017,3,0.083,4,0.083,5,0.128,10,0.24,12,1.053,13,1.247,15,2.015,18,0.413,19,0.009,20,0.847,23,0.735,28,1.34,29,1.079,30,1.189,34,0.401,36,0.092,37,1.628,48,0.006,49,0.006,58,5.626,59,4.326,67,0.718,68,3.608,70,2.876,78,1.675,80,1.725,83,1.792,87,2.097,89,1.51,216,1.282,232,2.463,299,2.717,301,3.797,307,1.282,310,2.176,337,2.717,366,2.176,374,2.582,375,3.624,376,1.834,386,3.305,543,2.876,583,2.876,1260,2.876,1261,2.876,1358,4.285,1359,3.624,1360,3.624,1361,5.064,1362,5.741,1363,3.624,1364,5.323,1365,4.109,1366,4.109,1367,4.109,1368,4.109,1369,5.741,1370,4.109,1371,5.064,1372,4.109,1373,5.064,1374,4.109,1375,3.305,1376,4.109,1377,4.285,1378,4.618,1379,4.109,1380,4.618,1381,3.624,1382,3.624,1383,3.797,1384,3.066,1385,3.624,1386,4.109,1387,4.109,1388,4.109,1389,4.109,1390,4.109,1391,4.109,1392,4.109,1393,4.109,1394,4.109,1395,4.109,1396,4.109,1397,4.109,1398,4.109]],["title/modules/UploadModule.html",[91,1.557,103,3.069]],["body/modules/UploadModule.html",[0,0.015,3,0.103,4,0.103,5,0.092,19,0.009,34,0.42,36,0.115,48,0.007,49,0.007,67,0.899,68,3.235,70,3.604,80,2.807,91,2.373,93,2.452,94,3.293,103,5.841,106,3.541,107,2.452,108,2.727,110,3.681,111,2.727,122,3.843,124,2.372,583,3.604,1358,5.54,1375,4.141,1377,3.843,1381,4.541,1382,4.541,1383,5.519,1384,3.843,1385,4.541,1399,4.541,1400,4.541,1401,5.149,1402,5.149,1403,5.149,1404,5.149,1405,4.141,1406,3.843,1407,4.541,1408,4.541,1409,5.149,1410,5.149]],["title/entities/User.html",[40,1.153,812,2.238]],["body/entities/User.html",[0,0.009,3,0.062,4,0.062,5,0.055,8,1.016,10,0.181,11,0.857,18,0.617,19,0.009,20,1.061,21,3.373,23,1.025,29,1.178,34,0.325,35,1.473,36,0.069,40,1.48,42,3.373,43,2.301,44,3.938,45,3.269,47,5.216,48,0.005,49,0.005,83,2.501,146,1.638,177,5.212,225,0.833,246,2.362,269,2.362,285,2.435,354,0.833,518,4.033,555,2.301,587,2.8,647,3.373,648,3.721,652,3.721,670,3.938,739,4.678,812,2.384,813,3.95,814,2.046,824,2.165,1040,2.165,1201,3.938,1203,3.747,1204,4.119,1207,4.963,1208,2.308,1209,1.775,1330,3.269,1411,2.728,1412,3.093,1413,8.541,1414,5.28,1415,3.093,1416,7.561,1417,6.669,1418,3.093,1419,4.67,1420,3.093,1421,3.093,1422,3.093,1423,3.093,1424,3.093,1425,3.093,1426,3.093,1427,3.093,1428,4.67,1429,3.093,1430,3.089,1431,3.093,1432,3.093,1433,3.093]],["title/controllers/UserController.html",[78,1.788,1434,3.272]],["body/controllers/UserController.html",[0,0.008,3,0.053,4,0.053,5,0.047,10,0.154,12,1.057,13,0.897,15,2.533,18,0.414,19,0.009,20,0.945,23,0.849,28,1.345,29,1.083,30,1.374,31,2.283,34,0.378,36,0.059,37,2.629,40,2.086,48,0.004,49,0.004,67,0.461,74,2.101,78,1.075,80,1.107,83,1.953,88,1.513,89,1.515,180,1.141,202,0.962,213,2.793,216,1.289,232,1.581,233,1.397,248,4.38,251,2.816,252,4.034,262,1.256,284,3.314,285,1.141,296,2.596,298,2.121,299,2.732,300,1.846,301,2.732,304,4.646,307,0.823,309,2.121,310,1.397,323,1.657,325,1.513,337,1.744,366,2.188,368,1.744,373,3.8,374,1.657,407,2.188,534,2.706,577,4.17,579,2.891,611,3.053,632,1.968,644,1.968,685,3.083,687,5.637,834,3.388,846,3.564,1217,1.397,1218,3.812,1219,3.368,1220,2.732,1222,2.121,1226,2.121,1228,4.034,1230,1.744,1231,2.121,1233,2.121,1235,1.744,1237,2.121,1239,1.968,1244,3.322,1245,1.744,1247,1.968,1254,2.121,1255,1.657,1260,1.846,1261,1.846,1263,2.326,1266,2.121,1269,2.326,1272,2.121,1273,2.121,1354,5.027,1434,3.083,1435,2.326,1436,5.763,1437,2.637,1438,4.131,1439,4.131,1440,2.637,1441,4.131,1442,2.637,1443,4.131,1444,2.637,1445,4.131,1446,2.637,1447,4.131,1448,2.637,1449,2.637,1450,2.637,1451,2.326,1452,4.096,1453,2.121,1454,2.121,1455,2.121,1456,2.121,1457,1.968,1458,2.326,1459,2.121,1460,2.326,1461,2.637,1462,2.326,1463,2.326,1464,2.326,1465,2.637,1466,2.637,1467,2.637,1468,5.092,1469,2.326,1470,4.131,1471,2.637,1472,2.637,1473,2.637]],["title/interfaces/UserCreatableInterface.html",[208,0.845,630,3.272]],["body/interfaces/UserCreatableInterface.html",[3,0.131,4,0.131,5,0.117,19,0.009,34,0.315,36,0.146,48,0.008,49,0.008,208,1.259,225,1.76,354,2.088,630,5.785,645,5.785,649,4.877,1430,4.322,1474,4.877,1475,4.877,1476,6.534]],["title/classes/UserDto.html",[0,0.013,262,2.088]],["body/classes/UserDto.html",[0,0.015,2,0.741,3,0.053,4,0.053,5,0.047,8,1.349,10,0.153,11,0.754,12,1.315,18,0.576,19,0.009,20,1.026,22,1.571,23,0.983,29,1.08,34,0.334,36,0.058,40,2.021,42,3.04,43,1.291,44,3.55,48,0.004,49,0.004,76,1.443,83,2.399,89,1.081,188,2.263,225,0.706,246,2.906,251,2.877,262,1.957,269,2.906,307,0.818,347,3.04,354,1.107,376,1.169,432,3.189,433,4.607,434,3.295,435,1.337,464,5.927,465,6.5,534,2.068,555,3.53,590,2.358,591,2.358,605,4.378,608,3.798,609,4.286,610,4.74,611,1.571,612,3.067,613,1.955,615,1.733,616,1.955,618,1.834,619,4.656,620,1.955,631,5.018,644,1.955,647,3.04,648,3.354,652,4.577,864,3.785,945,3.625,1040,1.834,1201,3.55,1217,2.177,1246,1.834,1279,2.107,1280,2.107,1281,2.107,1282,2.107,1330,3.55,1414,1.955,1430,1.733,1477,2.311,1478,4.11,1479,4.11,1480,4.11,1481,2.62,1482,2.62,1483,4.079,1484,2.62,1485,2.62,1486,5.742,1487,5.567,1488,5.071,1489,2.62,1490,2.62,1491,2.62,1492,2.62,1493,2.62,1494,4.126,1495,3.625,1496,2.62,1497,2.62,1498,2.107,1499,4.11,1500,4.11,1501,3.306,1502,4.619,1503,5.071,1504,5.071,1505,2.62,1506,2.62,1507,2.62,1508,2.62]],["title/classes/UserFactory.html",[0,0.013,1509,3.272]],["body/classes/UserFactory.html",[0,0.016,2,1.499,3,0.106,4,0.106,5,0.095,10,0.31,13,1.479,15,2.291,19,0.009,23,0.678,30,1.097,31,2.698,34,0.363,36,0.118,40,2.089,48,0.007,49,0.007,74,1.933,89,1.394,216,2.126,285,2.947,354,1.835,547,4.675,812,4.054,885,5.617,924,4.675,1285,6.054,1287,6.007,1288,4.675,1289,3.955,1290,3.955,1509,5.083,1510,4.675,1511,5.3,1512,3.955,1513,5.3,1514,5.3,1515,5.3,1516,5.3,1517,5.3,1518,5.3,1519,5.3,1520,4.263]],["title/interfaces/UserInterface.html",[208,0.845,1430,2.9]],["body/interfaces/UserInterface.html",[3,0.092,4,0.092,5,0.082,10,0.267,11,1.133,18,0.611,19,0.009,20,1.15,29,1.517,34,0.298,36,0.102,40,1.202,42,4.493,44,5.246,48,0.006,49,0.006,208,0.88,225,1.231,269,3.147,285,3.243,354,1.664,518,4.837,555,3.447,589,4.195,647,4.493,648,4.957,652,4.957,670,5.246,874,3.411,1201,5.246,1330,4.898,1430,4.086,1521,4.031,1522,4.957,1523,4.57]],["title/modules/UserModule.html",[91,1.557,104,2.628]],["body/modules/UserModule.html",[0,0.015,3,0.101,4,0.101,5,0.09,19,0.009,34,0.407,36,0.112,40,1.726,48,0.007,49,0.007,67,0.874,80,2.756,91,2.33,93,2.384,94,3.233,101,5.477,104,5.191,106,3.476,107,2.384,108,2.652,110,3.614,111,3.476,125,3.311,126,2.652,407,4.693,724,4.594,1434,5.465,1459,4.027,1512,3.736,1524,4.416,1525,4.416,1526,5.006,1527,4.416,1528,5.006,1529,5.465,1530,5.006,1531,5.006,1532,5.006,1533,5.006]],["title/classes/UserNotFoundException.html",[0,0.013,1534,3.272]],["body/classes/UserNotFoundException.html",[0,0.017,2,1.609,3,0.114,4,0.114,5,0.102,8,2.339,10,0.333,11,1.307,18,0.409,19,0.009,20,0.912,23,0.912,34,0.344,36,0.127,48,0.007,49,0.007,67,0.994,202,2.836,255,4.246,354,1.919,384,3.982,792,5.445,794,5.018,804,6.256,1310,5.805,1534,5.317,1535,6.861,1536,5.018,1537,7.124,1538,5.689,1539,5.689,1540,5.689,1541,5.689]],["title/interfaces/UserOwnableInterface.html",[208,0.845,1542,3.527]],["body/interfaces/UserOwnableInterface.html",[3,0.13,4,0.13,5,0.116,10,0.377,11,1.412,18,0.464,19,0.009,20,1.052,36,0.144,48,0.008,49,0.008,208,1.244,225,1.739,657,4.054,1474,4.819,1542,6.191,1543,5.695]],["title/controllers/UserReportController.html",[78,1.788,1529,3.272]],["body/controllers/UserReportController.html",[0,0.014,3,0.092,4,0.092,5,0.082,10,0.266,13,1.339,15,2.454,19,0.009,23,0.789,30,1.277,34,0.398,36,0.102,37,2.443,40,1.198,48,0.006,49,0.006,67,0.796,78,1.858,80,1.914,83,1.925,88,2.615,89,1.621,180,1.972,202,1.662,213,2.752,216,1.423,232,2.732,301,4.078,307,1.423,337,3.014,366,3.266,368,4.078,374,2.864,407,3.266,644,3.401,1217,2.414,1255,2.864,1260,3.19,1261,3.19,1373,4.02,1451,4.02,1452,5.62,1453,3.666,1455,3.666,1456,3.666,1457,3.401,1459,3.666,1460,4.02,1462,4.02,1463,4.02,1464,4.02,1469,4.02,1529,4.601,1544,6.163,1545,4.02,1546,8.062,1547,7.486,1548,4.557,1549,4.557,1550,6.166,1551,4.557,1552,4.557,1553,4.557,1554,4.557,1555,4.02,1556,4.557,1557,4.557,1558,4.557,1559,4.557]],["title/entities/UserRole.html",[812,2.238,1203,2.322]],["body/entities/UserRole.html",[0,0.014,3,0.092,4,0.092,5,0.082,8,1.505,10,0.268,11,1.136,18,0.539,19,0.009,20,0.96,23,0.96,34,0.378,35,2.182,36,0.102,40,2.237,47,5.183,48,0.006,49,0.006,83,2.342,146,4.151,225,1.235,354,1.235,509,3.686,587,3.71,654,4.315,656,4.715,657,3.337,812,3.159,814,3.031,820,5.459,824,3.208,825,6.181,1199,4.051,1203,3.278,1208,3.42,1522,4.093,1560,4.042,1561,6.189,1562,4.583,1563,4.583,1564,6.189,1565,4.583,1566,4.583,1567,4.042,1568,4.583]],["title/controllers/UserRoleController.html",[78,1.788,1569,3.272]],["body/controllers/UserRoleController.html",[0,0.009,3,0.063,4,0.063,5,0.056,10,0.183,12,1.041,13,1.025,15,2.479,18,0.408,19,0.009,20,0.91,23,0.807,28,1.323,29,1.066,30,1.307,31,2.5,34,0.375,36,0.07,40,1.492,48,0.005,49,0.005,67,0.548,74,2.301,78,1.278,80,1.316,83,1.97,87,1.6,88,1.799,89,1.659,146,3.584,232,1.879,233,1.66,248,4.417,251,2.854,252,4.417,296,2.964,299,3.12,300,2.194,301,3.12,304,4.737,307,0.979,310,1.66,323,1.97,325,1.799,337,2.073,366,2.499,373,4.233,374,1.97,534,2.573,611,3.4,653,4.977,654,3.727,685,2.34,687,5.666,834,3.766,846,3.97,1199,2.701,1217,1.66,1218,4.174,1219,3.12,1220,3.12,1222,2.521,1226,2.521,1228,4.417,1230,2.073,1231,2.521,1233,2.521,1235,2.073,1237,2.521,1244,3.794,1245,2.073,1246,3.302,1251,2.34,1252,2.194,1254,2.521,1255,1.97,1260,2.194,1261,2.194,1266,2.521,1267,2.765,1272,2.521,1273,2.521,1455,2.521,1456,2.521,1494,2.073,1555,2.765,1569,3.521,1570,2.765,1571,3.135,1572,4.717,1573,4.717,1574,7.592,1575,3.135,1576,4.717,1577,3.135,1578,4.717,1579,3.135,1580,4.717,1581,3.135,1582,3.135,1583,2.765,1584,3.12,1585,3.135,1586,3.135,1587,3.135,1588,3.135,1589,3.135,1590,3.135]],["title/interfaces/UserRoleCreatableInterface.html",[208,0.845,1591,3.527]],["body/interfaces/UserRoleCreatableInterface.html",[3,0.124,4,0.124,5,0.111,10,0.362,11,1.376,18,0.539,19,0.009,20,1.118,36,0.138,48,0.008,49,0.008,208,1.192,225,1.667,654,3.407,656,5.275,657,3.997,1199,2.946,1475,4.617,1591,6.034,1592,4.976]],["title/classes/UserRoleDto.html",[0,0.013,1494,2.9]],["body/classes/UserRoleDto.html",[0,0.019,2,1.095,3,0.078,4,0.078,5,0.069,8,1.809,10,0.226,11,1.011,18,0.567,19,0.009,20,1.031,23,0.981,34,0.37,36,0.086,43,3.158,48,0.006,49,0.006,76,2.133,83,2.392,225,1.044,251,2.275,307,1.209,347,4.421,354,1.484,376,1.729,432,3.216,433,3.302,435,1.977,534,2.613,555,3.775,590,3.16,591,3.16,605,5.069,608,4.617,609,5.21,610,4.239,611,2.322,612,4.111,613,2.891,615,2.562,616,2.891,618,2.712,619,2.891,620,2.891,626,2.712,654,3.844,656,4.027,657,3.052,658,4.858,659,4.858,660,3.417,662,5.653,864,4.783,1199,3.052,1248,4.878,1279,3.116,1280,3.116,1281,3.116,1282,3.116,1414,2.891,1494,3.643,1495,4.858,1498,5.615,1522,4.239,1593,3.874,1594,3.874,1595,3.874,1596,3.874]],["title/classes/UserRoleFactory.html",[0,0.013,1597,3.272]],["body/classes/UserRoleFactory.html",[0,0.017,2,1.603,3,0.114,4,0.114,5,0.101,10,0.331,13,1.544,15,2.364,19,0.009,23,0.725,30,1.174,31,2.816,34,0.343,36,0.126,40,1.491,48,0.007,49,0.007,74,2.067,89,1.491,146,3.765,216,1.77,354,1.915,654,3.914,812,4.156,885,5.796,1203,4.313,1209,3.253,1285,6.246,1289,4.231,1290,4.231,1597,5.305,1598,5,1599,5.669]],["title/interfaces/UserRoleInterface.html",[208,0.845,1522,2.9]],["body/interfaces/UserRoleInterface.html",[3,0.121,4,0.121,5,0.107,10,0.351,11,1.352,18,0.53,19,0.009,20,1.11,34,0.29,36,0.134,48,0.007,49,0.007,208,1.156,225,1.617,354,1.984,589,4.777,654,3.306,656,5.221,657,3.956,874,4.481,1522,4.872,1592,4.829,1600,5.296]],["title/modules/UserRoleModule.html",[91,1.557,105,3.069]],["body/modules/UserRoleModule.html",[0,0.016,3,0.11,4,0.11,5,0.098,19,0.009,34,0.401,36,0.123,40,2.013,48,0.007,49,0.007,67,0.96,80,2.927,91,2.475,93,2.617,94,3.434,105,5.943,106,3.692,107,2.617,108,2.911,110,3.839,111,2.911,125,3.636,126,2.911,146,2.911,654,3.027,1203,2.911,1209,3.154,1251,4.102,1295,4.848,1569,5.714,1584,5.615,1601,4.848,1602,4.848,1603,5.497,1604,5.497]],["title/injectables/UserRoleService.html",[50,0.845,1584,2.9]],["body/injectables/UserRoleService.html",[0,0.015,3,0.067,4,0.067,5,0.059,10,0.194,12,1.271,13,1.068,14,4.728,15,2.578,18,0.498,19,0.009,20,1.009,23,0.929,28,1.617,29,1.303,30,1.435,31,3.179,34,0.363,35,1.578,36,0.074,37,2.876,40,1.293,48,0.005,49,0.005,50,0.947,52,1.176,67,0.579,73,1.632,74,1.208,89,1.706,126,1.755,146,3.98,202,1.793,213,2.895,216,2.266,376,1.479,534,2.645,653,4.54,654,4.138,834,2.51,889,2.473,890,4.54,892,3.67,908,2.473,1201,3.442,1203,4.088,1209,1.901,1218,4.29,1219,3.252,1220,3.252,1230,3.252,1235,3.252,1245,2.192,1246,3.442,1298,3.955,1304,3.955,1309,2.665,1310,3.67,1316,2.665,1317,2.923,1318,3.955,1494,2.192,1583,2.923,1584,3.252,1605,2.923,1606,3.314,1607,4.917,1608,3.314,1609,3.314,1610,3.314,1611,3.314,1612,3.314,1613,3.314,1614,3.314,1615,3.314,1616,4.917,1617,3.314,1618,5.863,1619,3.314]],["title/classes/UserSeeder.html",[0,0.013,1620,3.527]],["body/classes/UserSeeder.html",[0,0.015,2,1.386,3,0.098,4,0.098,5,0.088,10,0.287,12,1.188,13,1.406,15,2.206,19,0.009,23,0.627,30,1.015,34,0.372,36,0.109,37,3.261,40,2.027,48,0.007,49,0.007,146,2.596,216,2.406,354,1.744,656,4.067,657,3.082,834,3.699,1203,2.596,1217,3.428,1283,3.657,1289,3.657,1290,3.657,1509,3.657,1597,3.657,1620,5.206,1621,4.323,1622,7.247,1623,6.799,1624,4.901,1625,4.901,1626,4.901,1627,4.901,1628,4.901,1629,6.472,1630,4.323,1631,4.901,1632,6.472,1633,4.901,1634,6.472,1635,4.901,1636,4.901,1637,4.901,1638,4.901]],["title/injectables/UserService.html",[50,0.845,407,2.322]],["body/injectables/UserService.html",[0,0.008,3,0.069,4,0.03,5,0.027,10,0.089,11,0.48,12,1.181,13,0.568,14,4.226,15,2.5,18,0.476,19,0.009,20,1.046,23,0.867,28,1.502,29,1.21,30,1.333,31,3.137,34,0.319,35,0.722,36,0.034,37,2.621,40,2.237,41,1.952,42,3.44,43,0.747,44,1.061,48,0.003,49,0.003,50,0.504,52,0.538,67,0.265,73,1.7,74,2.47,89,1.911,107,1.643,126,0.803,202,0.954,212,3.037,213,2.872,216,2.115,243,3.621,244,5.345,246,2.844,247,1.003,251,0.929,262,0.722,269,2.127,283,4.367,284,2.454,285,3.187,294,3.043,310,2.683,368,1.73,376,0.677,392,1.952,407,1.386,478,3.043,484,2.99,489,1.337,502,1.73,508,1.22,518,2.461,534,2.066,549,1.98,555,2.827,573,1.132,577,2.58,579,1.831,663,1.061,749,2.104,756,3.243,761,0.909,766,0.835,834,1.335,836,1.22,848,1.831,886,1.337,889,1.132,890,2.874,892,2.575,908,1.132,922,2.308,925,4.086,1113,1.003,1218,2.715,1219,1.73,1220,1.73,1228,2.415,1230,1.73,1235,1.73,1239,1.132,1245,1.003,1247,1.132,1298,2.104,1304,2.104,1309,1.22,1310,1.132,1316,1.22,1318,2.775,1354,4.016,1458,1.337,1512,1.132,1520,2.104,1534,1.952,1639,1.337,1640,2.616,1641,3.45,1642,3.45,1643,3.45,1644,2.616,1645,2.616,1646,1.516,1647,1.516,1648,2.616,1649,1.516,1650,1.516,1651,1.516,1652,1.516,1653,1.516,1654,1.516,1655,1.516,1656,2.616,1657,2.616,1658,1.516,1659,6.234,1660,1.516,1661,3.043,1662,4.632,1663,1.516,1664,1.516,1665,2.616,1666,2.616,1667,2.616,1668,1.516,1669,1.516,1670,1.516,1671,1.337,1672,1.516,1673,1.516,1674,2.616,1675,1.516,1676,1.516,1677,2.616,1678,1.516,1679,1.516,1680,2.616,1681,3.45,1682,5.066,1683,2.616,1684,2.616,1685,1.516,1686,1.516,1687,1.516,1688,1.516,1689,1.516,1690,1.516,1691,1.337,1692,1.516,1693,1.337,1694,1.516,1695,1.516,1696,1.516,1697,1.516,1698,2.616,1699,2.616,1700,1.516,1701,1.337,1702,1.516,1703,1.516,1704,1.516,1705,1.516,1706,1.337,1707,1.516,1708,1.516]],["title/classes/UserSubscriber.html",[0,0.013,1709,3.272]],["body/classes/UserSubscriber.html",[0,0.006,2,0.552,3,0.039,4,0.039,5,0.035,8,1.063,10,0.114,12,1.177,13,0.703,15,2.482,18,0.441,19,0.009,21,1.169,23,0.821,28,1.43,29,1.152,30,1.328,34,0.31,35,0.929,36,0.044,37,3.037,40,2.169,48,0.003,49,0.003,67,0.341,73,2.045,74,1.955,76,1.783,89,1.687,146,1.033,216,2.247,246,2.03,247,3.197,255,2.417,269,1.36,285,1.401,289,1.721,368,2.142,502,1.29,525,3.662,534,2.186,541,2.856,618,1.366,663,1.366,670,1.366,679,3.662,762,2.267,775,3.662,843,2.605,848,2.267,1098,2.856,1113,2.746,1199,2.754,1203,1.715,1209,1.119,1217,1.715,1228,2.267,1512,1.456,1520,2.605,1567,1.721,1661,1.721,1671,1.721,1691,2.856,1693,1.721,1701,1.721,1709,2.417,1710,1.721,1711,4.152,1712,3.238,1713,3.238,1714,3.238,1715,3.238,1716,3.238,1717,3.238,1718,3.238,1719,4.834,1720,3.238,1721,7.568,1722,7.336,1723,1.951,1724,5.784,1725,3.238,1726,1.951,1727,3.238,1728,1.951,1729,3.238,1730,1.951,1731,3.238,1732,1.951,1733,3.238,1734,1.951,1735,3.238,1736,1.951,1737,1.951,1738,1.951,1739,3.238,1740,5.362,1741,1.951,1742,1.951,1743,1.951,1744,1.951,1745,1.951,1746,3.238,1747,3.238,1748,1.951,1749,1.951,1750,1.951,1751,1.951,1752,1.951,1753,1.951,1754,4.834,1755,4.834,1756,5.362,1757,3.238,1758,1.951,1759,1.951,1760,1.951,1761,1.951,1762,1.951,1763,1.951,1764,1.951,1765,1.951,1766,5.784,1767,1.951,1768,3.238,1769,3.238,1770,3.238,1771,3.238,1772,5.784,1773,3.238,1774,3.238,1775,3.238,1776,3.238,1777,3.238,1778,2.856,1779,1.951,1780,4.152,1781,1.951,1782,1.951,1783,1.951,1784,1.951,1785,1.951,1786,1.951,1787,1.951,1788,4.152,1789,1.951,1790,1.951,1791,2.856,1792,1.951,1793,1.951]],["title/injectables/awsS3UploadService.html",[50,0.845,1383,2.9]],["body/injectables/awsS3UploadService.html",[0,0.01,3,0.07,4,0.07,5,0.132,10,0.204,11,0.936,12,1.356,13,1.108,14,1.999,15,2.25,18,0.478,19,0.009,20,1.022,23,0.85,28,1.409,29,1.135,30,1.056,31,2.633,34,0.341,36,0.078,37,2.021,48,0.005,49,0.005,50,0.983,52,1.237,67,0.609,73,1.716,74,2.201,76,1.918,89,1.342,123,3.52,124,1.605,180,1.508,183,2.928,202,1.86,213,3.408,216,1.884,296,2.189,321,2.6,393,2.304,502,2.304,583,5.884,584,2.802,585,5.69,586,2.802,756,2.439,761,2.088,762,2.439,767,3.073,930,3.808,933,4.5,1360,3.073,1361,4.5,1363,4.5,1364,4.856,1383,3.375,1384,2.6,1406,2.6,1407,3.073,1408,3.073,1794,6.239,1795,3.073,1796,6.037,1797,5.102,1798,3.484,1799,3.484,1800,6.037,1801,6.645,1802,3.484,1803,3.073,1804,3.484,1805,3.484,1806,3.484,1807,3.484,1808,3.484,1809,3.484,1810,3.484,1811,3.484,1812,3.484,1813,3.484,1814,3.484,1815,3.484,1816,3.484,1817,3.073,1818,3.484,1819,3.484,1820,3.484,1821,3.484,1822,3.484,1823,3.484,1824,3.484,1825,3.484,1826,2.802,1827,3.484,1828,3.484,1829,5.102,1830,3.484,1831,3.484,1832,3.484]],["title/coverage.html",[1833,4.831]],["body/coverage.html",[0,0.024,1,1.116,5,0.043,6,1.223,7,1.223,18,0.1,19,0.009,39,1.035,40,0.847,43,0.683,48,0.002,49,0.002,50,1.462,51,1.035,53,1.223,54,1.223,59,0.796,69,1.116,74,0.506,78,2.351,79,1.035,81,1.223,85,0.917,91,0.492,128,0.872,130,0.971,133,0.917,137,1.116,146,2.321,152,1.116,153,1.116,155,1.035,157,1.035,164,1.035,166,0.917,168,1.035,186,0.872,198,1.116,201,1.223,208,1.462,224,1.035,226,1.948,227,3.107,230,1.035,231,1.223,233,1.707,236,1.035,240,1.035,246,0.582,262,0.66,267,1.035,273,0.971,276,0.917,279,0.971,284,0.735,308,1.116,312,0.831,314,1.035,323,0.872,325,0.796,326,0.917,351,2.899,352,1.223,356,1.035,357,1.223,358,1.223,377,1.035,384,1.695,390,0.971,391,1.223,394,0.917,399,1.035,407,0.735,425,1.223,426,1.035,438,1.223,444,0.971,445,0.971,461,1.223,468,1.948,474,1.223,484,0.764,503,1.116,505,0.872,510,0.971,576,1.223,577,0.872,581,1.035,582,1.223,583,1.695,587,0.831,588,1.223,589,0.831,605,0.917,606,1.223,607,1.223,622,1.223,623,1.223,624,0.971,625,1.223,626,2.703,628,1.223,629,1.948,630,1.035,632,1.807,642,1.116,643,1.116,653,0.971,654,3.176,655,1.223,663,0.971,664,1.223,681,1.035,682,1.223,691,1.035,704,1.223,711,1.035,718,1.035,725,1.948,726,1.948,727,3.874,730,0.917,741,1.223,753,1.116,782,1.116,783,1.223,784,1.948,792,0.971,810,1.223,811,1.223,812,1.971,813,0.708,815,1.223,826,0.971,827,1.116,828,1.223,829,1.223,850,1.116,851,1.223,852,1.948,854,0.971,859,1.223,868,1.223,883,1.223,926,1.116,927,1.223,930,1.035,931,1.223,946,1.116,951,1.223,952,1.223,955,1.223,956,2.405,959,1.035,960,1.223,964,1.116,969,1.223,976,1.223,978,1.035,979,1.223,982,1.116,983,1.223,984,1.223,998,1.223,999,1.223,1000,1.223,1011,1.223,1013,1.223,1014,1.223,1024,1.035,1025,2.405,1028,1.035,1029,2.405,1045,0.971,1046,0.917,1052,1.035,1059,1.223,1100,1.035,1101,1.116,1108,1.223,1109,1.223,1115,0.917,1133,1.223,1169,1.223,1171,1.223,1190,1.948,1193,1.035,1199,1.534,1200,2.136,1203,1.283,1215,1.035,1216,1.223,1217,0.735,1240,0.971,1248,0.917,1250,0.917,1252,0.971,1275,1.223,1276,1.035,1283,1.035,1284,1.223,1291,1.223,1297,1.223,1323,1.223,1331,1.116,1341,1.223,1342,1.223,1344,1.035,1345,1.223,1353,1.223,1354,0.971,1355,1.223,1358,1.035,1359,1.223,1377,1.035,1378,1.116,1380,1.116,1383,0.917,1405,1.116,1406,1.035,1411,2.136,1430,0.917,1434,1.035,1435,1.223,1454,1.116,1457,1.035,1474,1.807,1475,1.807,1477,1.223,1483,1.116,1487,1.116,1494,0.917,1498,1.116,1501,1.116,1502,1.116,1509,1.035,1510,1.223,1521,1.223,1522,0.917,1529,1.035,1534,1.035,1535,1.223,1536,1.223,1542,1.116,1543,1.223,1544,1.223,1545,1.223,1560,2.136,1569,1.035,1570,1.223,1584,0.917,1591,1.116,1592,1.948,1597,1.035,1598,1.223,1600,1.223,1605,1.223,1620,1.116,1621,1.223,1639,1.223,1709,1.035,1710,1.223,1778,8.027,1794,1.223,1795,1.223,1833,1.116,1834,1.387,1835,1.387,1836,1.387,1837,7.446,1838,7.082,1839,6.398,1840,5.644,1841,8.281,1842,8.594,1843,1.223,1844,1.223,1845,1.223,1846,1.223,1847,1.223,1848,1.223,1849,1.223,1850,1.223,1851,1.223,1852,2.843,1853,2.136,1854,1.223,1855,1.223,1856,1.223,1857,5.182,1858,2.136,1859,2.136,1860,1.223,1861,1.223,1862,1.223,1863,1.223,1864,1.223,1865,1.223,1866,1.223,1867,1.223,1868,1.948,1869,1.223,1870,3.862,1871,3.862,1872,1.223,1873,1.223,1874,1.223,1875,1.223,1876,1.223,1877,1.223,1878,1.116,1879,2.421,1880,2.421,1881,3.862,1882,1.387,1883,1.387,1884,1.223,1885,1.223,1886,2.843,1887,1.223,1888,1.387,1889,1.387,1890,2.421,1891,1.387,1892,1.387,1893,2.421,1894,1.387,1895,1.387,1896,1.387,1897,1.387,1898,1.387,1899,1.387,1900,1.387,1901,1.223,1902,1.387,1903,2.136,1904,2.421,1905,3.223,1906,1.223,1907,4.847,1908,1.223,1909,1.223,1910,1.387,1911,1.387,1912,1.387,1913,1.387,1914,1.387]],["title/dependencies.html",[94,2.601,1915,3.221]],["body/dependencies.html",[0,0.019,19,0.009,35,2.299,48,0.007,49,0.007,67,0.843,68,3.034,94,2.378,124,2.224,126,2.557,150,4.258,151,3.603,160,3.379,161,3.603,307,1.507,370,3.379,376,2.155,403,2.894,405,5.719,435,2.464,449,3.379,560,4.258,676,4.258,791,3.379,1005,4.258,1019,4.258,1079,3.603,1114,4.258,1332,4.258,1375,3.883,1384,3.603,1452,3.883,1453,3.883,1803,4.258,1916,4.828,1917,7.193,1918,4.828,1919,6.408,1920,4.828,1921,4.828,1922,4.828,1923,4.828,1924,4.828,1925,4.828,1926,4.828,1927,4.828,1928,4.828,1929,4.828,1930,4.828,1931,4.828,1932,4.828,1933,4.828,1934,4.828,1935,4.828,1936,4.828,1937,4.828,1938,4.828,1939,4.828,1940,4.828,1941,4.828,1942,6.408,1943,4.828,1944,4.828,1945,4.828,1946,4.828,1947,4.828,1948,4.828,1949,4.828,1950,4.828,1951,4.828,1952,4.828,1953,4.828]],["title/miscellaneous/enumerations.html",[1954,2.189,1955,4.657]],["body/miscellaneous/enumerations.html",[10,0.391,19,0.009,22,4.714,40,2.068,48,0.008,49,0.008,1255,4.942,1630,6.937,1954,4.014,1955,5.906,1956,6.696,1957,6.696]],["title/miscellaneous/functions.html",[1954,2.189,1958,4.657]],["body/miscellaneous/functions.html",[10,0.29,12,1.421,18,0.578,19,0.009,20,1.106,28,1.807,29,1.456,30,1.604,43,3.214,48,0.007,49,0.007,308,5.248,632,5.441,642,5.864,1026,2.974,1032,3.911,1123,5.248,1348,5.248,1454,5.248,1791,4.375,1852,5.755,1853,6.43,1854,5.755,1855,4.375,1856,5.755,1868,3.99,1869,5.755,1874,4.375,1875,6.43,1954,2.974,1958,4.375,1959,4.96,1960,7.29,1961,4.375,1962,4.96,1963,4.96,1964,4.96,1965,5.755,1966,6.524,1967,4.96,1968,4.96,1969,4.96,1970,4.96,1971,4.96,1972,4.96,1973,6.524,1974,4.375,1975,4.96]],["title/index.html",[10,0.213,1976,3.651,1977,3.651]],["body/index.html",[4,0.102,19,0.009,48,0.007,49,0.007,117,4.09,251,1.805,693,5.848,777,6.508,890,3.559,1623,7.335,1817,4.485,1833,4.09,1974,4.485,1978,5.084,1979,5.084,1980,6.63,1981,5.084,1982,5.084,1983,5.084,1984,5.084,1985,5.084,1986,5.084,1987,5.084,1988,5.084,1989,5.084,1990,8.47,1991,5.084,1992,4.485,1993,5.084,1994,5.084,1995,6.63,1996,5.084,1997,5.084,1998,5.084,1999,5.084,2000,6.63,2001,5.084,2002,5.084,2003,5.084,2004,6.63,2005,6.63,2006,5.084,2007,5.084,2008,5.084,2009,5.084,2010,5.084,2011,4.485,2012,5.084,2013,5.084,2014,5.084,2015,5.084,2016,5.084,2017,5.084,2018,5.084,2019,5.084,2020,4.485,2021,5.084,2022,5.084,2023,5.084,2024,5.084,2025,5.084,2026,5.084,2027,4.485]],["title/classes/initTables1664757497775.html",[0,0.013,1878,3.527]],["body/classes/initTables1664757497775.html",[0,0.009,2,0.89,3,0.063,4,0.063,5,0.056,8,1.553,9,4.573,10,0.184,11,0.868,12,1.356,13,1.028,14,4.086,15,2.168,16,3.806,17,3.806,18,0.409,19,0.009,20,0.403,21,4.823,22,1.886,23,0.727,25,3.806,26,6.254,28,1.104,29,0.89,30,0.98,31,2.505,32,3.806,34,0.152,35,1.498,36,0.07,37,3.138,39,5.912,40,1.244,41,3.531,43,3.339,45,4.985,46,3.806,48,0.005,49,0.005,76,3.733,177,1.977,246,1.987,269,1.987,284,2.506,285,1.362,518,5.069,534,2.904,590,3.262,591,3.262,615,3.76,647,1.886,648,2.081,652,2.081,656,3.572,657,2.707,670,2.203,739,3.531,833,6.516,834,2.902,835,5.015,836,5.728,837,2.776,838,2.776,839,7.096,841,5.577,843,3.806,844,4.173,845,2.776,846,3.312,847,5.577,849,5.015,1199,2.253,1208,4.719,1330,2.203,1417,5.577,1876,5.577,1877,2.776,1878,5.086,2028,3.147,2029,3.147,2030,3.147,2031,3.147,2032,3.147,2033,3.147,2034,7.121,2035,3.147,2036,3.147,2037,3.147,2038,3.147,2039,4.731,2040,4.731,2041,3.147]],["title/modules.html",[93,2.859]],["body/modules.html",[19,0.007,48,0.007,49,0.007,92,4.291,93,2.737,98,4.024,99,3.803,100,3.803,101,3.803,102,4.024,103,4.024,104,3.446,105,4.024,162,4.024,193,4.291,2011,7.886,2042,8.94,2043,8.94,2044,8.99,2045,5.749,2046,5.749]],["title/overview.html",[2047,5.297]],["body/overview.html",[2,1.007,19,0.009,48,0.005,49,0.005,52,1.264,80,1.495,85,4.043,92,6.561,93,1.695,94,2.554,95,3.14,96,3.14,97,3.14,98,5.999,99,4.043,100,5.312,101,5.468,102,4.995,103,4.995,104,4.892,105,4.995,106,2.745,107,1.695,108,1.886,162,4.995,166,5.084,193,5.011,194,3.14,225,0.959,312,3.664,325,2.043,326,4.043,390,4.279,394,5.084,407,4.072,441,3.14,442,3.14,444,4.279,445,4.279,484,4.233,814,2.355,875,3.14,877,3.14,878,3.14,961,3.14,962,3.14,963,3.14,1042,3.14,1043,3.14,1044,3.14,1045,4.279,1046,4.043,1250,4.043,1292,3.14,1293,3.14,1383,4.043,1399,3.14,1400,3.14,1524,3.14,1525,3.14,1527,3.14,1584,4.043,1601,3.14,1602,3.14,1826,2.864,1901,3.14,2047,3.14,2048,3.56,2049,3.14,2050,5.183,2051,3.56]],["title/properties.html",[11,0.969,1915,3.221]],["body/properties.html",[11,1.249,19,0.009,48,0.008,49,0.008,251,2.417,2020,6.005,2027,6.005,2052,6.808,2053,6.808,2054,6.808]],["title/miscellaneous/typealiases.html",[1954,2.189,2055,5.279]],["body/miscellaneous/typealiases.html",[10,0.376,18,0.462,19,0.008,48,0.008,49,0.008,645,5.731,649,4.799,853,6.773,928,6.773,1356,6.773,1474,4.799,1475,5.731,1954,3.855,2056,6.431,2057,7.679,2058,8.504,2059,6.431,2060,7.679]],["title/miscellaneous/variables.html",[1954,2.189,2061,4.657]],["body/miscellaneous/variables.html",[3,0.032,5,0.093,10,0.092,11,0.29,12,0.653,14,0.906,18,0.57,19,0.009,20,0.964,21,5.059,22,5.073,30,0.327,40,1.249,42,0.947,48,0.003,49,0.003,57,0.993,63,2.022,69,2.18,72,1.393,74,0.576,76,0.87,89,1.607,117,1.271,128,1.703,130,1.897,133,1.792,137,2.18,152,3.394,153,2.18,155,2.022,157,2.022,168,2.022,177,3.483,198,2.18,210,1.179,211,2.18,212,3.323,216,1.482,224,1.179,229,1.271,233,0.837,237,1.179,247,1.045,287,1.393,293,1.271,302,1.393,314,2.022,347,0.947,363,2.18,386,1.271,414,1.271,416,1.271,418,1.271,422,1.393,503,2.18,540,1.179,542,3.139,543,1.897,581,1.179,584,1.271,585,1.271,586,1.271,611,0.947,643,2.18,713,1.179,718,2.656,753,2.18,766,2.324,795,1.393,813,0.806,814,1.792,873,1.271,905,1.393,932,2.39,934,1.393,946,2.18,959,1.179,978,1.179,980,2.862,996,2.39,1024,1.179,1026,2.529,1027,1.393,1032,1.624,1037,1.106,1040,1.106,1066,1.106,1100,1.179,1103,1.393,1106,1.393,1119,1.393,1121,1.179,1137,2.39,1140,1.393,1141,1.393,1147,1.271,1199,0.752,1203,0.837,1217,2.515,1255,0.993,1331,2.18,1344,1.179,1346,1.393,1347,1.393,1348,1.271,1364,2.18,1371,1.393,1377,2.022,1378,2.18,1380,2.18,1405,2.18,1406,2.022,1414,2.656,1457,2.022,1483,2.18,1487,2.18,1501,2.18,1502,2.18,1706,1.393,1709,1.179,1826,1.271,1840,1.393,1843,3.722,1844,3.722,1845,2.39,1846,3.722,1847,3.722,1848,3.722,1849,2.39,1850,1.393,1851,2.39,1858,1.393,1859,3.139,1860,1.393,1861,1.393,1862,2.39,1863,1.393,1864,1.393,1865,1.393,1866,1.393,1867,2.39,1868,1.271,1872,1.393,1873,1.393,1884,1.393,1885,2.39,1886,1.393,1887,2.39,1903,1.393,1906,1.393,1907,1.393,1908,2.39,1909,2.39,1954,0.947,1961,1.393,1965,1.393,1992,1.393,2049,1.393,2061,1.393,2062,7.134,2063,1.58,2064,1.58,2065,1.58,2066,1.58,2067,2.71,2068,1.58,2069,1.58,2070,1.58,2071,1.58,2072,1.58,2073,2.71,2074,1.58,2075,1.58,2076,5.849,2077,2.71,2078,2.71,2079,1.58,2080,2.71,2081,2.71,2082,1.58,2083,2.71,2084,1.58,2085,1.58,2086,6.111,2087,1.58,2088,1.58,2089,1.58,2090,1.58,2091,1.58,2092,1.58,2093,1.58,2094,1.58,2095,1.58,2096,1.58,2097,1.58,2098,1.58,2099,1.58,2100,1.58,2101,2.71,2102,1.58,2103,1.58,2104,1.58,2105,1.58,2106,1.58,2107,1.58,2108,1.58,2109,1.58,2110,2.71,2111,1.58,2112,1.58,2113,1.58,2114,1.58,2115,1.58,2116,1.58,2117,1.58,2118,1.58,2119,1.58,2120,1.58,2121,1.58,2122,1.58,2123,1.58,2124,1.58,2125,1.58,2126,1.58,2127,1.58,2128,3.559,2129,1.58,2130,1.58,2131,1.58,2132,1.58,2133,1.58,2134,1.58,2135,1.58,2136,1.58,2137,1.58,2138,1.58,2139,1.58,2140,2.71,2141,1.58,2142,1.58,2143,1.58,2144,1.58,2145,1.58,2146,1.58,2147,1.58,2148,1.58,2149,1.58,2150,1.58,2151,1.58,2152,1.58,2153,4.749,2154,1.58,2155,1.58,2156,2.71,2157,2.71,2158,1.58,2159,1.58,2160,1.58,2161,2.71,2162,3.559,2163,1.58,2164,1.58,2165,1.58,2166,1.58,2167,2.71,2168,1.58,2169,2.71,2170,1.58,2171,1.58,2172,2.71,2173,1.58,2174,1.58,2175,2.71,2176,1.58,2177,1.58,2178,1.58,2179,1.58,2180,1.58,2181,1.58,2182,1.58,2183,1.58,2184,1.58,2185,1.58]]],"invertedIndex":[["",{"_index":19,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/ApiKeyMiddleware.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"injectables/AppService.html":{},"interfaces/AuthConfigInterface.html":{},"controllers/AuthController.html":{},"classes/AuthEmailDto.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"classes/AuthLoginDto.html":{},"classes/AuthLoginInterface.html":{},"modules/AuthModule.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatePasswordDto.html":{},"interfaces/AwsS3ConfigInterface.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"interfaces/CommonEntityInterface.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"modules/EmailModule.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"interfaces/EmailOptionsInterface.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"interfaces/ErrorCodeExceptionInterface.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"modules/FederatedModule.html":{},"injectables/FederatedService.html":{},"classes/FederatedUpdateDto.html":{},"classes/FileResponseDto.html":{},"interfaces/GitHubProfileInterface.html":{},"injectables/GithubAuthGuard.html":{},"interfaces/GithubConfigInterface.html":{},"modules/HandlebarEmailModule.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfigInterface.html":{},"injectables/JwtConfigService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfigInterface.html":{},"injectables/LoggerExceptionFilter.html":{},"modules/LoggerModule.html":{},"injectables/LoggerRequestInterceptor.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"interfaces/Response.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleFactory.html":{},"interfaces/RoleInterface.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"interfaces/SendEmailServiceInterface.html":{},"interfaces/ServerConfigInterface.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserCreatableInterface.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"interfaces/UserOwnableInterface.html":{},"controllers/UserReportController.html":{},"entities/UserRole.html":{},"controllers/UserRoleController.html":{},"interfaces/UserRoleCreatableInterface.html":{},"classes/UserRoleDto.html":{},"classes/UserRoleFactory.html":{},"interfaces/UserRoleInterface.html":{},"modules/UserRoleModule.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/initTables1664757497775.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":1778,"title":{},"body":{"classes/UserSubscriber.html":{},"coverage.html":{}}}],["0.0.1",{"_index":2053,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":1947,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1930,"title":{},"body":{"dependencies.html":{}}}],["0.3.9",{"_index":1953,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1929,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":1938,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1842,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":1910,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1890,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":1911,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1837,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1838,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1839,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1857,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1881,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1905,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1904,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1913,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":1826,"title":{},"body":{"injectables/awsS3UploadService.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":1941,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":1939,"title":{},"body":{"dependencies.html":{}}}],["1.8.1",{"_index":1916,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":1871,"title":{},"body":{"coverage.html":{}}}],["1/11",{"_index":1902,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":1880,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":1889,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1870,"title":{},"body":{"coverage.html":{}}}],["1000",{"_index":1707,"title":{},"body":{"injectables/UserService.html":{}}}],["11",{"_index":2048,"title":{},"body":{"overview.html":{}}}],["16).tostring(16",{"_index":2109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1h",{"_index":2142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["1y",{"_index":2144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":2090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.1232.0",{"_index":1926,"title":{},"body":{"dependencies.html":{}}}],["2.2.0",{"_index":1918,"title":{},"body":{"dependencies.html":{}}}],["2.6.3",{"_index":1945,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":1898,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":1900,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":1894,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":1883,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":1888,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":250,"title":{},"body":{"controllers/AuthController.html":{}}}],["22",{"_index":1882,"title":{},"body":{"coverage.html":{}}}],["23",{"_index":2050,"title":{},"body":{"overview.html":{}}}],["28",{"_index":1893,"title":{},"body":{"coverage.html":{}}}],["3.0.0",{"_index":1922,"title":{},"body":{"dependencies.html":{}}}],["3.0.1",{"_index":1936,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":1949,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":1896,"title":{},"body":{"coverage.html":{}}}],["3/7",{"_index":1892,"title":{},"body":{"coverage.html":{}}}],["3001",{"_index":2165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["320",{"_index":2180,"title":{},"body":{"miscellaneous/variables.html":{}}}],["33",{"_index":1879,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":2051,"title":{},"body":{"overview.html":{}}}],["36",{"_index":2182,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":2049,"title":{},"body":{"overview.html":{},"miscellaneous/variables.html":{}}}],["4.0.0",{"_index":1940,"title":{},"body":{"dependencies.html":{}}}],["4.0.1",{"_index":1928,"title":{},"body":{"dependencies.html":{}}}],["4.7.7",{"_index":1932,"title":{},"body":{"dependencies.html":{}}}],["4/14",{"_index":1912,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":1899,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":258,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LoggerService.html":{}}}],["404",{"_index":292,"title":{},"body":{"controllers/AuthController.html":{}}}],["42",{"_index":1891,"title":{},"body":{"coverage.html":{}}}],["5.0.1",{"_index":1927,"title":{},"body":{"dependencies.html":{}}}],["5.1.2",{"_index":1952,"title":{},"body":{"dependencies.html":{}}}],["50",{"_index":2183,"title":{},"body":{"miscellaneous/variables.html":{}}}],["500",{"_index":799,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{}}}],["587",{"_index":2121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["6.1.2",{"_index":1923,"title":{},"body":{"dependencies.html":{}}}],["6.8.0",{"_index":1937,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":1706,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["66",{"_index":1897,"title":{},"body":{"coverage.html":{}}}],["7.14.0",{"_index":1925,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":1950,"title":{},"body":{"dependencies.html":{}}}],["75",{"_index":1895,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2184,"title":{},"body":{"miscellaneous/variables.html":{}}}],["8.0.0",{"_index":1917,"title":{},"body":{"dependencies.html":{}}}],["8.8.0",{"_index":1943,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":1901,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["9.0.0",{"_index":1919,"title":{},"body":{"dependencies.html":{}}}],["9.0.1",{"_index":1924,"title":{},"body":{"dependencies.html":{}}}],["96",{"_index":2181,"title":{},"body":{"miscellaneous/variables.html":{}}}],["__dirname",{"_index":2128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_assigndefaultuserrole(event",{"_index":1783,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["_authconfig",{"_index":486,"title":{},"body":{"injectables/AuthService.html":{}}}],["_checkemailuniqueness",{"_index":1712,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["_checkemailuniqueness(event",{"_index":1720,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["_checkusernameuniqueness",{"_index":1713,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["_checkusernameuniqueness(event",{"_index":1725,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["_context",{"_index":1070,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["_context.getclass().name",{"_index":1085,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["_context.switchtohttp().getrequest",{"_index":1083,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["_context.switchtohttp().getresponse",{"_index":1084,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["_filename",{"_index":936,"title":{},"body":{"classes/FileResponseDto.html":{}}}],["_hashinsertedpassword",{"_index":1714,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["_hashinsertedpassword(event",{"_index":1727,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["_hashpassword",{"_index":1715,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["_hashpassword(user",{"_index":1729,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["_hashupdatedpassword",{"_index":1716,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["_hashupdatedpassword(event",{"_index":1731,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["_jwtconfig",{"_index":482,"title":{},"body":{"injectables/AuthService.html":{}}}],["_next",{"_index":1067,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["_next.handle().pipe",{"_index":1091,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["_originalname",{"_index":939,"title":{},"body":{"classes/FileResponseDto.html":{}}}],["_url",{"_index":937,"title":{},"body":{"classes/FileResponseDto.html":{}}}],["abstract",{"_index":603,"title":{},"body":{"classes/CommonEntity.html":{},"classes/CryptUtil.html":{}}}],["access",{"_index":363,"title":{},"body":{"controllers/AuthGithubController.html":{},"interfaces/JwtConfigInterface.html":{},"miscellaneous/variables.html":{}}}],["accessconfig",{"_index":519,"title":{},"body":{"injectables/AuthService.html":{}}}],["accessconfig?.signoptions",{"_index":527,"title":{},"body":{"injectables/AuthService.html":{}}}],["accesskeyid",{"_index":584,"title":{},"body":{"interfaces/AwsS3ConfigInterface.html":{},"injectables/awsS3UploadService.html":{},"miscellaneous/variables.html":{}}}],["accesstoken",{"_index":401,"title":{},"body":{"injectables/AuthGithubStrategy.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{}}}],["account",{"_index":907,"title":{},"body":{"injectables/FederatedService.html":{}}}],["acl",{"_index":1816,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["action",{"_index":847,"title":{},"body":{"classes/Federated1665882607149.html":{},"classes/initTables1664757497775.html":{}}}],["active",{"_index":652,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"classes/initTables1664757497775.html":{}}}],["adapter",{"_index":2131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["add",{"_index":41,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"classes/Federated1665882607149.html":{},"injectables/UserService.html":{},"classes/initTables1664757497775.html":{}}}],["addresettoken.ts",{"_index":7,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"coverage.html":{}}}],["addresettoken.ts:11",{"_index":27,"title":{},"body":{"classes/AddResetToken1665198934490.html":{}}}],["addresettoken.ts:4",{"_index":24,"title":{},"body":{"classes/AddResetToken1665198934490.html":{}}}],["addresettoken.ts:6",{"_index":33,"title":{},"body":{"classes/AddResetToken1665198934490.html":{}}}],["addresettoken1665198934490",{"_index":1,"title":{"classes/AddResetToken1665198934490.html":{}},"body":{"classes/AddResetToken1665198934490.html":{},"coverage.html":{}}}],["address",{"_index":775,"title":{},"body":{"injectables/EmailService.html":{},"classes/UserSubscriber.html":{}}}],["addtransport",{"_index":1136,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/LoggerTransportService.html":{}}}],["addtransport(transport",{"_index":1145,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/LoggerTransportService.html":{}}}],["admin",{"_index":1630,"title":{},"body":{"classes/UserSeeder.html":{},"miscellaneous/enumerations.html":{}}}],["adminrole",{"_index":1628,"title":{},"body":{"classes/UserSeeder.html":{}}}],["adminrole.id",{"_index":1636,"title":{},"body":{"classes/UserSeeder.html":{}}}],["afterinsert(event",{"_index":1749,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["aliases",{"_index":2056,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["all'})@delete(':id",{"_index":1237,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{}}}],["allowed",{"_index":422,"title":{},"body":{"injectables/AuthGithubStrategy.html":{},"miscellaneous/variables.html":{}}}],["alone",{"_index":1787,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["already",{"_index":1780,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["alter",{"_index":841,"title":{},"body":{"classes/Federated1665882607149.html":{},"classes/initTables1664757497775.html":{}}}],["amazing",{"_index":2012,"title":{},"body":{"index.html":{}}}],["anything",{"_index":559,"title":{},"body":{"injectables/AuthService.html":{}}}],["ap",{"_index":1824,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["api",{"_index":1346,"title":{},"body":{"interfaces/ServerConfigInterface.html":{},"miscellaneous/variables.html":{}}}],["api_key",{"_index":72,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"miscellaneous/variables.html":{}}}],["api_key_header",{"_index":69,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apibearerauth",{"_index":301,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{}}}],["apibearerauth()@post('/refresh')@apioperation({operationid",{"_index":274,"title":{},"body":{"controllers/AuthController.html":{}}}],["apibody",{"_index":302,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["apibody({type",{"_index":266,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiconsumes",{"_index":1376,"title":{},"body":{"controllers/UploadController.html":{}}}],["apiconsumes('multipart/form",{"_index":1390,"title":{},"body":{"controllers/UploadController.html":{}}}],["apicreatedresponse",{"_index":303,"title":{},"body":{"controllers/AuthController.html":{}}}],["apifiledecorator",{"_index":1378,"title":{},"body":{"controllers/UploadController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apikeymiddleware",{"_index":51,"title":{"injectables/ApiKeyMiddleware.html":{}},"body":{"injectables/ApiKeyMiddleware.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["apinotfoundresponse",{"_index":1244,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{}}}],["apiokresponse",{"_index":373,"title":{},"body":{"controllers/AuthGithubController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{}}}],["apiokresponse({description",{"_index":367,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["apiokresponse({type",{"_index":361,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["apioperation",{"_index":304,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmailController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{}}}],["apioperation({operationid",{"_index":685,"title":{},"body":{"controllers/EmailController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{}}}],["apiparam",{"_index":305,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":432,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/EmailDto.html":{},"classes/FederatedDto.html":{},"classes/FileResponseDto.html":{},"classes/RoleDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{}}}],["apiproperty()@expose()@isstring",{"_index":705,"title":{},"body":{"classes/EmailDto.html":{}}}],["apiproperty()@isstring()@minlength(1)@maxlength(5000",{"_index":462,"title":{},"body":{"classes/AuthRefreshDto.html":{}}}],["apiproperty({format",{"_index":658,"title":{},"body":{"classes/CreateUserRoleDto.html":{},"classes/UserRoleDto.html":{}}}],["apiproperty({title",{"_index":631,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FileResponseDto.html":{},"classes/UserDto.html":{}}}],["apiproperty({type",{"_index":608,"title":{},"body":{"classes/CommonEntityDto.html":{},"classes/CreateRoleDto.html":{},"classes/RoleDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{}}}],["apiresponse",{"_index":306,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags",{"_index":374,"title":{},"body":{"controllers/AuthGithubController.html":{},"controllers/EmailController.html":{},"controllers/RoleController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{}}}],["apitags('auth",{"_index":380,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["apitags('email",{"_index":697,"title":{},"body":{"controllers/EmailController.html":{}}}],["apitags('roles",{"_index":1258,"title":{},"body":{"controllers/RoleController.html":{}}}],["apitags('upload",{"_index":1386,"title":{},"body":{"controllers/UploadController.html":{}}}],["apitags('user",{"_index":1585,"title":{},"body":{"controllers/UserRoleController.html":{}}}],["apitags('users",{"_index":1460,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserReportController.html":{}}}],["app",{"_index":1974,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["app.acl",{"_index":1745,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["app.controller",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":86,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app_email_module_config",{"_index":2115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app_filter",{"_index":1049,"title":{},"body":{"modules/LoggerModule.html":{}}}],["app_interceptor",{"_index":1050,"title":{},"body":{"modules/LoggerModule.html":{}}}],["appcontroller",{"_index":79,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":1986,"title":{},"body":{"index.html":{}}}],["apply(apikeymiddleware",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":92,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmodulefixture",{"_index":193,"title":{"modules/AppModuleFixture.html":{}},"body":{"modules/AppModuleFixture.html":{},"modules.html":{},"overview.html":{}}}],["approle",{"_index":1744,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["approle.user",{"_index":1790,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["appservice",{"_index":85,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["args",{"_index":733,"title":{},"body":{"interfaces/EmailModuleOptionsInterface.html":{}}}],["argumentshost",{"_index":787,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{},"injectables/LoggerExceptionFilter.html":{}}}],["array",{"_index":740,"title":{},"body":{"interfaces/EmailOptionsInterface.html":{}}}],["array(4",{"_index":2106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array.isarray(data",{"_index":1196,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["array.isarray(user.userroles",{"_index":1784,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["assign",{"_index":1791,"title":{},"body":{"classes/UserSubscriber.html":{},"miscellaneous/functions.html":{}}}],["associated",{"_index":873,"title":{},"body":{"interfaces/FederatedInterface.html":{},"injectables/FederatedService.html":{},"miscellaneous/variables.html":{}}}],["async",{"_index":15,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"modules/AppModule.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"classes/Federated1665882607149.html":{},"injectables/FederatedService.html":{},"modules/HandlebarEmailModule.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/RoleController.html":{},"classes/RoleFactory.html":{},"injectables/RoleService.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{},"classes/UserRoleFactory.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"classes/initTables1664757497775.html":{}}}],["auth",{"_index":233,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"modules/AuthModule.html":{},"injectables/GithubAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["auth.controller",{"_index":455,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":313,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{}}}],["auth/github",{"_index":359,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["auth/guards/jwt",{"_index":1254,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{}}}],["auth_module_config",{"_index":2087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth_refresh",{"_index":334,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth_refresh'})@apicreatedresponse({type",{"_index":275,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth_resetpassword",{"_index":341,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth_resetpassword'})@apiresponse({status",{"_index":249,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth_resetupdatepassword",{"_index":346,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth_resetupdatepassword'})@apiparam({name",{"_index":286,"title":{},"body":{"controllers/AuthController.html":{}}}],["authconfig",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authconfiginterface",{"_index":224,"title":{"interfaces/AuthConfigInterface.html":{}},"body":{"interfaces/AuthConfigInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authcontroller",{"_index":230,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authcredentialsdto",{"_index":1689,"title":{},"body":{"injectables/UserService.html":{}}}],["authemaildto",{"_index":240,"title":{"classes/AuthEmailDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthEmailDto.html":{},"coverage.html":{}}}],["authenticate",{"_index":268,"title":{},"body":{"controllers/AuthController.html":{}}}],["authgithubcontroller",{"_index":356,"title":{"controllers/AuthGithubController.html":{}},"body":{"controllers/AuthGithubController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authgithubstrategy",{"_index":390,"title":{"injectables/AuthGithubStrategy.html":{}},"body":{"injectables/AuthGithubStrategy.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["authguard",{"_index":957,"title":{},"body":{"injectables/GithubAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('github",{"_index":958,"title":{},"body":{"injectables/GithubAuthGuard.html":{}}}],["authguard('jwt",{"_index":977,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":1012,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authlogindto",{"_index":267,"title":{"classes/AuthLoginDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"coverage.html":{}}}],["authlogininterface",{"_index":426,"title":{"classes/AuthLoginInterface.html":{}},"body":{"classes/AuthLoginDto.html":{},"classes/AuthLoginInterface.html":{},"coverage.html":{}}}],["authmodule",{"_index":98,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":2020,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authrefreshdto",{"_index":273,"title":{"classes/AuthRefreshDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthRefreshDto.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authrefreshdto.refreshtoken",{"_index":532,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresetpassworddto",{"_index":538,"title":{},"body":{"injectables/AuthService.html":{}}}],["authresponsedto",{"_index":276,"title":{"classes/AuthResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"coverage.html":{}}}],["authresponsedto(accesstoken",{"_index":529,"title":{},"body":{"injectables/AuthService.html":{}}}],["authservice",{"_index":312,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["authupdatepassworddto",{"_index":279,"title":{"classes/AuthUpdatePasswordDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatePasswordDto.html":{},"coverage.html":{}}}],["authupdatepassworddto.password",{"_index":575,"title":{},"body":{"injectables/AuthService.html":{}}}],["authuser",{"_index":314,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["autoloadentities",{"_index":2178,"title":{},"body":{"miscellaneous/variables.html":{}}}],["available",{"_index":2046,"title":{},"body":{"modules.html":{}}}],["await",{"_index":37,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/AuthGithubStrategy.html":{},"injectables/AuthService.html":{},"classes/CryptUtil.html":{},"injectables/EmailService.html":{},"classes/Federated1665882607149.html":{},"injectables/FederatedService.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/RoleService.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"controllers/UserReportController.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"classes/initTables1664757497775.html":{}}}],["aws",{"_index":1384,"title":{},"body":{"controllers/UploadController.html":{},"modules/UploadModule.html":{},"injectables/awsS3UploadService.html":{},"dependencies.html":{}}}],["aws_module_s3_config",{"_index":2097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["awss3config",{"_index":1406,"title":{},"body":{"modules/UploadModule.html":{},"injectables/awsS3UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["awss3configinterface",{"_index":581,"title":{"interfaces/AwsS3ConfigInterface.html":{}},"body":{"interfaces/AwsS3ConfigInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["awss3uploadservice",{"_index":1383,"title":{"injectables/awsS3UploadService.html":{}},"body":{"controllers/UploadController.html":{},"modules/UploadModule.html":{},"injectables/awsS3UploadService.html":{},"coverage.html":{},"overview.html":{}}}],["backers",{"_index":2013,"title":{},"body":{"index.html":{}}}],["bad",{"_index":259,"title":{},"body":{"controllers/AuthController.html":{}}}],["badrequestexception",{"_index":1743,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["badrequestexception('email",{"_index":1779,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["badrequestexception('username",{"_index":1782,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["based",{"_index":749,"title":{},"body":{"injectables/EmailService.html":{},"injectables/HandlebarEmailService.html":{},"injectables/UserService.html":{}}}],["baseexceptionfilter",{"_index":785,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{},"injectables/LoggerExceptionFilter.html":{}}}],["bcc",{"_index":734,"title":{},"body":{"interfaces/EmailOptionsInterface.html":{}}}],["bcrypt",{"_index":676,"title":{},"body":{"classes/CryptUtil.html":{},"dependencies.html":{}}}],["bcrypt.gensalt",{"_index":677,"title":{},"body":{"classes/CryptUtil.html":{}}}],["bcrypt.hash(password",{"_index":678,"title":{},"body":{"classes/CryptUtil.html":{}}}],["before",{"_index":1033,"title":{},"body":{"injectables/LoggerExceptionFilter.html":{}}}],["beforeinsert",{"_index":1717,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeinsert(event",{"_index":1733,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeupdate",{"_index":1718,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["beforeupdate(event",{"_index":1735,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["being",{"_index":1754,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["binary",{"_index":2085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["body",{"_index":296,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{},"injectables/awsS3UploadService.html":{}}}],["boolean",{"_index":1330,"title":{},"body":{"guards/RolesGuard.html":{},"entities/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"classes/initTables1664757497775.html":{}}}],["bootstrap",{"_index":1875,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":2044,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":2042,"title":{},"body":{"modules.html":{}}}],["bucket",{"_index":585,"title":{},"body":{"interfaces/AwsS3ConfigInterface.html":{},"injectables/awsS3UploadService.html":{},"miscellaneous/variables.html":{}}}],["buffer",{"_index":1800,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["build",{"_index":541,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserSubscriber.html":{}}}],["building",{"_index":1981,"title":{},"body":{"index.html":{}}}],["cache",{"_index":1452,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserReportController.html":{},"dependencies.html":{}}}],["cache_manager",{"_index":1451,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserReportController.html":{}}}],["cacheinterceptor",{"_index":1552,"title":{},"body":{"controllers/UserReportController.html":{}}}],["cachekey",{"_index":1554,"title":{},"body":{"controllers/UserReportController.html":{}}}],["cachekey(user_report_cache_key",{"_index":1557,"title":{},"body":{"controllers/UserReportController.html":{}}}],["cachemanager",{"_index":1464,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserReportController.html":{}}}],["cachemodule",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{}}}],["cachemodule.register",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{}}}],["cachettl",{"_index":1553,"title":{},"body":{"controllers/UserReportController.html":{}}}],["cachettl(300",{"_index":1558,"title":{},"body":{"controllers/UserReportController.html":{}}}],["call",{"_index":573,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerTransportService.html":{},"injectables/UserService.html":{}}}],["callback",{"_index":2101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback(new",{"_index":2113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback(null",{"_index":2110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback_url",{"_index":2138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callbackurl",{"_index":418,"title":{},"body":{"injectables/AuthGithubStrategy.html":{},"interfaces/GithubConfigInterface.html":{},"miscellaneous/variables.html":{}}}],["called",{"_index":1086,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["callhandler",{"_index":1068,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["canactivate",{"_index":1324,"title":{},"body":{"guards/RolesGuard.html":{}}}],["canactivate(context",{"_index":1328,"title":{},"body":{"guards/RolesGuard.html":{}}}],["capital",{"_index":635,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["case",{"_index":2153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch",{"_index":761,"title":{},"body":{"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"injectables/FederatedService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/UserService.html":{},"injectables/awsS3UploadService.html":{}}}],["catch(exception",{"_index":786,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{},"injectables/LoggerExceptionFilter.html":{}}}],["catcherror",{"_index":1080,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["catcherror((error",{"_index":1094,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["cc",{"_index":735,"title":{},"body":{"interfaces/EmailOptionsInterface.html":{}}}],["changed",{"_index":289,"title":{},"body":{"controllers/AuthController.html":{},"classes/UserSubscriber.html":{}}}],["character",{"_index":837,"title":{},"body":{"classes/Federated1665882607149.html":{},"classes/initTables1664757497775.html":{}}}],["check",{"_index":911,"title":{},"body":{"injectables/FederatedService.html":{},"guards/RolesGuard.html":{}}}],["citext",{"_index":1417,"title":{},"body":{"entities/User.html":{},"classes/initTables1664757497775.html":{}}}],["class",{"_index":0,"title":{"classes/AddResetToken1665198934490.html":{},"classes/AuthEmailDto.html":{},"classes/AuthLoginDto.html":{},"classes/AuthLoginInterface.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"classes/AuthUpdatePasswordDto.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/CryptUtil.html":{},"classes/EmailDto.html":{},"classes/ErrorCodeExceptionFilter.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"classes/FederatedUpdateDto.html":{},"classes/FileResponseDto.html":{},"classes/RoleDto.html":{},"classes/RoleFactory.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"classes/UserNotFoundException.html":{},"classes/UserRoleDto.html":{},"classes/UserRoleFactory.html":{},"classes/UserSeeder.html":{},"classes/UserSubscriber.html":{},"classes/initTables1664757497775.html":{}},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/ApiKeyMiddleware.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthEmailDto.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"classes/AuthLoginDto.html":{},"classes/AuthLoginInterface.html":{},"modules/AuthModule.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatePasswordDto.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"modules/FederatedModule.html":{},"injectables/FederatedService.html":{},"classes/FederatedUpdateDto.html":{},"classes/FileResponseDto.html":{},"injectables/GithubAuthGuard.html":{},"modules/HandlebarEmailModule.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerExceptionFilter.html":{},"modules/LoggerModule.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"injectables/LoggerTransportService.html":{},"interfaces/Response.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleFactory.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"controllers/UserReportController.html":{},"entities/UserRole.html":{},"controllers/UserRoleController.html":{},"classes/UserRoleDto.html":{},"classes/UserRoleFactory.html":{},"modules/UserRoleModule.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"coverage.html":{},"dependencies.html":{},"classes/initTables1664757497775.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"classes/AuthEmailDto.html":{},"classes/AuthLoginDto.html":{},"classes/AuthLoginInterface.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"classes/AuthUpdatePasswordDto.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/CryptUtil.html":{},"classes/EmailDto.html":{},"classes/ErrorCodeExceptionFilter.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"classes/FederatedUpdateDto.html":{},"classes/FileResponseDto.html":{},"classes/RoleDto.html":{},"classes/RoleFactory.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"classes/UserNotFoundException.html":{},"classes/UserRoleDto.html":{},"classes/UserRoleFactory.html":{},"classes/UserSeeder.html":{},"classes/UserSubscriber.html":{},"classes/initTables1664757497775.html":{},"overview.html":{}}}],["client_id",{"_index":2135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clientid",{"_index":414,"title":{},"body":{"injectables/AuthGithubStrategy.html":{},"interfaces/GithubConfigInterface.html":{},"miscellaneous/variables.html":{}}}],["clientsecret",{"_index":416,"title":{},"body":{"injectables/AuthGithubStrategy.html":{},"interfaces/GithubConfigInterface.html":{},"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodulefixture",{"_index":194,"title":{},"body":{"modules/AppModuleFixture.html":{},"overview.html":{}}}],["cluster_appmodulefixture_imports",{"_index":195,"title":{},"body":{"modules/AppModuleFixture.html":{}}}],["cluster_authmodule",{"_index":441,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":443,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":442,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_federatedmodule",{"_index":875,"title":{},"body":{"modules/FederatedModule.html":{},"overview.html":{}}}],["cluster_federatedmodule_exports",{"_index":877,"title":{},"body":{"modules/FederatedModule.html":{},"overview.html":{}}}],["cluster_federatedmodule_imports",{"_index":876,"title":{},"body":{"modules/FederatedModule.html":{}}}],["cluster_federatedmodule_providers",{"_index":878,"title":{},"body":{"modules/FederatedModule.html":{},"overview.html":{}}}],["cluster_handlebaremailmodule",{"_index":961,"title":{},"body":{"modules/HandlebarEmailModule.html":{},"overview.html":{}}}],["cluster_handlebaremailmodule_exports",{"_index":962,"title":{},"body":{"modules/HandlebarEmailModule.html":{},"overview.html":{}}}],["cluster_handlebaremailmodule_providers",{"_index":963,"title":{},"body":{"modules/HandlebarEmailModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":1042,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":1044,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":1043,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_rolemodule",{"_index":1292,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_rolemodule_providers",{"_index":1293,"title":{},"body":{"modules/RoleModule.html":{},"overview.html":{}}}],["cluster_uploadmodule",{"_index":1399,"title":{},"body":{"modules/UploadModule.html":{},"overview.html":{}}}],["cluster_uploadmodule_providers",{"_index":1400,"title":{},"body":{"modules/UploadModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":1524,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":1527,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":1526,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":1525,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_userrolemodule",{"_index":1601,"title":{},"body":{"modules/UserRoleModule.html":{},"overview.html":{}}}],["cluster_userrolemodule_providers",{"_index":1602,"title":{},"body":{"modules/UserRoleModule.html":{},"overview.html":{}}}],["code",{"_index":384,"title":{},"body":{"controllers/AuthGithubController.html":{},"classes/ErrorCodeExceptionFilter.html":{},"interfaces/ErrorCodeExceptionInterface.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["column",{"_index":47,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"entities/Role.html":{},"entities/User.html":{},"entities/UserRole.html":{}}}],["column({default",{"_index":1412,"title":{},"body":{"entities/User.html":{}}}],["column({type",{"_index":1416,"title":{},"body":{"entities/User.html":{}}}],["common/common.entity",{"_index":824,"title":{},"body":{"entities/Federated.html":{},"classes/FederatedDto.html":{},"entities/Role.html":{},"entities/User.html":{},"entities/UserRole.html":{}}}],["common/constants",{"_index":70,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{}}}],["common/decorators/api",{"_index":1379,"title":{},"body":{"controllers/UploadController.html":{}}}],["common/decorators/is",{"_index":309,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"controllers/UserController.html":{}}}],["common/dto",{"_index":1282,"title":{},"body":{"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{}}}],["common/interfaces",{"_index":874,"title":{},"body":{"interfaces/FederatedInterface.html":{},"interfaces/RoleInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRoleInterface.html":{}}}],["common/interfaces/error",{"_index":1538,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["common/utils/crypt.util",{"_index":1671,"title":{},"body":{"injectables/UserService.html":{},"classes/UserSubscriber.html":{}}}],["common/utils/file",{"_index":1381,"title":{},"body":{"controllers/UploadController.html":{},"modules/UploadModule.html":{}}}],["commonentity",{"_index":587,"title":{"classes/CommonEntity.html":{}},"body":{"classes/CommonEntity.html":{},"entities/Federated.html":{},"classes/FederatedDto.html":{},"entities/Role.html":{},"entities/User.html":{},"entities/UserRole.html":{},"coverage.html":{}}}],["commonentity:12",{"_index":866,"title":{},"body":{"classes/FederatedDto.html":{}}}],["commonentity:16",{"_index":865,"title":{},"body":{"classes/FederatedDto.html":{}}}],["commonentity:20",{"_index":867,"title":{},"body":{"classes/FederatedDto.html":{}}}],["commonentitydto",{"_index":605,"title":{"classes/CommonEntityDto.html":{}},"body":{"classes/CommonEntityDto.html":{},"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"coverage.html":{}}}],["commonentitydto:13",{"_index":1280,"title":{},"body":{"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{}}}],["commonentitydto:22",{"_index":1279,"title":{},"body":{"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{}}}],["commonentitydto:31",{"_index":1281,"title":{},"body":{"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{}}}],["commonentityinterface",{"_index":589,"title":{"interfaces/CommonEntityInterface.html":{}},"body":{"classes/CommonEntity.html":{},"interfaces/CommonEntityInterface.html":{},"interfaces/FederatedInterface.html":{},"interfaces/RoleInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserRoleInterface.html":{},"coverage.html":{}}}],["concepta/typeorm",{"_index":1289,"title":{},"body":{"classes/RoleFactory.html":{},"classes/UserFactory.html":{},"classes/UserRoleFactory.html":{},"classes/UserSeeder.html":{}}}],["config",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGithubStrategy.html":{},"modules/AuthModule.html":{},"modules/HandlebarEmailModule.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerTransportService.html":{},"injectables/awsS3UploadService.html":{}}}],["config.accesskeyid",{"_index":1807,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["config.interface.ts",{"_index":227,"title":{},"body":{"interfaces/AuthConfigInterface.html":{},"interfaces/AwsS3ConfigInterface.html":{},"interfaces/GithubConfigInterface.html":{},"interfaces/JwtConfigInterface.html":{},"interfaces/LoggerConfigInterface.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"interfaces/ServerConfigInterface.html":{},"coverage.html":{}}}],["config.secret",{"_index":1009,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["config.secretaccesskey",{"_index":1808,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["config.service.ts",{"_index":984,"title":{},"body":{"injectables/JwtConfigService.html":{},"coverage.html":{}}}],["config.service.ts:13",{"_index":990,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["config.service.ts:17",{"_index":991,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["config.service.ts:21",{"_index":989,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["config.service.ts:7",{"_index":988,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["config/auth.config",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{}}}],["config/aws",{"_index":1407,"title":{},"body":{"modules/UploadModule.html":{},"injectables/awsS3UploadService.html":{}}}],["config/email.config",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"modules/HandlebarEmailModule.html":{}}}],["config/github.config",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGithubStrategy.html":{}}}],["config/jwt.config",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["config/logger",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"injectables/LoggerSentryTransport.html":{}}}],["config/logger.config",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"modules/LoggerModule.html":{},"injectables/LoggerTransportService.html":{}}}],["config/sample.config",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{}}}],["config/server.config",{"_index":947,"title":{},"body":{"classes/FileResponseDto.html":{}}}],["config/typeorm.config",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["config?.callbackurl",{"_index":419,"title":{},"body":{"injectables/AuthGithubStrategy.html":{}}}],["config?.clientid",{"_index":415,"title":{},"body":{"injectables/AuthGithubStrategy.html":{}}}],["config?.clientsecret",{"_index":417,"title":{},"body":{"injectables/AuthGithubStrategy.html":{}}}],["configmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"modules/LoggerModule.html":{},"modules/UploadModule.html":{}}}],["configmodule.forfeature(awss3config",{"_index":1410,"title":{},"body":{"modules/UploadModule.html":{}}}],["configmodule.forfeature(loggerconfig",{"_index":1056,"title":{},"body":{"modules/LoggerModule.html":{}}}],["configmodule.forfeature(loggersentryconfig",{"_index":1057,"title":{},"body":{"modules/LoggerModule.html":{}}}],["configmodule.forroot",{"_index":175,"title":{},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{}}}],["configs",{"_index":561,"title":{},"body":{"injectables/AuthService.html":{}}}],["configservice",{"_index":207,"title":{},"body":{"injectables/AppService.html":{}}}],["configservice@inject(sampleconfig.key",{"_index":214,"title":{},"body":{"injectables/AppService.html":{}}}],["configtype",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthGithubStrategy.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/HandlebarEmailModule.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerTransportService.html":{},"injectables/awsS3UploadService.html":{}}}],["configure",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["configured",{"_index":565,"title":{},"body":{"injectables/AuthService.html":{}}}],["console.log(e",{"_index":1831,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["console.log(result",{"_index":760,"title":{},"body":{"injectables/EmailService.html":{},"injectables/HandlebarEmailService.html":{}}}],["consolelogger",{"_index":1135,"title":{},"body":{"injectables/LoggerService.html":{}}}],["const",{"_index":216,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthGithubStrategy.html":{},"injectables/AuthService.html":{},"classes/CryptUtil.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"injectables/FederatedService.html":{},"classes/FederatedUpdateDto.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerSentryTransport.html":{},"interfaces/Response.html":{},"classes/RoleFactory.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"controllers/UserReportController.html":{},"classes/UserRoleFactory.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"miscellaneous/variables.html":{}}}],["constant/user.constants",{"_index":644,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"controllers/UserReportController.html":{}}}],["constants",{"_index":719,"title":{},"body":{"modules/EmailModule.html":{},"injectables/EmailService.html":{}}}],["constraint",{"_index":839,"title":{},"body":{"classes/Federated1665882607149.html":{},"classes/initTables1664757497775.html":{}}}],["constructor",{"_index":202,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthGithubStrategy.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/FederatedService.html":{},"classes/FileResponseDto.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"injectables/LoggerTransportService.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"classes/UserNotFoundException.html":{},"controllers/UserReportController.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"injectables/awsS3UploadService.html":{}}}],["constructor(_authconfig",{"_index":481,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(_originalname",{"_index":935,"title":{},"body":{"classes/FileResponseDto.html":{}}}],["constructor(accesstoken",{"_index":469,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["constructor(authservice",{"_index":1015,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["constructor(config",{"_index":393,"title":{},"body":{"injectables/AuthGithubStrategy.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerTransportService.html":{},"injectables/awsS3UploadService.html":{}}}],["constructor(dbconfig",{"_index":203,"title":{},"body":{"injectables/AppService.html":{}}}],["constructor(loggerservice",{"_index":1063,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["constructor(mailerservice",{"_index":970,"title":{},"body":{"injectables/HandlebarEmailService.html":{}}}],["constructor(private",{"_index":87,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"controllers/EmailController.html":{},"injectables/HandlebarEmailService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerService.html":{},"controllers/RoleController.html":{},"guards/RolesGuard.html":{},"controllers/UploadController.html":{},"controllers/UserRoleController.html":{}}}],["constructor(reflector",{"_index":1325,"title":{},"body":{"guards/RolesGuard.html":{}}}],["constructor(repo",{"_index":889,"title":{},"body":{"injectables/FederatedService.html":{},"injectables/RoleService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["constructor(sendemailservice",{"_index":744,"title":{},"body":{"injectables/EmailService.html":{}}}],["constructor(transportservice",{"_index":1142,"title":{},"body":{"injectables/LoggerService.html":{}}}],["consumer",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["contain",{"_index":633,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["containing",{"_index":362,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["content",{"_index":781,"title":{},"body":{"injectables/EmailService.html":{}}}],["contentdisposition",{"_index":1819,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["contenttype",{"_index":1818,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["context",{"_index":549,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/EmailOptionsInterface.html":{},"injectables/EmailService.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerService.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserService.html":{}}}],["context.getclass",{"_index":1336,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.gethandler",{"_index":1335,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getrequest",{"_index":1338,"title":{},"body":{"guards/RolesGuard.html":{}}}],["context.switchtohttp().getresponse().statuscode",{"_index":1198,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["controller",{"_index":78,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"controllers/EmailController.html":{},"controllers/RoleController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"controllers/EmailController.html":{},"controllers/RoleController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":328,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('auth/github",{"_index":379,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["controller('email",{"_index":698,"title":{},"body":{"controllers/EmailController.html":{}}}],["controller('roles",{"_index":1259,"title":{},"body":{"controllers/RoleController.html":{}}}],["controller('upload",{"_index":1387,"title":{},"body":{"controllers/UploadController.html":{}}}],["controller('user",{"_index":1555,"title":{},"body":{"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{}}}],["controller('users",{"_index":1461,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":80,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"modules/AuthModule.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"modules/FederatedModule.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{},"modules/UserRoleModule.html":{},"overview.html":{}}}],["correct",{"_index":1970,"title":{},"body":{"miscellaneous/functions.html":{}}}],["correctly",{"_index":1129,"title":{},"body":{"injectables/LoggerSentryTransport.html":{}}}],["cors",{"_index":1347,"title":{},"body":{"interfaces/ServerConfigInterface.html":{},"miscellaneous/variables.html":{}}}],["corsoptions",{"_index":1349,"title":{},"body":{"interfaces/ServerConfigInterface.html":{}}}],["count",{"_index":1772,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["course@dispostable.com",{"_index":770,"title":{},"body":{"injectables/EmailService.html":{}}}],["coverage",{"_index":1833,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["creatable.interface",{"_index":857,"title":{},"body":{"classes/FederatedCreateDto.html":{}}}],["creatable.interface.ts",{"_index":1475,"title":{},"body":{"interfaces/UserCreatableInterface.html":{},"interfaces/UserRoleCreatableInterface.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["create",{"_index":834,"title":{},"body":{"classes/Federated1665882607149.html":{},"classes/FederatedCreateDto.html":{},"injectables/FederatedService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/initTables1664757497775.html":{}}}],["create(@body",{"_index":1263,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["create(createrole",{"_index":1300,"title":{},"body":{"injectables/RoleService.html":{}}}],["create(createroledto",{"_index":1221,"title":{},"body":{"controllers/RoleController.html":{}}}],["create(createuser",{"_index":1645,"title":{},"body":{"injectables/UserService.html":{}}}],["create(createuserdto",{"_index":1437,"title":{},"body":{"controllers/UserController.html":{}}}],["create(createuserrole",{"_index":1607,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["create(createuserroledto",{"_index":1571,"title":{},"body":{"controllers/UserRoleController.html":{}}}],["createbucketconfiguration",{"_index":1822,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["createbundlerenderer",{"_index":1821,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["created",{"_index":611,"title":{},"body":{"classes/CommonEntityDto.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"controllers/UserRoleController.html":{},"classes/UserRoleDto.html":{},"miscellaneous/variables.html":{}}}],["created'})@apinotfoundresponse({description",{"_index":1233,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{}}}],["created.'})@expose",{"_index":613,"title":{},"body":{"classes/CommonEntityDto.html":{},"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{}}}],["createdat",{"_index":590,"title":{},"body":{"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"interfaces/CommonEntityInterface.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedDto.html":{},"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"classes/initTables1664757497775.html":{}}}],["createdatecolumn",{"_index":598,"title":{},"body":{"classes/CommonEntity.html":{}}}],["createdatecolumn()@apiproperty",{"_index":592,"title":{},"body":{"classes/CommonEntity.html":{},"classes/FederatedDto.html":{}}}],["createfederated",{"_index":884,"title":{},"body":{"injectables/FederatedService.html":{}}}],["createfederated(provider",{"_index":893,"title":{},"body":{"injectables/FederatedService.html":{}}}],["createjwtoptions",{"_index":985,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["createparamdecorator",{"_index":2091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createrole",{"_index":1302,"title":{},"body":{"injectables/RoleService.html":{}}}],["createroledto",{"_index":624,"title":{"classes/CreateRoleDto.html":{}},"body":{"classes/CreateRoleDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"coverage.html":{}}}],["createuser",{"_index":886,"title":{},"body":{"injectables/FederatedService.html":{},"injectables/UserService.html":{}}}],["createuser(email",{"_index":896,"title":{},"body":{"injectables/FederatedService.html":{}}}],["createuserdto",{"_index":577,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/AuthUpdatePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserrole",{"_index":1609,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["createuserroledto",{"_index":653,"title":{"classes/CreateUserRoleDto.html":{}},"body":{"classes/CreateUserRoleDto.html":{},"controllers/UserRoleController.html":{},"injectables/UserRoleService.html":{},"coverage.html":{}}}],["createuserwithfederated",{"_index":887,"title":{},"body":{"injectables/FederatedService.html":{}}}],["createuserwithfederated(provider",{"_index":898,"title":{},"body":{"injectables/FederatedService.html":{}}}],["creating",{"_index":904,"title":{},"body":{"injectables/FederatedService.html":{}}}],["credentials",{"_index":895,"title":{},"body":{"injectables/FederatedService.html":{}}}],["criteria",{"_index":1766,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["criteria.where.id",{"_index":1769,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["crypto",{"_index":1675,"title":{},"body":{"injectables/UserService.html":{}}}],["cryptutil",{"_index":663,"title":{"classes/CryptUtil.html":{}},"body":{"classes/CryptUtil.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"coverage.html":{}}}],["cryptutil.generatesalt",{"_index":1752,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["cryptutil.hashpassword(user.password",{"_index":1753,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["cryptutil.validatepassword(password",{"_index":1690,"title":{},"body":{"injectables/UserService.html":{}}}],["ctx",{"_index":795,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["ctx.getresponse",{"_index":797,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":2092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":1703,"title":{},"body":{"injectables/UserService.html":{}}}],["currentrecord",{"_index":1760,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["currentrecord.password",{"_index":1764,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["currentrecord?.password",{"_index":1762,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["custom",{"_index":1134,"title":{},"body":{"injectables/LoggerService.html":{}}}],["data",{"_index":543,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UploadController.html":{},"miscellaneous/variables.html":{}}}],["data')@useinterceptors(undefined",{"_index":1366,"title":{},"body":{"controllers/UploadController.html":{}}}],["data.length",{"_index":1197,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["database",{"_index":219,"title":{},"body":{"injectables/AppService.html":{}}}],["databaseconfig",{"_index":209,"title":{},"body":{"injectables/AppService.html":{}}}],["datasourceoptions",{"_index":2155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":555,"title":{},"body":{"injectables/AuthService.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"interfaces/CommonEntityInterface.html":{},"classes/FederatedDto.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerService.html":{},"classes/RoleDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"classes/UserRoleDto.html":{},"injectables/UserService.html":{}}}],["date().toisostring",{"_index":808,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{}}}],["date(now.gettime",{"_index":1705,"title":{},"body":{"injectables/UserService.html":{}}}],["dbconfig",{"_index":205,"title":{},"body":{"injectables/AppService.html":{}}}],["dbrole",{"_index":1313,"title":{},"body":{"injectables/RoleService.html":{}}}],["dbuser",{"_index":1680,"title":{},"body":{"injectables/UserService.html":{}}}],["dbuserrole",{"_index":1616,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["debug",{"_index":1137,"title":{},"body":{"injectables/LoggerService.html":{},"miscellaneous/variables.html":{}}}],["debug(message",{"_index":1148,"title":{},"body":{"injectables/LoggerService.html":{}}}],["decorator",{"_index":386,"title":{},"body":{"controllers/AuthGithubController.html":{},"controllers/UploadController.html":{},"miscellaneous/variables.html":{}}}],["decorator.ts",{"_index":1851,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["decorator/auth",{"_index":315,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{}}}],["decorator/roles.decorator",{"_index":1257,"title":{},"body":{"controllers/RoleController.html":{},"guards/RolesGuard.html":{}}}],["decorators",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"classes/AuthLoginDto.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"entities/Federated.html":{},"classes/FederatedDto.html":{},"classes/FileResponseDto.html":{},"injectables/LoggerExceptionFilter.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/UpdateRoleDto.html":{},"controllers/UploadController.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"controllers/UserReportController.html":{},"entities/UserRole.html":{},"controllers/UserRoleController.html":{},"classes/UserRoleDto.html":{}}}],["default",{"_index":21,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"interfaces/AwsS3ConfigInterface.html":{},"classes/Federated1665882607149.html":{},"injectables/LoggerTransportService.html":{},"entities/User.html":{},"classes/UserSubscriber.html":{},"classes/initTables1664757497775.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":2125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultuserrole",{"_index":1788,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["defined",{"_index":23,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/ApiKeyMiddleware.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"classes/AuthLoginDto.html":{},"classes/AuthLoginInterface.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedDto.html":{},"injectables/FederatedService.html":{},"classes/FileResponseDto.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleFactory.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"interfaces/SendEmailServiceInterface.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateRoleDto.html":{},"controllers/UploadController.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"classes/UserNotFoundException.html":{},"controllers/UserReportController.html":{},"entities/UserRole.html":{},"controllers/UserRoleController.html":{},"classes/UserRoleDto.html":{},"classes/UserRoleFactory.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"classes/initTables1664757497775.html":{}}}],["delete",{"_index":846,"title":{},"body":{"classes/Federated1665882607149.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{},"classes/initTables1664757497775.html":{}}}],["delete(':id",{"_index":1272,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{}}}],["dependencies",{"_index":94,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"modules/AuthModule.html":{},"modules/FederatedModule.html":{},"modules/HandlebarEmailModule.html":{},"modules/LoggerModule.html":{},"modules/RoleModule.html":{},"modules/UploadModule.html":{},"modules/UserModule.html":{},"modules/UserRoleModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":251,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"classes/AuthLoginDto.html":{},"classes/CommonEntityDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"controllers/EmailController.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"injectables/FederatedService.html":{},"classes/FederatedUpdateDto.html":{},"classes/FileResponseDto.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerService.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/UpdateRoleDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"controllers/UserRoleController.html":{},"classes/UserRoleDto.html":{},"injectables/UserService.html":{},"index.html":{},"properties.html":{}}}],["descriptor",{"_index":2083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["developermessage",{"_index":1131,"title":{},"body":{"injectables/LoggerSentryTransport.html":{}}}],["development",{"_index":1992,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["devpro",{"_index":769,"title":{},"body":{"injectables/EmailService.html":{}}}],["dir",{"_index":2127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["diskstorage",{"_index":1403,"title":{},"body":{"modules/UploadModule.html":{}}}],["displayname",{"_index":953,"title":{},"body":{"interfaces/GitHubProfileInterface.html":{}}}],["documentation",{"_index":1834,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":905,"title":{},"body":{"injectables/FederatedService.html":{},"miscellaneous/variables.html":{}}}],["don't",{"_index":558,"title":{},"body":{"injectables/AuthService.html":{}}}],["done",{"_index":1098,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{},"classes/UserSubscriber.html":{}}}],["down",{"_index":16,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"classes/Federated1665882607149.html":{},"classes/initTables1664757497775.html":{}}}],["down(queryrunner",{"_index":25,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"classes/Federated1665882607149.html":{},"classes/initTables1664757497775.html":{}}}],["drop",{"_index":46,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"classes/Federated1665882607149.html":{},"classes/initTables1664757497775.html":{}}}],["dsn",{"_index":1119,"title":{},"body":{"injectables/LoggerSentryTransport.html":{},"miscellaneous/variables.html":{}}}],["dto",{"_index":319,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"controllers/EmailController.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"classes/FederatedUpdateDto.html":{}}}],["dto.firstname",{"_index":703,"title":{},"body":{"controllers/EmailController.html":{}}}],["dto.ts",{"_index":425,"title":{},"body":{"classes/AuthLoginDto.html":{},"coverage.html":{}}}],["dto.ts:14",{"_index":431,"title":{},"body":{"classes/AuthLoginDto.html":{}}}],["dto.ts:22",{"_index":429,"title":{},"body":{"classes/AuthLoginDto.html":{}}}],["dto/auth",{"_index":317,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthService.html":{}}}],["dto/create",{"_index":1245,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["dto/email.dto",{"_index":696,"title":{},"body":{"controllers/EmailController.html":{}}}],["dto/file",{"_index":1804,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["dto/role.dto",{"_index":1249,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{}}}],["dto/update",{"_index":1247,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/user",{"_index":1583,"title":{},"body":{"controllers/UserRoleController.html":{},"injectables/UserRoleService.html":{}}}],["dto/user.dto",{"_index":1458,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dynamicmodule",{"_index":714,"title":{},"body":{"modules/EmailModule.html":{}}}],["e",{"_index":762,"title":{},"body":{"injectables/EmailService.html":{},"injectables/FederatedService.html":{},"injectables/LocalStrategy.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{}}}],["e2e",{"_index":2001,"title":{},"body":{"index.html":{}}}],["editfilename",{"_index":1405,"title":{},"body":{"modules/UploadModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["efficient",{"_index":1982,"title":{},"body":{"index.html":{}}}],["email",{"_index":246,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthEmailDto.html":{},"injectables/AuthGithubStrategy.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"controllers/EmailController.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"injectables/EmailService.html":{},"classes/Federated1665882607149.html":{},"injectables/FederatedService.html":{},"injectables/HandlebarEmailService.html":{},"interfaces/SendEmailServiceInterface.html":{},"entities/User.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"coverage.html":{},"classes/initTables1664757497775.html":{}}}],["email'})@post",{"_index":688,"title":{},"body":{"controllers/EmailController.html":{}}}],["email'})@post('template",{"_index":694,"title":{},"body":{"controllers/EmailController.html":{}}}],["email.controller",{"_index":716,"title":{},"body":{"modules/EmailModule.html":{}}}],["email.dto",{"_index":318,"title":{},"body":{"controllers/AuthController.html":{}}}],["email.dto.ts",{"_index":352,"title":{},"body":{"classes/AuthEmailDto.html":{},"coverage.html":{}}}],["email.module",{"_index":165,"title":{},"body":{"modules/AppModule.html":{}}}],["email.module.ts",{"_index":965,"title":{},"body":{"modules/HandlebarEmailModule.html":{}}}],["email.service",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"modules/HandlebarEmailModule.html":{}}}],["email.service.ts",{"_index":969,"title":{},"body":{"injectables/HandlebarEmailService.html":{},"coverage.html":{}}}],["email.service.ts:15",{"_index":973,"title":{},"body":{"injectables/HandlebarEmailService.html":{}}}],["email.service.ts:7",{"_index":972,"title":{},"body":{"injectables/HandlebarEmailService.html":{}}}],["email/email.module",{"_index":451,"title":{},"body":{"modules/AuthModule.html":{}}}],["email/email.service",{"_index":504,"title":{},"body":{"injectables/AuthService.html":{}}}],["email/handlebar",{"_index":164,"title":{},"body":{"modules/AppModule.html":{},"modules/HandlebarEmailModule.html":{},"injectables/HandlebarEmailService.html":{},"coverage.html":{}}}],["email/interfaces/email",{"_index":506,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HandlebarEmailService.html":{}}}],["email/interfaces/send",{"_index":974,"title":{},"body":{"injectables/HandlebarEmailService.html":{}}}],["email_template_reset_password",{"_index":503,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailconfig",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"modules/HandlebarEmailModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emailconfig.key",{"_index":968,"title":{},"body":{"modules/HandlebarEmailModule.html":{}}}],["emailcontroller",{"_index":681,"title":{"controllers/EmailController.html":{}},"body":{"controllers/EmailController.html":{},"modules/EmailModule.html":{},"coverage.html":{}}}],["emaildto",{"_index":691,"title":{"classes/EmailDto.html":{}},"body":{"controllers/EmailController.html":{},"classes/EmailDto.html":{},"coverage.html":{}}}],["emailmodule",{"_index":99,"title":{"modules/EmailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules.html":{},"overview.html":{}}}],["emailmodule.registerasync",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["emailmoduleoptionsinterface",{"_index":711,"title":{"interfaces/EmailModuleOptionsInterface.html":{}},"body":{"modules/EmailModule.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"coverage.html":{}}}],["emailoptions",{"_index":546,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/HandlebarEmailService.html":{},"interfaces/SendEmailServiceInterface.html":{}}}],["emailoptionsinterface",{"_index":505,"title":{"interfaces/EmailOptionsInterface.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/EmailOptionsInterface.html":{},"injectables/EmailService.html":{},"injectables/HandlebarEmailService.html":{},"interfaces/SendEmailServiceInterface.html":{},"coverage.html":{}}}],["emails",{"_index":954,"title":{},"body":{"interfaces/GitHubProfileInterface.html":{}}}],["emailservice",{"_index":186,"title":{"injectables/EmailService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"coverage.html":{}}}],["emailservice.name",{"_index":764,"title":{},"body":{"injectables/EmailService.html":{}}}],["endpoint",{"_index":687,"title":{},"body":{"controllers/EmailController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{}}}],["entities",{"_index":814,"title":{},"body":{"entities/Federated.html":{},"entities/Role.html":{},"entities/User.html":{},"entities/UserRole.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":812,"title":{"entities/Federated.html":{},"entities/Role.html":{},"entities/User.html":{},"entities/UserRole.html":{}},"body":{"entities/Federated.html":{},"entities/Role.html":{},"classes/RoleFactory.html":{},"entities/User.html":{},"classes/UserFactory.html":{},"entities/UserRole.html":{},"classes/UserRoleFactory.html":{},"coverage.html":{}}}],["entity.dto.ts",{"_index":607,"title":{},"body":{"classes/CommonEntityDto.html":{},"coverage.html":{}}}],["entity.dto.ts:13",{"_index":617,"title":{},"body":{"classes/CommonEntityDto.html":{}}}],["entity.dto.ts:22",{"_index":614,"title":{},"body":{"classes/CommonEntityDto.html":{}}}],["entity.dto.ts:31",{"_index":621,"title":{},"body":{"classes/CommonEntityDto.html":{}}}],["entity.interface",{"_index":602,"title":{},"body":{"classes/CommonEntity.html":{}}}],["entity.interface.ts",{"_index":623,"title":{},"body":{"interfaces/CommonEntityInterface.html":{},"coverage.html":{}}}],["entity.{js,ts",{"_index":2173,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entitysubscriberinterface",{"_index":1711,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["enum/role.enum",{"_index":1256,"title":{},"body":{"controllers/RoleController.html":{},"guards/RolesGuard.html":{}}}],["enumerations",{"_index":1955,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["environment",{"_index":1348,"title":{},"body":{"interfaces/ServerConfigInterface.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["equal",{"_index":1738,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["equal(user.email",{"_index":1767,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["equal(user.username",{"_index":1781,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["error",{"_index":766,"title":{},"body":{"injectables/EmailService.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["error('only",{"_index":2114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["error(message",{"_index":1150,"title":{},"body":{"injectables/LoggerService.html":{}}}],["error.getstatus",{"_index":1168,"title":{},"body":{"injectables/LoggerService.html":{}}}],["error.message",{"_index":1165,"title":{},"body":{"injectables/LoggerService.html":{}}}],["errorcode",{"_index":804,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{},"interfaces/ErrorCodeExceptionInterface.html":{},"classes/UserNotFoundException.html":{}}}],["errorcodeexceptionfilter",{"_index":782,"title":{"classes/ErrorCodeExceptionFilter.html":{}},"body":{"classes/ErrorCodeExceptionFilter.html":{},"coverage.html":{}}}],["errorcodeexceptioninterface",{"_index":792,"title":{"interfaces/ErrorCodeExceptionInterface.html":{}},"body":{"classes/ErrorCodeExceptionFilter.html":{},"interfaces/ErrorCodeExceptionInterface.html":{},"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["errormessage",{"_index":800,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{}}}],["errors",{"_index":1093,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["etc",{"_index":870,"title":{},"body":{"interfaces/FederatedInterface.html":{}}}],["even",{"_index":254,"title":{},"body":{"controllers/AuthController.html":{}}}],["event",{"_index":1724,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["event.entity",{"_index":1756,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["event.manager.count(user",{"_index":1775,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["event.manager.create(userrole",{"_index":1792,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["event.manager.findone(role",{"_index":1789,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["event.manager.findone(user",{"_index":1761,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["event.manager.save(userrole",{"_index":1793,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["eventsubscriber",{"_index":1739,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["exact",{"_index":1773,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["exception",{"_index":789,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{},"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerService.html":{}}}],["exception(error",{"_index":1153,"title":{},"body":{"injectables/LoggerService.html":{}}}],["exception.filter",{"_index":1051,"title":{},"body":{"modules/LoggerModule.html":{}}}],["exception.filter.ts",{"_index":784,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{},"injectables/LoggerExceptionFilter.html":{},"coverage.html":{}}}],["exception.filter.ts:12",{"_index":1036,"title":{},"body":{"injectables/LoggerExceptionFilter.html":{}}}],["exception.filter.ts:17",{"_index":1030,"title":{},"body":{"injectables/LoggerExceptionFilter.html":{}}}],["exception.filter.ts:8",{"_index":788,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{}}}],["exception.interface",{"_index":794,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{},"classes/UserNotFoundException.html":{}}}],["exception.interface.ts",{"_index":811,"title":{},"body":{"interfaces/ErrorCodeExceptionInterface.html":{},"coverage.html":{}}}],["exception?.errorcode",{"_index":805,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{}}}],["exception?.getstatus",{"_index":798,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{}}}],["exception?.message",{"_index":802,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{}}}],["exception['response']?.message",{"_index":801,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{}}}],["exceptions/user",{"_index":1672,"title":{},"body":{"injectables/UserService.html":{}}}],["exclude",{"_index":188,"title":{},"body":{"modules/AppModule.html":{},"classes/AuthLoginDto.html":{},"classes/CommonEntityDto.html":{},"classes/EmailDto.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"classes/FederatedUpdateDto.html":{},"classes/FileResponseDto.html":{},"classes/RoleDto.html":{},"classes/UserDto.html":{}}}],["exclude('auth",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["executioncontext",{"_index":1066,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{},"interfaces/Response.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["exist",{"_index":293,"title":{},"body":{"controllers/AuthController.html":{},"injectables/FederatedService.html":{},"miscellaneous/variables.html":{}}}],["existing",{"_index":1758,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["exists",{"_index":247,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/FederatedService.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"miscellaneous/variables.html":{}}}],["exists(provider",{"_index":900,"title":{},"body":{"injectables/FederatedService.html":{}}}],["exp",{"_index":489,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["expiration",{"_index":1662,"title":{},"body":{"injectables/UserService.html":{}}}],["expired",{"_index":294,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["expiresin",{"_index":2140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["export",{"_index":36,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/ApiKeyMiddleware.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"injectables/AppService.html":{},"interfaces/AuthConfigInterface.html":{},"controllers/AuthController.html":{},"classes/AuthEmailDto.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"classes/AuthLoginDto.html":{},"classes/AuthLoginInterface.html":{},"modules/AuthModule.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatePasswordDto.html":{},"interfaces/AwsS3ConfigInterface.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"interfaces/CommonEntityInterface.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"modules/EmailModule.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"interfaces/EmailOptionsInterface.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"interfaces/ErrorCodeExceptionInterface.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"modules/FederatedModule.html":{},"injectables/FederatedService.html":{},"classes/FederatedUpdateDto.html":{},"classes/FileResponseDto.html":{},"interfaces/GitHubProfileInterface.html":{},"injectables/GithubAuthGuard.html":{},"interfaces/GithubConfigInterface.html":{},"modules/HandlebarEmailModule.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfigInterface.html":{},"injectables/JwtConfigService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfigInterface.html":{},"injectables/LoggerExceptionFilter.html":{},"modules/LoggerModule.html":{},"injectables/LoggerRequestInterceptor.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"interfaces/Response.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleFactory.html":{},"interfaces/RoleInterface.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"interfaces/SendEmailServiceInterface.html":{},"interfaces/ServerConfigInterface.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserCreatableInterface.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"interfaces/UserOwnableInterface.html":{},"controllers/UserReportController.html":{},"entities/UserRole.html":{},"controllers/UserRoleController.html":{},"interfaces/UserRoleCreatableInterface.html":{},"classes/UserRoleDto.html":{},"classes/UserRoleFactory.html":{},"interfaces/UserRoleInterface.html":{},"modules/UserRoleModule.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"classes/initTables1664757497775.html":{}}}],["exports",{"_index":724,"title":{},"body":{"modules/EmailModule.html":{},"modules/FederatedModule.html":{},"modules/HandlebarEmailModule.html":{},"modules/LoggerModule.html":{},"modules/UserModule.html":{}}}],["expose",{"_index":433,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CommonEntityDto.html":{},"classes/EmailDto.html":{},"classes/FederatedDto.html":{},"classes/FileResponseDto.html":{},"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{}}}],["expose()@apiproperty({type",{"_index":427,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/FederatedDto.html":{}}}],["express",{"_index":68,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"classes/ErrorCodeExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerService.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":1364,"title":{},"body":{"controllers/UploadController.html":{},"injectables/awsS3UploadService.html":{},"miscellaneous/variables.html":{}}}],["extended",{"_index":1935,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":354,"title":{},"body":{"classes/AuthEmailDto.html":{},"injectables/AuthGithubStrategy.html":{},"classes/AuthUpdatePasswordDto.html":{},"classes/CreateUserDto.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"classes/ErrorCodeExceptionFilter.html":{},"entities/Federated.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"classes/FederatedUpdateDto.html":{},"injectables/GithubAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerExceptionFilter.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"injectables/LoggerService.html":{},"entities/Role.html":{},"classes/RoleDto.html":{},"classes/RoleFactory.html":{},"interfaces/RoleInterface.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserCreatableInterface.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"interfaces/UserInterface.html":{},"classes/UserNotFoundException.html":{},"entities/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserRoleFactory.html":{},"interfaces/UserRoleInterface.html":{},"classes/UserSeeder.html":{}}}],["extname(file.originalname",{"_index":2104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extra",{"_index":1130,"title":{},"body":{"injectables/LoggerSentryTransport.html":{}}}],["extractjwt",{"_index":1004,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":1007,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extras",{"_index":1128,"title":{},"body":{"injectables/LoggerSentryTransport.html":{}}}],["facebook",{"_index":869,"title":{},"body":{"interfaces/FederatedInterface.html":{},"injectables/FederatedService.html":{}}}],["factory",{"_index":1285,"title":{},"body":{"classes/RoleFactory.html":{},"classes/UserFactory.html":{},"classes/UserRoleFactory.html":{}}}],["factoryprovider",{"_index":728,"title":{},"body":{"interfaces/EmailModuleOptionsInterface.html":{}}}],["fail",{"_index":569,"title":{},"body":{"injectables/AuthService.html":{}}}],["failed",{"_index":1701,"title":{},"body":{"injectables/UserService.html":{},"classes/UserSubscriber.html":{}}}],["faker",{"_index":1287,"title":{},"body":{"classes/RoleFactory.html":{},"classes/UserFactory.html":{}}}],["faker.helpers.unique(faker.internet.email",{"_index":1519,"title":{},"body":{"classes/UserFactory.html":{}}}],["faker.helpers.unique(faker.internet.username",{"_index":1518,"title":{},"body":{"classes/UserFactory.html":{}}}],["faker.name.firstname",{"_index":1514,"title":{},"body":{"classes/UserFactory.html":{}}}],["faker.name.lastname",{"_index":1516,"title":{},"body":{"classes/UserFactory.html":{}}}],["false",{"_index":1414,"title":{},"body":{"entities/User.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"miscellaneous/variables.html":{}}}],["false})@expose",{"_index":1593,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["false})@expose()@transform",{"_index":1496,"title":{},"body":{"classes/UserDto.html":{}}}],["fatal",{"_index":765,"title":{},"body":{"injectables/EmailService.html":{}}}],["federated",{"_index":813,"title":{"entities/Federated.html":{}},"body":{"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"modules/FederatedModule.html":{},"injectables/FederatedService.html":{},"classes/FederatedUpdateDto.html":{},"entities/User.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["federated'})@isstring",{"_index":860,"title":{},"body":{"classes/FederatedDto.html":{}}}],["federated.dto",{"_index":855,"title":{},"body":{"classes/FederatedCreateDto.html":{},"classes/FederatedUpdateDto.html":{}}}],["federated.dto.ts",{"_index":852,"title":{},"body":{"classes/FederatedCreateDto.html":{},"classes/FederatedUpdateDto.html":{},"coverage.html":{}}}],["federated.entity",{"_index":881,"title":{},"body":{"modules/FederatedModule.html":{},"injectables/FederatedService.html":{}}}],["federated.service",{"_index":880,"title":{},"body":{"modules/FederatedModule.html":{}}}],["federated.ts",{"_index":829,"title":{},"body":{"classes/Federated1665882607149.html":{},"coverage.html":{}}}],["federated.ts:18",{"_index":831,"title":{},"body":{"classes/Federated1665882607149.html":{}}}],["federated.ts:4",{"_index":830,"title":{},"body":{"classes/Federated1665882607149.html":{}}}],["federated.ts:6",{"_index":832,"title":{},"body":{"classes/Federated1665882607149.html":{}}}],["federated.user",{"_index":1419,"title":{},"body":{"entities/User.html":{}}}],["federated/federated.entity",{"_index":1431,"title":{},"body":{"entities/User.html":{}}}],["federated/federated.module",{"_index":452,"title":{},"body":{"modules/AuthModule.html":{}}}],["federated/federated.service",{"_index":406,"title":{},"body":{"injectables/AuthGithubStrategy.html":{}}}],["federated1665882607149",{"_index":827,"title":{"classes/Federated1665882607149.html":{}},"body":{"classes/Federated1665882607149.html":{},"coverage.html":{}}}],["federatedcreatableinterface",{"_index":853,"title":{},"body":{"classes/FederatedCreateDto.html":{},"miscellaneous/typealiases.html":{}}}],["federatedcreatedto",{"_index":850,"title":{"classes/FederatedCreateDto.html":{}},"body":{"classes/FederatedCreateDto.html":{},"coverage.html":{}}}],["federatedcredentialsinterface",{"_index":910,"title":{},"body":{"injectables/FederatedService.html":{}}}],["federateddto",{"_index":854,"title":{"classes/FederatedDto.html":{}},"body":{"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"classes/FederatedUpdateDto.html":{},"coverage.html":{}}}],["federatedinterface",{"_index":826,"title":{"interfaces/FederatedInterface.html":{}},"body":{"entities/Federated.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"coverage.html":{}}}],["federatedmodule",{"_index":100,"title":{"modules/FederatedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/FederatedModule.html":{},"modules.html":{},"overview.html":{}}}],["federatedservice",{"_index":394,"title":{"injectables/FederatedService.html":{}},"body":{"injectables/AuthGithubStrategy.html":{},"modules/FederatedModule.html":{},"injectables/FederatedService.html":{},"coverage.html":{},"overview.html":{}}}],["federatedupdatableinterface",{"_index":928,"title":{},"body":{"classes/FederatedUpdateDto.html":{},"miscellaneous/typealiases.html":{}}}],["federatedupdatedto",{"_index":926,"title":{"classes/FederatedUpdateDto.html":{}},"body":{"classes/FederatedUpdateDto.html":{},"coverage.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/ApiKeyMiddleware.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"injectables/AppService.html":{},"interfaces/AuthConfigInterface.html":{},"controllers/AuthController.html":{},"classes/AuthEmailDto.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"classes/AuthLoginDto.html":{},"classes/AuthLoginInterface.html":{},"modules/AuthModule.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatePasswordDto.html":{},"interfaces/AwsS3ConfigInterface.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"interfaces/CommonEntityInterface.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"modules/EmailModule.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"interfaces/EmailOptionsInterface.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"interfaces/ErrorCodeExceptionInterface.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"modules/FederatedModule.html":{},"injectables/FederatedService.html":{},"classes/FederatedUpdateDto.html":{},"classes/FileResponseDto.html":{},"interfaces/GitHubProfileInterface.html":{},"injectables/GithubAuthGuard.html":{},"interfaces/GithubConfigInterface.html":{},"modules/HandlebarEmailModule.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfigInterface.html":{},"injectables/JwtConfigService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfigInterface.html":{},"injectables/LoggerExceptionFilter.html":{},"modules/LoggerModule.html":{},"injectables/LoggerRequestInterceptor.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"interfaces/Response.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleFactory.html":{},"interfaces/RoleInterface.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"interfaces/SendEmailServiceInterface.html":{},"interfaces/ServerConfigInterface.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserCreatableInterface.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"interfaces/UserOwnableInterface.html":{},"controllers/UserReportController.html":{},"entities/UserRole.html":{},"controllers/UserRoleController.html":{},"interfaces/UserRoleCreatableInterface.html":{},"classes/UserRoleDto.html":{},"classes/UserRoleFactory.html":{},"interfaces/UserRoleInterface.html":{},"modules/UserRoleModule.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"coverage.html":{},"classes/initTables1664757497775.html":{},"miscellaneous/variables.html":{}}}],["file.buffer",{"_index":1810,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["file.mimetype",{"_index":1812,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["file.originalname.split('.')[0",{"_index":2102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file?.originalname?.match(/\\.(jpg|jpeg|png|gif",{"_index":2112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileextname",{"_index":2103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filefilter",{"_index":1392,"title":{},"body":{"controllers/UploadController.html":{}}}],["fileinterceptor",{"_index":1374,"title":{},"body":{"controllers/UploadController.html":{}}}],["fileinterceptor('file",{"_index":1391,"title":{},"body":{"controllers/UploadController.html":{}}}],["filename",{"_index":932,"title":{},"body":{"classes/FileResponseDto.html":{},"miscellaneous/variables.html":{}}}],["fileresponsedto",{"_index":930,"title":{"classes/FileResponseDto.html":{}},"body":{"classes/FileResponseDto.html":{},"injectables/awsS3UploadService.html":{},"coverage.html":{}}}],["files",{"_index":2078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill(null",{"_index":2107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["find",{"_index":1228,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{}}}],["findall",{"_index":1218,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["findbyemail",{"_index":1640,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":1648,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyid",{"_index":1298,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["findbyid(id",{"_index":1304,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["findone",{"_index":1219,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["findone(@param('id",{"_index":1267,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserRoleController.html":{}}}],["findone(id",{"_index":1230,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["findoperator",{"_index":1740,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["first",{"_index":1486,"title":{},"body":{"classes/UserDto.html":{}}}],["firstname",{"_index":647,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/EmailDto.html":{},"injectables/EmailService.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"classes/initTables1664757497775.html":{}}}],["fk_216af9ffcc64c2529a9db18b52c",{"_index":842,"title":{},"body":{"classes/Federated1665882607149.html":{}}}],["fk_ab40a6f0cd7d3ebfcce082131fd",{"_index":2039,"title":{},"body":{"classes/initTables1664757497775.html":{}}}],["fk_dba55ed826ef26b5b22bd39409b",{"_index":2040,"title":{},"body":{"classes/initTables1664757497775.html":{}}}],["flag",{"_index":1479,"title":{},"body":{"classes/UserDto.html":{}}}],["foreign",{"_index":843,"title":{},"body":{"classes/Federated1665882607149.html":{},"classes/UserSubscriber.html":{},"classes/initTables1664757497775.html":{}}}],["forgotpassword",{"_index":234,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["forgotpassword(@body",{"_index":344,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassword(authemaildto",{"_index":239,"title":{},"body":{"controllers/AuthController.html":{}}}],["forgotpassword(email",{"_index":487,"title":{},"body":{"injectables/AuthService.html":{}}}],["format",{"_index":347,"title":{},"body":{"controllers/AuthController.html":{},"classes/CommonEntityDto.html":{},"classes/CreateUserRoleDto.html":{},"injectables/LoggerRequestInterceptor.html":{},"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"miscellaneous/variables.html":{}}}],["formatrequestmessage",{"_index":1138,"title":{},"body":{"injectables/LoggerService.html":{}}}],["formatrequestmessage(req",{"_index":1155,"title":{},"body":{"injectables/LoggerService.html":{}}}],["formatresponsemessage",{"_index":1139,"title":{},"body":{"injectables/LoggerService.html":{}}}],["formatresponsemessage(req",{"_index":1157,"title":{},"body":{"injectables/LoggerService.html":{}}}],["forroutes",{"_index":190,"title":{},"body":{"modules/AppModule.html":{}}}],["forwardref",{"_index":447,"title":{},"body":{"modules/AuthModule.html":{}}}],["found",{"_index":255,"title":{},"body":{"controllers/AuthController.html":{},"injectables/FederatedService.html":{},"classes/UserNotFoundException.html":{},"classes/UserSubscriber.html":{}}}],["found.exception",{"_index":1673,"title":{},"body":{"injectables/UserService.html":{}}}],["found.exception.ts",{"_index":1536,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["found.exception.ts:8",{"_index":1537,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["framework",{"_index":1980,"title":{},"body":{"index.html":{}}}],["function",{"_index":727,"title":{},"body":{"interfaces/EmailModuleOptionsInterface.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"coverage.html":{}}}],["functions",{"_index":1958,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generate",{"_index":243,"title":{},"body":{"controllers/AuthController.html":{},"injectables/UserService.html":{}}}],["generatesalt",{"_index":665,"title":{},"body":{"classes/CryptUtil.html":{}}}],["get(':id",{"_index":1266,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{}}}],["get(':id')@apioperation({operationid",{"_index":1231,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{}}}],["get(':path",{"_index":1369,"title":{},"body":{"controllers/UploadController.html":{}}}],["get('callback",{"_index":388,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["get('profile",{"_index":338,"title":{},"body":{"controllers/AuthController.html":{}}}],["get('report_2",{"_index":1550,"title":{},"body":{"controllers/UserReportController.html":{}}}],["get()@apioperation({operationid",{"_index":1226,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{}}}],["get(@authuser",{"_index":389,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["get(user",{"_index":360,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["getaccessconfig",{"_index":986,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["getprofile",{"_index":235,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(@authuser",{"_index":339,"title":{},"body":{"controllers/AuthController.html":{}}}],["getprofile(user",{"_index":261,"title":{},"body":{"controllers/AuthController.html":{}}}],["getrefreshconfig",{"_index":987,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["getsampleconfig",{"_index":82,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":1976,"title":{"index.html":{}},"body":{}}],["github",{"_index":370,"title":{},"body":{"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"interfaces/FederatedInterface.html":{},"injectables/FederatedService.html":{},"dependencies.html":{}}}],["github.controller",{"_index":454,"title":{},"body":{"modules/AuthModule.html":{}}}],["github.controller.ts",{"_index":358,"title":{},"body":{"controllers/AuthGithubController.html":{},"coverage.html":{}}}],["github.controller.ts:23",{"_index":372,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["github.controller.ts:34",{"_index":365,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["github_module_config",{"_index":1843,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["githubauthguard",{"_index":377,"title":{"injectables/GithubAuthGuard.html":{}},"body":{"controllers/AuthGithubController.html":{},"injectables/GithubAuthGuard.html":{},"coverage.html":{}}}],["githubconfig",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthGithubStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["githubconfiginterface",{"_index":959,"title":{"interfaces/GithubConfigInterface.html":{}},"body":{"interfaces/GithubConfigInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["githubprofileinterface",{"_index":399,"title":{"interfaces/GitHubProfileInterface.html":{}},"body":{"injectables/AuthGithubStrategy.html":{},"interfaces/GitHubProfileInterface.html":{},"coverage.html":{}}}],["global",{"_index":715,"title":{},"body":{"modules/EmailModule.html":{},"modules/LoggerModule.html":{}}}],["google",{"_index":906,"title":{},"body":{"injectables/FederatedService.html":{}}}],["graph",{"_index":2045,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":2008,"title":{},"body":{"index.html":{}}}],["guard",{"_index":325,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"modules/AuthModule.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{},"coverage.html":{},"overview.html":{}}}],["guard.ts",{"_index":956,"title":{},"body":{"injectables/GithubAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["guards",{"_index":1322,"title":{},"body":{"guards/RolesGuard.html":{}}}],["guards/github",{"_index":378,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["guards/jwt",{"_index":324,"title":{},"body":{"controllers/AuthController.html":{}}}],["guards/local",{"_index":327,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["guards/roles.guard",{"_index":1253,"title":{},"body":{"controllers/RoleController.html":{}}}],["handlebar",{"_index":966,"title":{},"body":{"modules/HandlebarEmailModule.html":{}}}],["handlebaremailmodule",{"_index":162,"title":{"modules/HandlebarEmailModule.html":{}},"body":{"modules/AppModule.html":{},"modules/HandlebarEmailModule.html":{},"modules.html":{},"overview.html":{}}}],["handlebaremailservice",{"_index":166,"title":{"injectables/HandlebarEmailService.html":{}},"body":{"modules/AppModule.html":{},"modules/HandlebarEmailModule.html":{},"injectables/HandlebarEmailService.html":{},"coverage.html":{},"overview.html":{}}}],["handlebars",{"_index":1931,"title":{},"body":{"dependencies.html":{}}}],["handlebarsadapter",{"_index":2132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hash",{"_index":679,"title":{},"body":{"classes/CryptUtil.html":{},"classes/UserSubscriber.html":{}}}],["hashpassword",{"_index":666,"title":{},"body":{"classes/CryptUtil.html":{}}}],["hashpassword(password",{"_index":669,"title":{},"body":{"classes/CryptUtil.html":{}}}],["helper",{"_index":1968,"title":{},"body":{"miscellaneous/functions.html":{}}}],["here",{"_index":2017,"title":{},"body":{"index.html":{}}}],["host",{"_index":210,"title":{},"body":{"injectables/AppService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"injectables/LoggerExceptionFilter.html":{},"miscellaneous/variables.html":{}}}],["host.switchtohttp",{"_index":796,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{}}}],["host?.host",{"_index":223,"title":{},"body":{"injectables/AppService.html":{}}}],["html",{"_index":736,"title":{},"body":{"interfaces/EmailOptionsInterface.html":{},"injectables/EmailService.html":{}}}],["http",{"_index":1167,"title":{},"body":{"injectables/LoggerService.html":{}}}],["http://localhost:3000",{"_index":2161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcode",{"_index":297,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpcode(200",{"_index":340,"title":{},"body":{"controllers/AuthController.html":{}}}],["httpexception",{"_index":790,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{},"injectables/LoggerService.html":{}}}],["https://nestjs.com",{"_index":2024,"title":{},"body":{"index.html":{}}}],["id",{"_index":534,"title":{},"body":{"injectables/AuthService.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"interfaces/CommonEntityInterface.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedDto.html":{},"injectables/FederatedService.html":{},"interfaces/GitHubProfileInterface.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"controllers/UserRoleController.html":{},"classes/UserRoleDto.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"classes/initTables1664757497775.html":{}}}],["identification",{"_index":872,"title":{},"body":{"interfaces/FederatedInterface.html":{}}}],["identifier",{"_index":1835,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":381,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["identity.'})@useguards(githubauthguard)@get",{"_index":371,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["image",{"_index":1371,"title":{},"body":{"controllers/UploadController.html":{},"miscellaneous/variables.html":{}}}],["imagefilefilter",{"_index":1380,"title":{},"body":{"controllers/UploadController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/ApiKeyMiddleware.html":{},"modules/AppModule.html":{},"classes/AuthLoginDto.html":{},"classes/CommonEntity.html":{},"classes/CreateUserDto.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"classes/FederatedUpdateDto.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtConfigService.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerSentryTransport.html":{},"interfaces/Response.html":{},"classes/RoleDto.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserNotFoundException.html":{},"entities/UserRole.html":{},"classes/UserRoleDto.html":{},"classes/UserSubscriber.html":{},"classes/initTables1664757497775.html":{}}}],["import",{"_index":34,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/ApiKeyMiddleware.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/AuthEmailDto.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"classes/AuthLoginDto.html":{},"modules/AuthModule.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatePasswordDto.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"modules/EmailModule.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"modules/FederatedModule.html":{},"injectables/FederatedService.html":{},"classes/FederatedUpdateDto.html":{},"classes/FileResponseDto.html":{},"injectables/GithubAuthGuard.html":{},"modules/HandlebarEmailModule.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfigInterface.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfigInterface.html":{},"injectables/LoggerExceptionFilter.html":{},"modules/LoggerModule.html":{},"injectables/LoggerRequestInterceptor.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"interfaces/Response.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleFactory.html":{},"interfaces/RoleInterface.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"interfaces/SendEmailServiceInterface.html":{},"interfaces/ServerConfigInterface.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserCreatableInterface.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"controllers/UserReportController.html":{},"entities/UserRole.html":{},"controllers/UserRoleController.html":{},"classes/UserRoleDto.html":{},"classes/UserRoleFactory.html":{},"interfaces/UserRoleInterface.html":{},"modules/UserRoleModule.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"classes/initTables1664757497775.html":{}}}],["imports",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/FederatedModule.html":{},"modules/HandlebarEmailModule.html":{},"modules/LoggerModule.html":{},"modules/RoleModule.html":{},"modules/UploadModule.html":{},"modules/UserModule.html":{},"modules/UserRoleModule.html":{}}}],["incoming",{"_index":1089,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/ApiKeyMiddleware.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/AuthConfigInterface.html":{},"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"classes/AuthLoginDto.html":{},"classes/AuthLoginInterface.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"interfaces/AwsS3ConfigInterface.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"interfaces/CommonEntityInterface.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"interfaces/EmailOptionsInterface.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"interfaces/ErrorCodeExceptionInterface.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"injectables/FederatedService.html":{},"classes/FileResponseDto.html":{},"interfaces/GitHubProfileInterface.html":{},"interfaces/GithubConfigInterface.html":{},"injectables/HandlebarEmailService.html":{},"interfaces/JwtConfigInterface.html":{},"injectables/JwtConfigService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfigInterface.html":{},"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"interfaces/Response.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleFactory.html":{},"interfaces/RoleInterface.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"interfaces/SendEmailServiceInterface.html":{},"interfaces/ServerConfigInterface.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateRoleDto.html":{},"controllers/UploadController.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"interfaces/UserInterface.html":{},"classes/UserNotFoundException.html":{},"interfaces/UserOwnableInterface.html":{},"controllers/UserReportController.html":{},"entities/UserRole.html":{},"controllers/UserRoleController.html":{},"interfaces/UserRoleCreatableInterface.html":{},"classes/UserRoleDto.html":{},"classes/UserRoleFactory.html":{},"interfaces/UserRoleInterface.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"classes/initTables1664757497775.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":1973,"title":{},"body":{"miscellaneous/functions.html":{}}}],["infer",{"_index":221,"title":{},"body":{"injectables/AppService.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/ApiKeyMiddleware.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"injectables/AppService.html":{},"interfaces/AuthConfigInterface.html":{},"controllers/AuthController.html":{},"classes/AuthEmailDto.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"classes/AuthLoginDto.html":{},"classes/AuthLoginInterface.html":{},"modules/AuthModule.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatePasswordDto.html":{},"interfaces/AwsS3ConfigInterface.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"interfaces/CommonEntityInterface.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"modules/EmailModule.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"interfaces/EmailOptionsInterface.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"interfaces/ErrorCodeExceptionInterface.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"modules/FederatedModule.html":{},"injectables/FederatedService.html":{},"classes/FederatedUpdateDto.html":{},"classes/FileResponseDto.html":{},"interfaces/GitHubProfileInterface.html":{},"injectables/GithubAuthGuard.html":{},"interfaces/GithubConfigInterface.html":{},"modules/HandlebarEmailModule.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfigInterface.html":{},"injectables/JwtConfigService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfigInterface.html":{},"injectables/LoggerExceptionFilter.html":{},"modules/LoggerModule.html":{},"injectables/LoggerRequestInterceptor.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"interfaces/Response.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleFactory.html":{},"interfaces/RoleInterface.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"interfaces/SendEmailServiceInterface.html":{},"interfaces/ServerConfigInterface.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserCreatableInterface.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"interfaces/UserOwnableInterface.html":{},"controllers/UserReportController.html":{},"entities/UserRole.html":{},"controllers/UserRoleController.html":{},"interfaces/UserRoleCreatableInterface.html":{},"classes/UserRoleDto.html":{},"classes/UserRoleFactory.html":{},"interfaces/UserRoleInterface.html":{},"modules/UserRoleModule.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"classes/initTables1664757497775.html":{},"miscellaneous/variables.html":{}}}],["inform",{"_index":1480,"title":{},"body":{"classes/UserDto.html":{}}}],["information",{"_index":544,"title":{},"body":{"injectables/AuthService.html":{},"injectables/FederatedService.html":{}}}],["inherited",{"_index":864,"title":{},"body":{"classes/FederatedDto.html":{},"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{}}}],["init",{"_index":1117,"title":{},"body":{"injectables/LoggerSentryTransport.html":{}}}],["inittables.ts",{"_index":1877,"title":{},"body":{"coverage.html":{},"classes/initTables1664757497775.html":{}}}],["inittables.ts:22",{"_index":2029,"title":{},"body":{"classes/initTables1664757497775.html":{}}}],["inittables.ts:4",{"_index":2028,"title":{},"body":{"classes/initTables1664757497775.html":{}}}],["inittables.ts:5",{"_index":2030,"title":{},"body":{"classes/initTables1664757497775.html":{}}}],["inittables1664757497775",{"_index":1878,"title":{"classes/initTables1664757497775.html":{}},"body":{"coverage.html":{},"classes/initTables1664757497775.html":{}}}],["inject",{"_index":180,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/AuthGithubStrategy.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/EmailModule.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"injectables/EmailService.html":{},"modules/HandlebarEmailModule.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerTransportService.html":{},"controllers/UserController.html":{},"controllers/UserReportController.html":{},"injectables/awsS3UploadService.html":{}}}],["inject(authconfig.key",{"_index":513,"title":{},"body":{"injectables/AuthService.html":{}}}],["inject(awss3config.key",{"_index":1805,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["inject(cache_manager",{"_index":1463,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserReportController.html":{}}}],["inject(githubconfig.key",{"_index":412,"title":{},"body":{"injectables/AuthGithubStrategy.html":{}}}],["inject(jwtconfig.key",{"_index":514,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{}}}],["inject(loggerconfig.key",{"_index":1180,"title":{},"body":{"injectables/LoggerTransportService.html":{}}}],["inject(loggersentryconfig.key",{"_index":1116,"title":{},"body":{"injectables/LoggerSentryTransport.html":{}}}],["inject(loggerservice",{"_index":1035,"title":{},"body":{"injectables/LoggerExceptionFilter.html":{}}}],["inject(sampleconfig.key",{"_index":215,"title":{},"body":{"injectables/AppService.html":{}}}],["inject(send_email_token",{"_index":755,"title":{},"body":{"injectables/EmailService.html":{}}}],["injectable",{"_index":50,"title":{"injectables/ApiKeyMiddleware.html":{},"injectables/AppService.html":{},"injectables/AuthGithubStrategy.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/FederatedService.html":{},"injectables/GithubAuthGuard.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"injectables/LoggerTransportService.html":{},"injectables/RoleService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"injectables/awsS3UploadService.html":{}},"body":{"injectables/ApiKeyMiddleware.html":{},"injectables/AppService.html":{},"injectables/AuthGithubStrategy.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/FederatedService.html":{},"injectables/GithubAuthGuard.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"injectables/LoggerTransportService.html":{},"interfaces/Response.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"injectables/awsS3UploadService.html":{},"coverage.html":{}}}],["injectables",{"_index":52,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"injectables/AppService.html":{},"injectables/AuthGithubStrategy.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/FederatedService.html":{},"injectables/GithubAuthGuard.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"injectables/LoggerTransportService.html":{},"injectables/RoleService.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"injectables/awsS3UploadService.html":{},"overview.html":{}}}],["injectrepository",{"_index":908,"title":{},"body":{"injectables/FederatedService.html":{},"injectables/RoleService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["injectrepository(federated",{"_index":909,"title":{},"body":{"injectables/FederatedService.html":{}}}],["injectrepository(role",{"_index":1311,"title":{},"body":{"injectables/RoleService.html":{}}}],["injectrepository(user",{"_index":1676,"title":{},"body":{"injectables/UserService.html":{}}}],["injectrepository(userrole",{"_index":1614,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["inline",{"_index":1820,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["inreplyto",{"_index":737,"title":{},"body":{"interfaces/EmailOptionsInterface.html":{}}}],["inserted",{"_index":1755,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["insertevent",{"_index":1721,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["installation",{"_index":1989,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":1991,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":554,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoggerService.html":{}}}],["instancetoplain",{"_index":375,"title":{},"body":{"controllers/AuthGithubController.html":{},"controllers/UploadController.html":{}}}],["instancetoplain(response",{"_index":1395,"title":{},"body":{"controllers/UploadController.html":{}}}],["intercept",{"_index":1060,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["intercept(_context",{"_index":1065,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["intercept(context",{"_index":1351,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["interface",{"_index":208,"title":{"interfaces/AuthConfigInterface.html":{},"interfaces/AwsS3ConfigInterface.html":{},"interfaces/CommonEntityInterface.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"interfaces/EmailOptionsInterface.html":{},"interfaces/ErrorCodeExceptionInterface.html":{},"interfaces/FederatedInterface.html":{},"interfaces/GitHubProfileInterface.html":{},"interfaces/GithubConfigInterface.html":{},"interfaces/JwtConfigInterface.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoggerConfigInterface.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"interfaces/LoggerTransportInterface.html":{},"interfaces/Response.html":{},"interfaces/RoleInterface.html":{},"interfaces/SendEmailServiceInterface.html":{},"interfaces/ServerConfigInterface.html":{},"interfaces/UserCreatableInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserOwnableInterface.html":{},"interfaces/UserRoleCreatableInterface.html":{},"interfaces/UserRoleInterface.html":{}},"body":{"injectables/AppService.html":{},"interfaces/AuthConfigInterface.html":{},"interfaces/AwsS3ConfigInterface.html":{},"interfaces/CommonEntityInterface.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"interfaces/EmailOptionsInterface.html":{},"interfaces/ErrorCodeExceptionInterface.html":{},"interfaces/FederatedInterface.html":{},"interfaces/GitHubProfileInterface.html":{},"interfaces/GithubConfigInterface.html":{},"interfaces/JwtConfigInterface.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoggerConfigInterface.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"interfaces/LoggerTransportInterface.html":{},"interfaces/Response.html":{},"interfaces/RoleInterface.html":{},"interfaces/SendEmailServiceInterface.html":{},"interfaces/ServerConfigInterface.html":{},"injectables/TransformInterceptor.html":{},"interfaces/UserCreatableInterface.html":{},"interfaces/UserInterface.html":{},"interfaces/UserOwnableInterface.html":{},"interfaces/UserRoleCreatableInterface.html":{},"interfaces/UserRoleInterface.html":{},"coverage.html":{}}}],["interfaces",{"_index":225,"title":{},"body":{"interfaces/AuthConfigInterface.html":{},"interfaces/AwsS3ConfigInterface.html":{},"interfaces/CommonEntityInterface.html":{},"classes/CreateUserDto.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"interfaces/EmailOptionsInterface.html":{},"interfaces/ErrorCodeExceptionInterface.html":{},"entities/Federated.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"interfaces/GitHubProfileInterface.html":{},"interfaces/GithubConfigInterface.html":{},"interfaces/JwtConfigInterface.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoggerConfigInterface.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"interfaces/Response.html":{},"classes/RoleDto.html":{},"interfaces/RoleInterface.html":{},"interfaces/SendEmailServiceInterface.html":{},"interfaces/ServerConfigInterface.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"interfaces/UserCreatableInterface.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"interfaces/UserOwnableInterface.html":{},"entities/UserRole.html":{},"interfaces/UserRoleCreatableInterface.html":{},"classes/UserRoleDto.html":{},"interfaces/UserRoleInterface.html":{},"overview.html":{}}}],["interfaces/auth",{"_index":436,"title":{},"body":{"classes/AuthLoginDto.html":{}}}],["interfaces/common",{"_index":601,"title":{},"body":{"classes/CommonEntity.html":{}}}],["interfaces/email",{"_index":717,"title":{},"body":{"modules/EmailModule.html":{},"injectables/EmailService.html":{}}}],["interfaces/error",{"_index":793,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{}}}],["interfaces/federated",{"_index":856,"title":{},"body":{"classes/FederatedCreateDto.html":{},"classes/FederatedUpdateDto.html":{}}}],["interfaces/github",{"_index":409,"title":{},"body":{"injectables/AuthGithubStrategy.html":{}}}],["interfaces/jwt",{"_index":511,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["interfaces/logger",{"_index":1178,"title":{},"body":{"injectables/LoggerTransportService.html":{}}}],["interfaces/send",{"_index":754,"title":{},"body":{"injectables/EmailService.html":{}}}],["internal",{"_index":1122,"title":{},"body":{"injectables/LoggerSentryTransport.html":{}}}],["internalservererrorexception",{"_index":502,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/FederatedService.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{}}}],["internalservererrorexception('error",{"_index":1832,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["internalservererrorexception(e",{"_index":921,"title":{},"body":{"injectables/FederatedService.html":{}}}],["intersectiontype",{"_index":640,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["invalid",{"_index":572,"title":{},"body":{"injectables/AuthService.html":{}}}],["isboolean",{"_index":1499,"title":{},"body":{"classes/UserDto.html":{}}}],["isemail",{"_index":1500,"title":{},"body":{"classes/UserDto.html":{}}}],["isglobal",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{}}}],["isstring",{"_index":434,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/AuthRefreshDto.html":{},"classes/CreateRoleDto.html":{},"classes/EmailDto.html":{},"classes/FederatedDto.html":{},"classes/FileResponseDto.html":{},"classes/RoleDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UserDto.html":{}}}],["isstrongpassword",{"_index":642,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isuuid",{"_index":662,"title":{},"body":{"classes/CreateUserRoleDto.html":{},"classes/UserRoleDto.html":{}}}],["isuuidparam",{"_index":1454,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isuuidparam('id",{"_index":1470,"title":{},"body":{"controllers/UserController.html":{}}}],["isuuidparam(property",{"_index":1964,"title":{},"body":{"miscellaneous/functions.html":{}}}],["jest",{"_index":1933,"title":{},"body":{"dependencies.html":{}}}],["join",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["join(__dirname",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["js/faker",{"_index":1288,"title":{},"body":{"classes/RoleFactory.html":{},"classes/UserFactory.html":{}}}],["jwt",{"_index":1005,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt_module_config",{"_index":1844,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtauthguard",{"_index":323,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"injectables/JwtAuthGuard.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{},"coverage.html":{}}}],["jwtconfig",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconfig.key",{"_index":460,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtconfiginterface",{"_index":978,"title":{"interfaces/JwtConfigInterface.html":{}},"body":{"interfaces/JwtConfigInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconfigservice",{"_index":982,"title":{"injectables/JwtConfigService.html":{}},"body":{"injectables/JwtConfigService.html":{},"coverage.html":{}}}],["jwtfromrequest",{"_index":1006,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":448,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.registerasync",{"_index":459,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmoduleoptions",{"_index":981,"title":{},"body":{"interfaces/JwtConfigInterface.html":{},"injectables/JwtConfigService.html":{}}}],["jwtoptionsfactory",{"_index":992,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["jwtpayload",{"_index":510,"title":{"interfaces/JwtPayload.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtrefresh",{"_index":475,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtrefresh(authrefreshdto",{"_index":491,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtservice",{"_index":483,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtsign",{"_index":476,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtsign(user",{"_index":493,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":444,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":2021,"title":{},"body":{"index.html":{}}}],["key",{"_index":76,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"classes/CommonEntityDto.html":{},"classes/Federated1665882607149.html":{},"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"classes/initTables1664757497775.html":{},"miscellaneous/variables.html":{}}}],["key.middleware",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["key.middleware.ts",{"_index":54,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"coverage.html":{}}}],["key.middleware.ts:11",{"_index":62,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{}}}],["last",{"_index":619,"title":{},"body":{"classes/CommonEntityDto.html":{},"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{}}}],["lastname",{"_index":648,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"classes/initTables1664757497775.html":{}}}],["leave",{"_index":1786,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["length",{"_index":1191,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["letter",{"_index":636,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["level",{"_index":1123,"title":{},"body":{"injectables/LoggerSentryTransport.html":{},"injectables/LoggerTransportService.html":{},"miscellaneous/functions.html":{}}}],["levels",{"_index":1971,"title":{},"body":{"miscellaneous/functions.html":{}}}],["license",{"_index":2027,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":2005,"title":{},"body":{"index.html":{}}}],["line",{"_index":778,"title":{},"body":{"injectables/EmailService.html":{}}}],["list",{"_index":771,"title":{},"body":{"injectables/EmailService.html":{}}}],["listento",{"_index":1719,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["literal",{"_index":228,"title":{},"body":{"interfaces/AuthConfigInterface.html":{},"interfaces/EmailOptionsInterface.html":{},"interfaces/GitHubProfileInterface.html":{}}}],["load",{"_index":178,"title":{},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{}}}],["local",{"_index":1019,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["localauthguard",{"_index":326,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["localstrategy",{"_index":445,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["locationconstraint",{"_index":1823,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["log",{"_index":1032,"title":{},"body":{"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["log(message",{"_index":1111,"title":{},"body":{"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{}}}],["logger",{"_index":1037,"title":{},"body":{"injectables/LoggerExceptionFilter.html":{},"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/LoggerTransportService.html":{},"miscellaneous/variables.html":{}}}],["logger.service",{"_index":1038,"title":{},"body":{"injectables/LoggerExceptionFilter.html":{},"modules/LoggerModule.html":{},"injectables/LoggerRequestInterceptor.html":{}}}],["logger/logger.module",{"_index":1531,"title":{},"body":{"modules/UserModule.html":{}}}],["logger/logger.service",{"_index":508,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/UserService.html":{}}}],["logger_module_config",{"_index":2145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger_module_sentry_config",{"_index":2150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loggerconfig",{"_index":133,"title":{},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"modules/LoggerModule.html":{},"injectables/LoggerTransportService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loggerconfiginterface",{"_index":1024,"title":{"interfaces/LoggerConfigInterface.html":{}},"body":{"interfaces/LoggerConfigInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loggerexceptionfilter",{"_index":1028,"title":{"injectables/LoggerExceptionFilter.html":{}},"body":{"injectables/LoggerExceptionFilter.html":{},"modules/LoggerModule.html":{},"coverage.html":{}}}],["loggerexceptionfilter.name",{"_index":1041,"title":{},"body":{"injectables/LoggerExceptionFilter.html":{}}}],["loggermodule",{"_index":101,"title":{"modules/LoggerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["loggerrequestinterceptor",{"_index":1052,"title":{"injectables/LoggerRequestInterceptor.html":{}},"body":{"modules/LoggerModule.html":{},"injectables/LoggerRequestInterceptor.html":{},"coverage.html":{}}}],["loggersentryconfig",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"injectables/LoggerSentryTransport.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loggersentryconfiginterface",{"_index":1100,"title":{"interfaces/LoggerSentryConfigInterface.html":{}},"body":{"interfaces/LoggerSentryConfigInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loggersentrytransport",{"_index":1045,"title":{"injectables/LoggerSentryTransport.html":{}},"body":{"modules/LoggerModule.html":{},"injectables/LoggerSentryTransport.html":{},"coverage.html":{},"overview.html":{}}}],["loggerservice",{"_index":484,"title":{"injectables/LoggerService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/LoggerExceptionFilter.html":{},"modules/LoggerModule.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["loggertransport.log(message",{"_index":1189,"title":{},"body":{"injectables/LoggerTransportService.html":{}}}],["loggertransportinterface",{"_index":1115,"title":{"interfaces/LoggerTransportInterface.html":{}},"body":{"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"coverage.html":{}}}],["loggertransports",{"_index":1172,"title":{},"body":{"injectables/LoggerTransportService.html":{}}}],["loggertransportservice",{"_index":1046,"title":{"injectables/LoggerTransportService.html":{}},"body":{"modules/LoggerModule.html":{},"injectables/LoggerService.html":{},"injectables/LoggerTransportService.html":{},"coverage.html":{},"overview.html":{}}}],["logging",{"_index":2179,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logic",{"_index":748,"title":{},"body":{"injectables/EmailService.html":{},"injectables/HandlebarEmailService.html":{}}}],["login",{"_index":236,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"classes/AuthLoginDto.html":{},"coverage.html":{}}}],["login(@authuser",{"_index":331,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(user",{"_index":265,"title":{},"body":{"controllers/AuthController.html":{}}}],["login.interface",{"_index":437,"title":{},"body":{"classes/AuthLoginDto.html":{}}}],["login.interface.ts",{"_index":438,"title":{},"body":{"classes/AuthLoginInterface.html":{},"coverage.html":{}}}],["login.interface.ts:2",{"_index":440,"title":{},"body":{"classes/AuthLoginInterface.html":{}}}],["login.interface.ts:3",{"_index":439,"title":{},"body":{"classes/AuthLoginInterface.html":{}}}],["loglevel",{"_index":1026,"title":{},"body":{"interfaces/LoggerConfigInterface.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["loglevelmap",{"_index":1103,"title":{},"body":{"interfaces/LoggerSentryConfigInterface.html":{},"miscellaneous/variables.html":{}}}],["loglevels",{"_index":1173,"title":{},"body":{"injectables/LoggerTransportService.html":{}}}],["long",{"_index":1667,"title":{},"body":{"injectables/UserService.html":{}}}],["lookup",{"_index":1695,"title":{},"body":{"injectables/UserService.html":{}}}],["low",{"_index":1166,"title":{},"body":{"injectables/LoggerService.html":{}}}],["lowercase",{"_index":637,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["mail",{"_index":1774,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["mailermodule",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{},"modules/HandlebarEmailModule.html":{}}}],["mailermodule.forrootasync",{"_index":967,"title":{},"body":{"modules/HandlebarEmailModule.html":{}}}],["maileroptions",{"_index":2116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mailerservice",{"_index":971,"title":{},"body":{"injectables/HandlebarEmailService.html":{}}}],["manager",{"_index":1453,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserReportController.html":{},"dependencies.html":{}}}],["mandatory",{"_index":646,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["manytomany",{"_index":1212,"title":{},"body":{"entities/Role.html":{}}}],["manytoone",{"_index":825,"title":{},"body":{"entities/Federated.html":{},"entities/UserRole.html":{}}}],["manytoone(undefined",{"_index":820,"title":{},"body":{"entities/Federated.html":{},"entities/UserRole.html":{}}}],["map",{"_index":1121,"title":{},"body":{"injectables/LoggerSentryTransport.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"miscellaneous/variables.html":{}}}],["map(data",{"_index":1195,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["matching",{"_index":49,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/ApiKeyMiddleware.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"injectables/AppService.html":{},"interfaces/AuthConfigInterface.html":{},"controllers/AuthController.html":{},"classes/AuthEmailDto.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"classes/AuthLoginDto.html":{},"classes/AuthLoginInterface.html":{},"modules/AuthModule.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatePasswordDto.html":{},"interfaces/AwsS3ConfigInterface.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"interfaces/CommonEntityInterface.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"modules/EmailModule.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"interfaces/EmailOptionsInterface.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"interfaces/ErrorCodeExceptionInterface.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"modules/FederatedModule.html":{},"injectables/FederatedService.html":{},"classes/FederatedUpdateDto.html":{},"classes/FileResponseDto.html":{},"interfaces/GitHubProfileInterface.html":{},"injectables/GithubAuthGuard.html":{},"interfaces/GithubConfigInterface.html":{},"modules/HandlebarEmailModule.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfigInterface.html":{},"injectables/JwtConfigService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfigInterface.html":{},"injectables/LoggerExceptionFilter.html":{},"modules/LoggerModule.html":{},"injectables/LoggerRequestInterceptor.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"interfaces/Response.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleFactory.html":{},"interfaces/RoleInterface.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"interfaces/SendEmailServiceInterface.html":{},"interfaces/ServerConfigInterface.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserCreatableInterface.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"interfaces/UserOwnableInterface.html":{},"controllers/UserReportController.html":{},"entities/UserRole.html":{},"controllers/UserRoleController.html":{},"interfaces/UserRoleCreatableInterface.html":{},"classes/UserRoleDto.html":{},"classes/UserRoleFactory.html":{},"interfaces/UserRoleInterface.html":{},"modules/UserRoleModule.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/initTables1664757497775.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.round(math.random",{"_index":2108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matter",{"_index":1021,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["maxlength",{"_index":465,"title":{},"body":{"classes/AuthRefreshDto.html":{},"classes/UserDto.html":{}}}],["maxlength(5000",{"_index":467,"title":{},"body":{"classes/AuthRefreshDto.html":{}}}],["maxlength(user_email_max_length",{"_index":1506,"title":{},"body":{"classes/UserDto.html":{}}}],["maxlength(user_name_max_length",{"_index":1504,"title":{},"body":{"classes/UserDto.html":{}}}],["mem",{"_index":1944,"title":{},"body":{"dependencies.html":{}}}],["message",{"_index":807,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{}}}],["metadata",{"_index":1332,"title":{},"body":{"guards/RolesGuard.html":{},"dependencies.html":{}}}],["method",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"injectables/LoggerRequestInterceptor.html":{},"guards/RolesGuard.html":{}}}],["methoddecorator",{"_index":2079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["methods",{"_index":13,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/ApiKeyMiddleware.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"injectables/AuthService.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"classes/Federated1665882607149.html":{},"injectables/FederatedService.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"controllers/RoleController.html":{},"classes/RoleFactory.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"interfaces/SendEmailServiceInterface.html":{},"injectables/TransformInterceptor.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{},"classes/UserRoleFactory.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"classes/initTables1664757497775.html":{}}}],["middlewareconsumer",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["migrationinterface",{"_index":9,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"classes/Federated1665882607149.html":{},"classes/initTables1664757497775.html":{}}}],["migrations",{"_index":2176,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrations/*.{js,ts",{"_index":2177,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsrun",{"_index":2171,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mimetype",{"_index":1801,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["minlength",{"_index":464,"title":{},"body":{"classes/AuthRefreshDto.html":{},"classes/CreateUserDto.html":{},"classes/UserDto.html":{}}}],["minlength(1",{"_index":466,"title":{},"body":{"classes/AuthRefreshDto.html":{}}}],["minlength(user_email_min_length",{"_index":1505,"title":{},"body":{"classes/UserDto.html":{}}}],["minlength(user_name_min_length",{"_index":1503,"title":{},"body":{"classes/UserDto.html":{}}}],["minutes",{"_index":1666,"title":{},"body":{"injectables/UserService.html":{}}}],["miscellaneous",{"_index":1954,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":77,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"injectables/LoggerService.html":{}}}],["mit",{"_index":2004,"title":{},"body":{"index.html":{}}}],["mock",{"_index":1934,"title":{},"body":{"dependencies.html":{}}}],["mode",{"_index":1995,"title":{},"body":{"index.html":{}}}],["module",{"_index":91,"title":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/FederatedModule.html":{},"modules/HandlebarEmailModule.html":{},"modules/LoggerModule.html":{},"modules/RoleModule.html":{},"modules/UploadModule.html":{},"modules/UserModule.html":{},"modules/UserRoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"modules/FederatedModule.html":{},"modules/HandlebarEmailModule.html":{},"modules/LoggerModule.html":{},"modules/RoleModule.html":{},"modules/UploadModule.html":{},"modules/UserModule.html":{},"modules/UserRoleModule.html":{},"coverage.html":{}}}],["modulemetadata",{"_index":729,"title":{},"body":{"interfaces/EmailModuleOptionsInterface.html":{}}}],["modules",{"_index":93,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/FederatedModule.html":{},"modules/HandlebarEmailModule.html":{},"modules/LoggerModule.html":{},"modules/RoleModule.html":{},"modules/UploadModule.html":{},"modules/UserModule.html":{},"modules/UserRoleModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/auth/auth.module",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/auth/midleware/api",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/email/email.module",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/federated/federated.module",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/handlebar",{"_index":163,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/logger/logger.module",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/mailer",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"modules/HandlebarEmailModule.html":{},"injectables/HandlebarEmailService.html":{},"dependencies.html":{}}}],["modules/role/role.module",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/upload/upload.module",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user",{"_index":145,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/user/user.module",{"_index":148,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":2016,"title":{},"body":{"index.html":{}}}],["morethanorequal",{"_index":1670,"title":{},"body":{"injectables/UserService.html":{}}}],["morethanorequal(new",{"_index":1696,"title":{},"body":{"injectables/UserService.html":{}}}],["multer",{"_index":1404,"title":{},"body":{"modules/UploadModule.html":{}}}],["multermodule",{"_index":1402,"title":{},"body":{"modules/UploadModule.html":{}}}],["myśliwiec",{"_index":2022,"title":{},"body":{"index.html":{}}}],["name",{"_index":12,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/ApiKeyMiddleware.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"interfaces/EmailOptionsInterface.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"classes/Federated1665882607149.html":{},"interfaces/FederatedInterface.html":{},"injectables/FederatedService.html":{},"classes/FileResponseDto.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"interfaces/RoleInterface.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"interfaces/SendEmailServiceInterface.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateRoleDto.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"controllers/UserRoleController.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"miscellaneous/functions.html":{},"classes/initTables1664757497775.html":{},"miscellaneous/variables.html":{}}}],["needed",{"_index":385,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["nest",{"_index":777,"title":{},"body":{"injectables/EmailService.html":{},"index.html":{}}}],["nestframework",{"_index":2026,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":1077,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nestjs",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"injectables/EmailService.html":{},"modules/HandlebarEmailModule.html":{},"injectables/HandlebarEmailService.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":67,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"modules/FederatedModule.html":{},"injectables/FederatedService.html":{},"injectables/GithubAuthGuard.html":{},"modules/HandlebarEmailModule.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfigInterface.html":{},"injectables/LoggerExceptionFilter.html":{},"modules/LoggerModule.html":{},"injectables/LoggerRequestInterceptor.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"interfaces/Response.html":{},"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{},"modules/UserRoleModule.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"dependencies.html":{}}}],["nestjs/common/interfaces/external/cors",{"_index":1350,"title":{},"body":{"interfaces/ServerConfigInterface.html":{}}}],["nestjs/common/services/logger.service",{"_index":1164,"title":{},"body":{"injectables/LoggerService.html":{}}}],["nestjs/config",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"injectables/AppService.html":{},"injectables/AuthGithubStrategy.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/HandlebarEmailModule.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"modules/LoggerModule.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerTransportService.html":{},"modules/UploadModule.html":{},"injectables/awsS3UploadService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":791,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{},"injectables/LoggerExceptionFilter.html":{},"modules/LoggerModule.html":{},"guards/RolesGuard.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":449,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/JwtConfigInterface.html":{},"injectables/JwtConfigService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":1920,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":403,"title":{},"body":{"injectables/AuthGithubStrategy.html":{},"modules/AuthModule.html":{},"injectables/GithubAuthGuard.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1375,"title":{},"body":{"controllers/UploadController.html":{},"modules/UploadModule.html":{},"dependencies.html":{}}}],["nestjs/serve",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":307,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthEmailDto.html":{},"controllers/AuthGithubController.html":{},"classes/AuthLoginDto.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"classes/AuthUpdatePasswordDto.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"classes/FederatedUpdateDto.html":{},"classes/FileResponseDto.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{},"classes/UserRoleDto.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":126,"title":{},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"modules/FederatedModule.html":{},"injectables/FederatedService.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"modules/UserModule.html":{},"modules/UserRoleModule.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":65,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{}}}],["nestmodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["new",{"_index":74,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"injectables/AuthGithubStrategy.html":{},"injectables/AuthService.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"injectables/FederatedService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerRequestInterceptor.html":{},"controllers/RoleController.html":{},"classes/RoleFactory.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"controllers/UserRoleController.html":{},"classes/UserRoleFactory.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["newrole",{"_index":1319,"title":{},"body":{"injectables/RoleService.html":{}}}],["newuser",{"_index":922,"title":{},"body":{"injectables/FederatedService.html":{},"injectables/UserService.html":{}}}],["next",{"_index":60,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["next.handle().pipe",{"_index":1194,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["nextfunction",{"_index":61,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{}}}],["node.js",{"_index":1979,"title":{},"body":{"index.html":{}}}],["nodemailer",{"_index":560,"title":{},"body":{"injectables/AuthService.html":{},"dependencies.html":{}}}],["nodeoptions",{"_index":1104,"title":{},"body":{"interfaces/LoggerSentryConfigInterface.html":{}}}],["noreply@dispostable.com",{"_index":773,"title":{},"body":{"injectables/EmailService.html":{}}}],["noreply@gmail.com",{"_index":759,"title":{},"body":{"injectables/EmailService.html":{}}}],["not(user.id",{"_index":1770,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["not.'})@expose()@isboolean()@type(undefined",{"_index":1481,"title":{},"body":{"classes/UserDto.html":{}}}],["notfoundexception",{"_index":1310,"title":{},"body":{"injectables/RoleService.html":{},"classes/UserNotFoundException.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["notfoundexception('invalid",{"_index":1702,"title":{},"body":{"injectables/UserService.html":{}}}],["now",{"_index":836,"title":{},"body":{"classes/Federated1665882607149.html":{},"injectables/UserService.html":{},"classes/initTables1664757497775.html":{}}}],["npm",{"_index":1990,"title":{},"body":{"index.html":{}}}],["null",{"_index":518,"title":{},"body":{"injectables/AuthService.html":{},"classes/Federated1665882607149.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"entities/User.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"classes/initTables1664757497775.html":{}}}],["nullable",{"_index":1413,"title":{},"body":{"entities/User.html":{}}}],["number",{"_index":212,"title":{},"body":{"injectables/AppService.html":{},"interfaces/AuthConfigInterface.html":{},"classes/CreateUserDto.html":{},"interfaces/Response.html":{},"interfaces/ServerConfigInterface.html":{},"injectables/TransformInterceptor.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["number(process.env?.auth_reset_token_ttl",{"_index":2089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["number(process.env?.email_smtp_port",{"_index":2120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":542,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":1071,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["occur",{"_index":1777,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["omit",{"_index":1478,"title":{},"body":{"classes/UserDto.html":{}}}],["one",{"_index":634,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/FederatedService.html":{},"entities/Role.html":{}}}],["onetomany",{"_index":1207,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["onetomany(undefined",{"_index":1204,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{}}}],["open",{"_index":2006,"title":{},"body":{"index.html":{}}}],["operationid",{"_index":248,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmailController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{}}}],["optional",{"_index":29,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/ApiKeyMiddleware.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"interfaces/EmailOptionsInterface.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"classes/Federated1665882607149.html":{},"injectables/FederatedService.html":{},"classes/FileResponseDto.html":{},"interfaces/GitHubProfileInterface.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfigInterface.html":{},"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"interfaces/Response.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"interfaces/SendEmailServiceInterface.html":{},"interfaces/ServerConfigInterface.html":{},"injectables/TransformInterceptor.html":{},"controllers/UploadController.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"controllers/UserRoleController.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"miscellaneous/functions.html":{},"classes/initTables1664757497775.html":{}}}],["options",{"_index":713,"title":{},"body":{"modules/EmailModule.html":{},"injectables/EmailService.html":{},"injectables/HandlebarEmailService.html":{},"miscellaneous/variables.html":{}}}],["options.imports",{"_index":720,"title":{},"body":{"modules/EmailModule.html":{}}}],["options.inject",{"_index":722,"title":{},"body":{"modules/EmailModule.html":{}}}],["options.interface",{"_index":507,"title":{},"body":{"injectables/AuthService.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"injectables/HandlebarEmailService.html":{},"interfaces/SendEmailServiceInterface.html":{},"interfaces/ServerConfigInterface.html":{}}}],["options.interface.ts",{"_index":726,"title":{},"body":{"interfaces/EmailModuleOptionsInterface.html":{},"interfaces/EmailOptionsInterface.html":{},"coverage.html":{}}}],["options.usefactory",{"_index":723,"title":{},"body":{"modules/EmailModule.html":{}}}],["options/findoperator",{"_index":1742,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["origin",{"_index":2166,"title":{},"body":{"miscellaneous/variables.html":{}}}],["original",{"_index":942,"title":{},"body":{"classes/FileResponseDto.html":{},"injectables/LoggerRequestInterceptor.html":{}}}],["originalname",{"_index":933,"title":{},"body":{"classes/FileResponseDto.html":{},"injectables/awsS3UploadService.html":{}}}],["ormconfig",{"_index":198,"title":{},"body":{"modules/AppModuleFixture.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ormconfig.fixture",{"_index":199,"title":{},"body":{"modules/AppModuleFixture.html":{}}}],["out",{"_index":108,"title":{},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"modules/AuthModule.html":{},"modules/FederatedModule.html":{},"modules/HandlebarEmailModule.html":{},"modules/LoggerModule.html":{},"modules/RoleModule.html":{},"modules/UploadModule.html":{},"modules/UserModule.html":{},"modules/UserRoleModule.html":{},"overview.html":{}}}],["override",{"_index":1031,"title":{},"body":{"injectables/LoggerExceptionFilter.html":{}}}],["overview",{"_index":2047,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["overwrite",{"_index":1697,"title":{},"body":{"injectables/UserService.html":{}}}],["ownable.interface.ts",{"_index":1543,"title":{},"body":{"interfaces/UserOwnableInterface.html":{},"coverage.html":{}}}],["package",{"_index":1915,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":310,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/FederatedService.html":{},"injectables/HandlebarEmailService.html":{},"injectables/LoggerRequestInterceptor.html":{},"controllers/RoleController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{},"injectables/UserService.html":{}}}],["param.ts",{"_index":1854,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["parameterdecorator",{"_index":1966,"title":{},"body":{"miscellaneous/functions.html":{}}}],["parameters",{"_index":28,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/ApiKeyMiddleware.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"classes/Federated1665882607149.html":{},"injectables/FederatedService.html":{},"classes/FileResponseDto.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"interfaces/SendEmailServiceInterface.html":{},"injectables/TransformInterceptor.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"miscellaneous/functions.html":{},"classes/initTables1664757497775.html":{}}}],["params",{"_index":1813,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["parseint(process.env.port",{"_index":2164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["partial",{"_index":649,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"interfaces/UserCreatableInterface.html":{},"miscellaneous/typealiases.html":{}}}],["partialtype",{"_index":641,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(picktype(createuserdto",{"_index":1357,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["partialtype(picktype(userdto",{"_index":651,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["pass",{"_index":2123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passport",{"_index":405,"title":{},"body":{"injectables/AuthGithubStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":450,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":402,"title":{},"body":{"injectables/AuthGithubStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":411,"title":{},"body":{"injectables/AuthGithubStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":285,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"classes/AuthLoginInterface.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/CryptUtil.html":{},"injectables/FederatedService.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserDto.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"classes/initTables1664757497775.html":{}}}],["password')@apioperation({description",{"_index":281,"title":{},"body":{"controllers/AuthController.html":{}}}],["password')@httpcode(200)@apioperation({description",{"_index":242,"title":{},"body":{"controllers/AuthController.html":{}}}],["password'})@isstring",{"_index":428,"title":{},"body":{"classes/AuthLoginDto.html":{}}}],["password'})@useguards(localauthguard)@post('login",{"_index":270,"title":{},"body":{"controllers/AuthController.html":{}}}],["password.dto",{"_index":322,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["password.dto.ts",{"_index":576,"title":{},"body":{"classes/AuthUpdatePasswordDto.html":{},"coverage.html":{}}}],["password.ts",{"_index":1853,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["passwordcrypt",{"_index":673,"title":{},"body":{"classes/CryptUtil.html":{}}}],["passwordplain",{"_index":675,"title":{},"body":{"classes/CryptUtil.html":{}}}],["patch",{"_index":298,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":1269,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserController.html":{}}}],["patch(':resettoken/reset",{"_index":280,"title":{},"body":{"controllers/AuthController.html":{}}}],["path",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["payload",{"_index":523,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface",{"_index":512,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.interface.ts",{"_index":999,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["persist",{"_index":1708,"title":{},"body":{"injectables/UserService.html":{}}}],["pg",{"_index":1942,"title":{},"body":{"dependencies.html":{}}}],["pick",{"_index":645,"title":{},"body":{"classes/CreateUserDto.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"interfaces/UserCreatableInterface.html":{},"miscellaneous/typealiases.html":{}}}],["picktype",{"_index":353,"title":{},"body":{"classes/AuthEmailDto.html":{},"classes/AuthUpdatePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedUpdateDto.html":{},"classes/UpdateUserDto.html":{}}}],["picktype(createuserdto",{"_index":580,"title":{},"body":{"classes/AuthUpdatePasswordDto.html":{}}}],["picktype(federateddto",{"_index":858,"title":{},"body":{"classes/FederatedCreateDto.html":{},"classes/FederatedUpdateDto.html":{}}}],["picktype(userdto",{"_index":355,"title":{},"body":{"classes/AuthEmailDto.html":{},"classes/CreateUserDto.html":{}}}],["pk_6037a20d155c89a0dec47ead84e",{"_index":840,"title":{},"body":{"classes/Federated1665882607149.html":{}}}],["pk_b36bcfe02fc8de3c57a8b2391c2",{"_index":2038,"title":{},"body":{"classes/initTables1664757497775.html":{}}}],["pk_cace4a159ff9f2512dd42373760",{"_index":2033,"title":{},"body":{"classes/initTables1664757497775.html":{}}}],["pk_fb2e442d14add3cefbdf33c4561",{"_index":2036,"title":{},"body":{"classes/initTables1664757497775.html":{}}}],["plaintext",{"_index":780,"title":{},"body":{"injectables/EmailService.html":{}}}],["plaintoinstance",{"_index":1309,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["plaintoinstance(roledto",{"_index":1315,"title":{},"body":{"injectables/RoleService.html":{}}}],["plaintoinstance(userdto",{"_index":1682,"title":{},"body":{"injectables/UserService.html":{}}}],["plaintoinstance(userroledto",{"_index":1618,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["please",{"_index":2015,"title":{},"body":{"index.html":{}}}],["populated",{"_index":545,"title":{},"body":{"injectables/AuthService.html":{}}}],["port",{"_index":211,"title":{},"body":{"injectables/AppService.html":{},"interfaces/ServerConfigInterface.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":299,"title":{},"body":{"controllers/AuthController.html":{},"controllers/EmailController.html":{},"controllers/RoleController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{}}}],["post('/refresh",{"_index":333,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('file",{"_index":1389,"title":{},"body":{"controllers/UploadController.html":{}}}],["post('file')@apifiledecorator()@apiconsumes('multipart/form",{"_index":1365,"title":{},"body":{"controllers/UploadController.html":{}}}],["post('forgot",{"_index":241,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('login",{"_index":330,"title":{},"body":{"controllers/AuthController.html":{}}}],["post('template",{"_index":700,"title":{},"body":{"controllers/EmailController.html":{}}}],["post()@apioperation({operationid",{"_index":1222,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{}}}],["postgres",{"_index":2156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgresql://postgres:postgres@localhost:5432/nestjscourse",{"_index":2170,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":232,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"controllers/EmailController.html":{},"controllers/RoleController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{}}}],["primary",{"_index":615,"title":{},"body":{"classes/CommonEntityDto.html":{},"classes/Federated1665882607149.html":{},"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"classes/initTables1664757497775.html":{}}}],["primarygeneratedcolumn",{"_index":599,"title":{},"body":{"classes/CommonEntity.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":604,"title":{},"body":{"classes/CommonEntity.html":{}}}],["primarygeneratedcolumn('uuid')@apiproperty",{"_index":594,"title":{},"body":{"classes/CommonEntity.html":{},"classes/FederatedDto.html":{}}}],["private",{"_index":213,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthGithubStrategy.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/FederatedService.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerTransportService.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"controllers/UserReportController.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"injectables/awsS3UploadService.html":{}}}],["process.env.cors_origin",{"_index":2167,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_migrations_run",{"_index":2172,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_synchronize",{"_index":2175,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.database_url",{"_index":2169,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.github_callback_url",{"_index":2137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.github_client_id",{"_index":2134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.github_client_secret",{"_index":2136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_access_expires",{"_index":2141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_refresh_expires",{"_index":2143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.jwt_secret",{"_index":2139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.port",{"_index":2163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env?.auth_reset_token_ttl",{"_index":2088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env?.bucketeer_aws_access_key_id",{"_index":2098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env?.bucketeer_aws_secret_access_key",{"_index":2099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env?.bucketeer_bucket_name",{"_index":2100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env?.email_smtp_login",{"_index":2122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env?.email_smtp_password",{"_index":2124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env?.email_smtp_port",{"_index":2119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env?.email_smtp_server",{"_index":2117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env?.log_level",{"_index":2146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env?.mailgun_from_email",{"_index":2126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env?.mailgun_template_path",{"_index":2129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env?.node_env",{"_index":2160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env?.sentry_dsn",{"_index":2151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env?.transport_log_level",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":1997,"title":{},"body":{"index.html":{}}}],["profile",{"_index":398,"title":{},"body":{"injectables/AuthGithubStrategy.html":{},"injectables/FederatedService.html":{}}}],["profile.emails[0].value",{"_index":420,"title":{},"body":{"injectables/AuthGithubStrategy.html":{}}}],["profile.id",{"_index":424,"title":{},"body":{"injectables/AuthGithubStrategy.html":{}}}],["profile.interface",{"_index":410,"title":{},"body":{"injectables/AuthGithubStrategy.html":{}}}],["profile.interface.ts",{"_index":952,"title":{},"body":{"interfaces/GitHubProfileInterface.html":{},"coverage.html":{}}}],["progressive",{"_index":1978,"title":{},"body":{"index.html":{}}}],["project",{"_index":2007,"title":{},"body":{"index.html":{}}}],["promise",{"_index":31,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CryptUtil.html":{},"classes/Federated1665882607149.html":{},"injectables/FederatedService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"controllers/RoleController.html":{},"classes/RoleFactory.html":{},"injectables/RoleService.html":{},"interfaces/SendEmailServiceInterface.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"controllers/UserRoleController.html":{},"classes/UserRoleFactory.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"injectables/awsS3UploadService.html":{},"classes/initTables1664757497775.html":{}}}],["properly",{"_index":566,"title":{},"body":{"injectables/AuthService.html":{}}}],["properties",{"_index":11,"title":{"properties.html":{}},"body":{"classes/AddResetToken1665198934490.html":{},"interfaces/AuthConfigInterface.html":{},"classes/AuthLoginDto.html":{},"classes/AuthLoginInterface.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"interfaces/AwsS3ConfigInterface.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"interfaces/CommonEntityInterface.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/EmailDto.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"interfaces/EmailOptionsInterface.html":{},"interfaces/ErrorCodeExceptionInterface.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"classes/FileResponseDto.html":{},"interfaces/GitHubProfileInterface.html":{},"interfaces/GithubConfigInterface.html":{},"interfaces/JwtConfigInterface.html":{},"interfaces/JwtPayload.html":{},"interfaces/LoggerConfigInterface.html":{},"injectables/LoggerExceptionFilter.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"injectables/LoggerTransportService.html":{},"interfaces/Response.html":{},"entities/Role.html":{},"classes/RoleDto.html":{},"interfaces/RoleInterface.html":{},"interfaces/ServerConfigInterface.html":{},"classes/UpdateRoleDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"classes/UserNotFoundException.html":{},"interfaces/UserOwnableInterface.html":{},"entities/UserRole.html":{},"interfaces/UserRoleCreatableInterface.html":{},"classes/UserRoleDto.html":{},"interfaces/UserRoleInterface.html":{},"injectables/UserService.html":{},"injectables/awsS3UploadService.html":{},"classes/initTables1664757497775.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["property",{"_index":1965,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["propertydecorator",{"_index":1963,"title":{},"body":{"miscellaneous/functions.html":{}}}],["propertydescriptor",{"_index":2084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["propertykey",{"_index":2081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protected",{"_index":885,"title":{},"body":{"injectables/FederatedService.html":{},"classes/RoleFactory.html":{},"classes/UserFactory.html":{},"classes/UserRoleFactory.html":{}}}],["provide",{"_index":721,"title":{},"body":{"modules/EmailModule.html":{},"modules/LoggerModule.html":{}}}],["provider",{"_index":816,"title":{},"body":{"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"injectables/FederatedService.html":{},"classes/FederatedUpdateDto.html":{}}}],["providerref",{"_index":817,"title":{},"body":{"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"injectables/FederatedService.html":{},"classes/FederatedUpdateDto.html":{}}}],["providers",{"_index":110,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"modules/FederatedModule.html":{},"modules/HandlebarEmailModule.html":{},"modules/LoggerModule.html":{},"modules/RoleModule.html":{},"modules/UploadModule.html":{},"modules/UserModule.html":{},"modules/UserRoleModule.html":{}}}],["public",{"_index":14,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"classes/Federated1665882607149.html":{},"injectables/LoggerTransportService.html":{},"injectables/RoleService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"injectables/awsS3UploadService.html":{},"classes/initTables1664757497775.html":{},"miscellaneous/variables.html":{}}}],["public_folder_name",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public_path",{"_index":1845,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["public_url",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":1771,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["queryrunner",{"_index":26,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"classes/Federated1665882607149.html":{},"classes/initTables1664757497775.html":{}}}],["queryrunner.query",{"_index":833,"title":{},"body":{"classes/Federated1665882607149.html":{},"classes/initTables1664757497775.html":{}}}],["queryrunner.query(`alter",{"_index":38,"title":{},"body":{"classes/AddResetToken1665198934490.html":{}}}],["queryrunner.query(`drop",{"_index":849,"title":{},"body":{"classes/Federated1665882607149.html":{},"classes/initTables1664757497775.html":{}}}],["random",{"_index":1704,"title":{},"body":{"injectables/UserService.html":{}}}],["randomname",{"_index":2105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomname}${fileextname",{"_index":2111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["randomuuid",{"_index":1674,"title":{},"body":{"injectables/UserService.html":{}}}],["re",{"_index":1099,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["read",{"_index":1817,"title":{},"body":{"injectables/awsS3UploadService.html":{},"index.html":{}}}],["readonly",{"_index":88,"title":{},"body":{"controllers/AppController.html":{},"classes/AuthResponseDto.html":{},"injectables/EmailService.html":{},"injectables/HandlebarEmailService.html":{},"injectables/LoggerTransportService.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{}}}],["reasons",{"_index":343,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["reasons.'})@apiresponse({status",{"_index":257,"title":{},"body":{"controllers/AuthController.html":{}}}],["receivers",{"_index":772,"title":{},"body":{"injectables/EmailService.html":{}}}],["record",{"_index":1759,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["records",{"_index":490,"title":{},"body":{"injectables/AuthService.html":{}}}],["redirect",{"_index":387,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["redirected",{"_index":369,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["reference",{"_index":871,"title":{},"body":{"interfaces/FederatedInterface.html":{}}}],["references",{"_index":844,"title":{},"body":{"classes/Federated1665882607149.html":{},"classes/initTables1664757497775.html":{}}}],["reflect",{"_index":1946,"title":{},"body":{"dependencies.html":{}}}],["reflector",{"_index":1326,"title":{},"body":{"guards/RolesGuard.html":{}}}],["refresh",{"_index":237,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"interfaces/JwtConfigInterface.html":{},"miscellaneous/variables.html":{}}}],["refresh(@body",{"_index":335,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh(authrefreshdto",{"_index":272,"title":{},"body":{"controllers/AuthController.html":{}}}],["refresh.dto",{"_index":320,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["refresh.dto.ts",{"_index":461,"title":{},"body":{"classes/AuthRefreshDto.html":{},"coverage.html":{}}}],["refresh.dto.ts:9",{"_index":463,"title":{},"body":{"classes/AuthRefreshDto.html":{}}}],["refreshconfig",{"_index":521,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshconfig?.signoptions",{"_index":528,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshconfig?.verifyoptions",{"_index":533,"title":{},"body":{"injectables/AuthService.html":{}}}],["refreshtoken",{"_index":397,"title":{},"body":{"injectables/AuthGithubStrategy.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{}}}],["registeras",{"_index":2086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["registerasync",{"_index":709,"title":{},"body":{"modules/EmailModule.html":{}}}],["registerasync(options",{"_index":710,"title":{},"body":{"modules/EmailModule.html":{}}}],["relations",{"_index":1683,"title":{},"body":{"injectables/UserService.html":{}}}],["relationship",{"_index":1213,"title":{},"body":{"entities/Role.html":{}}}],["relationships",{"_index":1686,"title":{},"body":{"injectables/UserService.html":{}}}],["remove",{"_index":1220,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["remove(@param('id",{"_index":1273,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{}}}],["remove(id",{"_index":1235,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["replyto",{"_index":738,"title":{},"body":{"interfaces/EmailOptionsInterface.html":{}}}],["repo",{"_index":892,"title":{},"body":{"injectables/FederatedService.html":{},"injectables/RoleService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["report",{"_index":1546,"title":{},"body":{"controllers/UserReportController.html":{}}}],["report.controller",{"_index":1532,"title":{},"body":{"modules/UserModule.html":{}}}],["report.controller.ts",{"_index":1545,"title":{},"body":{"controllers/UserReportController.html":{},"coverage.html":{}}}],["report.controller.ts:34",{"_index":1549,"title":{},"body":{"controllers/UserReportController.html":{}}}],["report.controller.ts:39",{"_index":1551,"title":{},"body":{"controllers/UserReportController.html":{}}}],["report_",{"_index":1547,"title":{},"body":{"controllers/UserReportController.html":{}}}],["repository",{"_index":890,"title":{},"body":{"injectables/FederatedService.html":{},"injectables/RoleService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["req",{"_index":63,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerService.html":{},"miscellaneous/variables.html":{}}}],["req.headers[api_key_header",{"_index":71,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{}}}],["request",{"_index":57,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerService.html":{},"guards/RolesGuard.html":{},"miscellaneous/variables.html":{}}}],["request.'})@apiresponse({status",{"_index":291,"title":{},"body":{"controllers/AuthController.html":{}}}],["request.interceptor",{"_index":1053,"title":{},"body":{"modules/LoggerModule.html":{}}}],["request.interceptor.ts",{"_index":1059,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{},"coverage.html":{}}}],["request.interceptor.ts:15",{"_index":1064,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["request.interceptor.ts:18",{"_index":1069,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["request.interceptor.ts:52",{"_index":1076,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["request.interceptor.ts:77",{"_index":1074,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["request.user",{"_index":2093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requestmethod",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["required",{"_index":1495,"title":{},"body":{"classes/UserDto.html":{},"classes/UserRoleDto.html":{}}}],["requiredroles",{"_index":1333,"title":{},"body":{"guards/RolesGuard.html":{}}}],["requiredroles.some(role",{"_index":1339,"title":{},"body":{"guards/RolesGuard.html":{}}}],["res",{"_index":58,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerService.html":{},"controllers/UploadController.html":{}}}],["res.sendfile(image",{"_index":1397,"title":{},"body":{"controllers/UploadController.html":{}}}],["reset",{"_index":107,"title":{},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/FederatedModule.html":{},"modules/HandlebarEmailModule.html":{},"modules/LoggerModule.html":{},"modules/RoleModule.html":{},"modules/UploadModule.html":{},"modules/UserModule.html":{},"modules/UserRoleModule.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["resetpassword",{"_index":2077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resettoken",{"_index":42,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"interfaces/AuthConfigInterface.html":{},"controllers/AuthController.html":{},"entities/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["resettokenexp",{"_index":44,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"entities/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{}}}],["resetupdatepassword",{"_index":238,"title":{},"body":{"controllers/AuthController.html":{}}}],["resetupdatepassword(resettoken",{"_index":278,"title":{},"body":{"controllers/AuthController.html":{}}}],["resource",{"_index":612,"title":{},"body":{"classes/CommonEntityDto.html":{},"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{}}}],["resource.'})@expose",{"_index":616,"title":{},"body":{"classes/CommonEntityDto.html":{},"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{}}}],["response",{"_index":59,"title":{"interfaces/Response.html":{}},"body":{"injectables/ApiKeyMiddleware.html":{},"classes/ErrorCodeExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerService.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"controllers/UploadController.html":{},"coverage.html":{}}}],["response.dto",{"_index":321,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthService.html":{},"injectables/awsS3UploadService.html":{}}}],["response.dto.ts",{"_index":468,"title":{},"body":{"classes/AuthResponseDto.html":{},"classes/FileResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:19",{"_index":943,"title":{},"body":{"classes/FileResponseDto.html":{}}}],["response.dto.ts:27",{"_index":941,"title":{},"body":{"classes/FileResponseDto.html":{}}}],["response.dto.ts:30",{"_index":944,"title":{},"body":{"classes/FileResponseDto.html":{}}}],["response.dto.ts:5",{"_index":471,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["response.dto.ts:7",{"_index":938,"title":{},"body":{"classes/FileResponseDto.html":{}}}],["response.dto.ts:8",{"_index":470,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["response.status(status).json",{"_index":803,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{}}}],["responseerror",{"_index":1061,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["responseerror(req",{"_index":1072,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["responsesuccess",{"_index":1062,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["responsesuccess(req",{"_index":1075,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["rest",{"_index":1656,"title":{},"body":{"injectables/UserService.html":{}}}],["result",{"_index":757,"title":{},"body":{"injectables/EmailService.html":{},"injectables/HandlebarEmailService.html":{}}}],["results",{"_index":48,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/ApiKeyMiddleware.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"injectables/AppService.html":{},"interfaces/AuthConfigInterface.html":{},"controllers/AuthController.html":{},"classes/AuthEmailDto.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"classes/AuthLoginDto.html":{},"classes/AuthLoginInterface.html":{},"modules/AuthModule.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatePasswordDto.html":{},"interfaces/AwsS3ConfigInterface.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"interfaces/CommonEntityInterface.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"modules/EmailModule.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"interfaces/EmailOptionsInterface.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"interfaces/ErrorCodeExceptionInterface.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"modules/FederatedModule.html":{},"injectables/FederatedService.html":{},"classes/FederatedUpdateDto.html":{},"classes/FileResponseDto.html":{},"interfaces/GitHubProfileInterface.html":{},"injectables/GithubAuthGuard.html":{},"interfaces/GithubConfigInterface.html":{},"modules/HandlebarEmailModule.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfigInterface.html":{},"injectables/JwtConfigService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfigInterface.html":{},"injectables/LoggerExceptionFilter.html":{},"modules/LoggerModule.html":{},"injectables/LoggerRequestInterceptor.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"interfaces/Response.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleFactory.html":{},"interfaces/RoleInterface.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"interfaces/SendEmailServiceInterface.html":{},"interfaces/ServerConfigInterface.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserCreatableInterface.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"interfaces/UserOwnableInterface.html":{},"controllers/UserReportController.html":{},"entities/UserRole.html":{},"controllers/UserRoleController.html":{},"interfaces/UserRoleCreatableInterface.html":{},"classes/UserRoleDto.html":{},"classes/UserRoleFactory.html":{},"interfaces/UserRoleInterface.html":{},"modules/UserRoleModule.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"classes/initTables1664757497775.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":89,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"injectables/AuthService.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"injectables/FederatedService.html":{},"modules/HandlebarEmailModule.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerRequestInterceptor.html":{},"interfaces/Response.html":{},"controllers/RoleController.html":{},"classes/RoleFactory.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"injectables/TransformInterceptor.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{},"classes/UserRoleFactory.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":253,"title":{},"body":{"controllers/AuthController.html":{}}}],["returning",{"_index":1034,"title":{},"body":{"injectables/LoggerExceptionFilter.html":{}}}],["returns",{"_index":30,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/ApiKeyMiddleware.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"injectables/AuthService.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"modules/EmailModule.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"classes/Federated1665882607149.html":{},"injectables/FederatedService.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"controllers/RoleController.html":{},"classes/RoleFactory.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"interfaces/SendEmailServiceInterface.html":{},"injectables/TransformInterceptor.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"classes/UserFactory.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{},"classes/UserRoleFactory.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"miscellaneous/functions.html":{},"classes/initTables1664757497775.html":{},"miscellaneous/variables.html":{}}}],["rimraf",{"_index":1948,"title":{},"body":{"dependencies.html":{}}}],["role",{"_index":1199,"title":{"entities/Role.html":{}},"body":{"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleFactory.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"entities/UserRole.html":{},"controllers/UserRoleController.html":{},"interfaces/UserRoleCreatableInterface.html":{},"classes/UserRoleDto.html":{},"classes/UserSubscriber.html":{},"coverage.html":{},"classes/initTables1664757497775.html":{},"miscellaneous/variables.html":{}}}],["role\"(\"id",{"_index":2041,"title":{},"body":{"classes/initTables1664757497775.html":{}}}],["role'})@apiokresponse({description",{"_index":1224,"title":{},"body":{"controllers/RoleController.html":{}}}],["role'})@patch(':id",{"_index":1242,"title":{},"body":{"controllers/RoleController.html":{}}}],["role.controller",{"_index":1295,"title":{},"body":{"modules/RoleModule.html":{},"modules/UserRoleModule.html":{}}}],["role.controller.ts",{"_index":1570,"title":{},"body":{"controllers/UserRoleController.html":{},"coverage.html":{}}}],["role.controller.ts:43",{"_index":1575,"title":{},"body":{"controllers/UserRoleController.html":{}}}],["role.controller.ts:54",{"_index":1577,"title":{},"body":{"controllers/UserRoleController.html":{}}}],["role.controller.ts:69",{"_index":1579,"title":{},"body":{"controllers/UserRoleController.html":{}}}],["role.controller.ts:78",{"_index":1581,"title":{},"body":{"controllers/UserRoleController.html":{}}}],["role.dto",{"_index":1246,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/UserDto.html":{},"controllers/UserRoleController.html":{},"injectables/UserRoleService.html":{}}}],["role.dto.ts",{"_index":626,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UserRoleDto.html":{},"coverage.html":{}}}],["role.dto.ts:10",{"_index":627,"title":{},"body":{"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{}}}],["role.dto.ts:11",{"_index":660,"title":{},"body":{"classes/CreateUserRoleDto.html":{},"classes/UserRoleDto.html":{}}}],["role.dto.ts:15",{"_index":1595,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["role.dto.ts:19",{"_index":1594,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["role.dto.ts:7",{"_index":661,"title":{},"body":{"classes/CreateUserRoleDto.html":{}}}],["role.entity",{"_index":1209,"title":{},"body":{"entities/Role.html":{},"classes/RoleFactory.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"entities/User.html":{},"classes/UserRoleFactory.html":{},"modules/UserRoleModule.html":{},"injectables/UserRoleService.html":{},"classes/UserSubscriber.html":{}}}],["role.entity.ts",{"_index":1560,"title":{},"body":{"entities/UserRole.html":{},"coverage.html":{}}}],["role.entity.ts:11",{"_index":1566,"title":{},"body":{"entities/UserRole.html":{}}}],["role.entity.ts:14",{"_index":1563,"title":{},"body":{"entities/UserRole.html":{}}}],["role.entity.ts:17",{"_index":1565,"title":{},"body":{"entities/UserRole.html":{}}}],["role.entity.ts:20",{"_index":1562,"title":{},"body":{"entities/UserRole.html":{}}}],["role.factory",{"_index":1626,"title":{},"body":{"classes/UserSeeder.html":{}}}],["role.factory.ts",{"_index":1598,"title":{},"body":{"classes/UserRoleFactory.html":{},"coverage.html":{}}}],["role.factory.ts:5",{"_index":1599,"title":{},"body":{"classes/UserRoleFactory.html":{}}}],["role.interface.ts",{"_index":1600,"title":{},"body":{"interfaces/UserRoleInterface.html":{},"coverage.html":{}}}],["role.module",{"_index":147,"title":{},"body":{"modules/AppModule.html":{}}}],["role.module.ts",{"_index":1603,"title":{},"body":{"modules/UserRoleModule.html":{}}}],["role.service",{"_index":1251,"title":{},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"controllers/UserRoleController.html":{},"modules/UserRoleModule.html":{}}}],["role.service.ts",{"_index":1605,"title":{},"body":{"injectables/UserRoleService.html":{},"coverage.html":{}}}],["role.service.ts:12",{"_index":1606,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["role.service.ts:18",{"_index":1608,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["role.service.ts:24",{"_index":1610,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["role.service.ts:29",{"_index":1611,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["role.service.ts:37",{"_index":1612,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["role.service.ts:42",{"_index":1613,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["role.userroles",{"_index":1561,"title":{},"body":{"entities/UserRole.html":{}}}],["role/decorator/roles.decorator",{"_index":1455,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{}}}],["role/dto/create",{"_index":655,"title":{},"body":{"classes/CreateUserRoleDto.html":{},"coverage.html":{}}}],["role/dto/role.dto",{"_index":1596,"title":{},"body":{"classes/UserRoleDto.html":{}}}],["role/dto/user",{"_index":1498,"title":{},"body":{"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"coverage.html":{}}}],["role/enum/role.enum",{"_index":1456,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{}}}],["role/guards/roles.guard",{"_index":1582,"title":{},"body":{"controllers/UserRoleController.html":{}}}],["role/interfaces",{"_index":1523,"title":{},"body":{"interfaces/UserInterface.html":{}}}],["role/interfaces/user",{"_index":1592,"title":{},"body":{"interfaces/UserRoleCreatableInterface.html":{},"interfaces/UserRoleInterface.html":{},"coverage.html":{}}}],["role/role.entity",{"_index":1567,"title":{},"body":{"entities/UserRole.html":{},"classes/UserSubscriber.html":{}}}],["role/role.factory",{"_index":1625,"title":{},"body":{"classes/UserSeeder.html":{}}}],["role/user",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"entities/Role.html":{},"entities/User.html":{},"entities/UserRole.html":{},"controllers/UserRoleController.html":{},"classes/UserRoleFactory.html":{},"modules/UserRoleModule.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"classes/UserSubscriber.html":{},"coverage.html":{}}}],["role?.role?.name",{"_index":1508,"title":{},"body":{"classes/UserDto.html":{}}}],["role_create",{"_index":1223,"title":{},"body":{"controllers/RoleController.html":{}}}],["role_delete",{"_index":1236,"title":{},"body":{"controllers/RoleController.html":{}}}],["role_findall",{"_index":1227,"title":{},"body":{"controllers/RoleController.html":{}}}],["role_findone",{"_index":1232,"title":{},"body":{"controllers/RoleController.html":{}}}],["role_update",{"_index":1241,"title":{},"body":{"controllers/RoleController.html":{}}}],["rolecontroller",{"_index":1215,"title":{"controllers/RoleController.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"coverage.html":{}}}],["roledto",{"_index":1248,"title":{"classes/RoleDto.html":{}},"body":{"controllers/RoleController.html":{},"classes/RoleDto.html":{},"injectables/RoleService.html":{},"classes/UserRoleDto.html":{},"coverage.html":{}}}],["roleenum",{"_index":1255,"title":{},"body":{"controllers/RoleController.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["rolefactory",{"_index":1283,"title":{"classes/RoleFactory.html":{}},"body":{"classes/RoleFactory.html":{},"classes/UserSeeder.html":{},"coverage.html":{}}}],["roleid",{"_index":656,"title":{},"body":{"classes/CreateUserRoleDto.html":{},"entities/UserRole.html":{},"interfaces/UserRoleCreatableInterface.html":{},"classes/UserRoleDto.html":{},"interfaces/UserRoleInterface.html":{},"classes/UserSeeder.html":{},"classes/initTables1664757497775.html":{}}}],["roleinterface",{"_index":1276,"title":{"interfaces/RoleInterface.html":{}},"body":{"classes/RoleDto.html":{},"interfaces/RoleInterface.html":{},"coverage.html":{}}}],["rolemodule",{"_index":102,"title":{"modules/RoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/RoleModule.html":{},"modules.html":{},"overview.html":{}}}],["roles",{"_index":1217,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{},"classes/UserSeeder.html":{},"classes/UserSubscriber.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roles(roleenum.admin",{"_index":1261,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{}}}],["roles_key",{"_index":1331,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["roleservice",{"_index":1250,"title":{"injectables/RoleService.html":{}},"body":{"controllers/RoleController.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"coverage.html":{},"overview.html":{}}}],["rolesguard",{"_index":1252,"title":{"guards/RolesGuard.html":{}},"body":{"controllers/RoleController.html":{},"guards/RolesGuard.html":{},"controllers/UserRoleController.html":{},"coverage.html":{}}}],["rolesservice",{"_index":1262,"title":{},"body":{"controllers/RoleController.html":{}}}],["root",{"_index":1398,"title":{},"body":{"controllers/UploadController.html":{}}}],["rootpath",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["run",{"_index":1623,"title":{},"body":{"classes/UserSeeder.html":{},"index.html":{}}}],["rxjs",{"_index":1079,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":1082,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["s3",{"_index":583,"title":{},"body":{"interfaces/AwsS3ConfigInterface.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"injectables/awsS3UploadService.html":{},"coverage.html":{}}}],["s3.config",{"_index":1408,"title":{},"body":{"modules/UploadModule.html":{},"injectables/awsS3UploadService.html":{}}}],["s3.config.ts",{"_index":1862,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["s3.types.putobjectrequest",{"_index":1814,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["s3response",{"_index":1827,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["s3response.key",{"_index":1829,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["s3response.location",{"_index":1830,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["s3service",{"_index":1388,"title":{},"body":{"controllers/UploadController.html":{}}}],["salt",{"_index":670,"title":{},"body":{"classes/CryptUtil.html":{},"entities/User.html":{},"interfaces/UserInterface.html":{},"classes/UserSubscriber.html":{},"classes/initTables1664757497775.html":{}}}],["sampleconfig",{"_index":135,"title":{},"body":{"modules/AppModule.html":{},"injectables/AppService.html":{}}}],["save",{"_index":1661,"title":{},"body":{"injectables/UserService.html":{},"classes/UserSubscriber.html":{}}}],["scalable",{"_index":1983,"title":{},"body":{"index.html":{}}}],["schema",{"_index":287,"title":{},"body":{"controllers/AuthController.html":{},"miscellaneous/variables.html":{}}}],["sdk",{"_index":1803,"title":{},"body":{"injectables/awsS3UploadService.html":{},"dependencies.html":{}}}],["secret",{"_index":980,"title":{},"body":{"interfaces/JwtConfigInterface.html":{},"injectables/JwtConfigService.html":{},"miscellaneous/variables.html":{}}}],["secretaccesskey",{"_index":586,"title":{},"body":{"interfaces/AwsS3ConfigInterface.html":{},"injectables/awsS3UploadService.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":1008,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["security",{"_index":256,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["see",{"_index":1337,"title":{},"body":{"guards/RolesGuard.html":{}}}],["seeder",{"_index":1622,"title":{},"body":{"classes/UserSeeder.html":{}}}],["seeding",{"_index":1290,"title":{},"body":{"classes/RoleFactory.html":{},"classes/UserFactory.html":{},"classes/UserRoleFactory.html":{},"classes/UserSeeder.html":{}}}],["send",{"_index":245,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/EmailController.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"injectables/EmailService.html":{},"injectables/HandlebarEmailService.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerTransportService.html":{},"interfaces/SendEmailServiceInterface.html":{}}}],["send(emailoptions",{"_index":746,"title":{},"body":{"injectables/EmailService.html":{},"injectables/HandlebarEmailService.html":{},"interfaces/SendEmailServiceInterface.html":{}}}],["send_email",{"_index":686,"title":{},"body":{"controllers/EmailController.html":{}}}],["send_email_token",{"_index":718,"title":{},"body":{"modules/EmailModule.html":{},"injectables/EmailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["send_email_with_template",{"_index":692,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemail",{"_index":683,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemailservice",{"_index":732,"title":{},"body":{"interfaces/EmailModuleOptionsInterface.html":{},"injectables/EmailService.html":{}}}],["sendemailserviceinterface",{"_index":730,"title":{"interfaces/SendEmailServiceInterface.html":{}},"body":{"interfaces/EmailModuleOptionsInterface.html":{},"injectables/EmailService.html":{},"injectables/HandlebarEmailService.html":{},"interfaces/SendEmailServiceInterface.html":{},"coverage.html":{}}}],["sendemailtemplate",{"_index":684,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemailtemplate(@body",{"_index":701,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemailtemplate(dto",{"_index":690,"title":{},"body":{"controllers/EmailController.html":{}}}],["sendemailwithtemplate",{"_index":742,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendemailwithtemplate(to",{"_index":750,"title":{},"body":{"injectables/EmailService.html":{}}}],["sender",{"_index":774,"title":{},"body":{"injectables/EmailService.html":{}}}],["sendtestemail",{"_index":743,"title":{},"body":{"injectables/EmailService.html":{}}}],["sent",{"_index":1657,"title":{},"body":{"injectables/UserService.html":{}}}],["sentry",{"_index":1101,"title":{},"body":{"interfaces/LoggerSentryConfigInterface.html":{},"injectables/LoggerSentryTransport.html":{},"coverage.html":{}}}],["sentry.captureexception(error",{"_index":1126,"title":{},"body":{"injectables/LoggerSentryTransport.html":{}}}],["sentry.capturemessage(message",{"_index":1132,"title":{},"body":{"injectables/LoggerSentryTransport.html":{}}}],["sentry.config",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"injectables/LoggerSentryTransport.html":{}}}],["sentry.config.ts",{"_index":1867,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sentry.init",{"_index":1118,"title":{},"body":{"injectables/LoggerSentryTransport.html":{}}}],["sentry.transport",{"_index":1055,"title":{},"body":{"modules/LoggerModule.html":{}}}],["sentry.transport.ts",{"_index":1109,"title":{},"body":{"injectables/LoggerSentryTransport.html":{},"coverage.html":{}}}],["sentry.transport.ts:19",{"_index":1112,"title":{},"body":{"injectables/LoggerSentryTransport.html":{}}}],["sentry.transport.ts:8",{"_index":1110,"title":{},"body":{"injectables/LoggerSentryTransport.html":{}}}],["sentry/node",{"_index":1114,"title":{},"body":{"injectables/LoggerSentryTransport.html":{},"dependencies.html":{}}}],["sentry/node/types",{"_index":1105,"title":{},"body":{"interfaces/LoggerSentryConfigInterface.html":{}}}],["sentry/types",{"_index":1107,"title":{},"body":{"interfaces/LoggerSentryConfigInterface.html":{}}}],["sentrynodeoptions",{"_index":1102,"title":{},"body":{"interfaces/LoggerSentryConfigInterface.html":{}}}],["server",{"_index":1984,"title":{},"body":{"index.html":{}}}],["server_config",{"_index":1846,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverconfig",{"_index":946,"title":{},"body":{"classes/FileResponseDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serverconfiginterface",{"_index":1344,"title":{"interfaces/ServerConfigInterface.html":{}},"body":{"interfaces/ServerConfigInterface.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["serveroot",{"_index":174,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule",{"_index":149,"title":{},"body":{"modules/AppModule.html":{}}}],["servestaticmodule.forroot",{"_index":171,"title":{},"body":{"modules/AppModule.html":{}}}],["service",{"_index":563,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerService.html":{}}}],["service.interface",{"_index":731,"title":{},"body":{"interfaces/EmailModuleOptionsInterface.html":{},"injectables/EmailService.html":{},"injectables/HandlebarEmailService.html":{}}}],["service.interface.ts",{"_index":1342,"title":{},"body":{"interfaces/SendEmailServiceInterface.html":{},"coverage.html":{}}}],["service.interface.ts:4",{"_index":1343,"title":{},"body":{"interfaces/SendEmailServiceInterface.html":{}}}],["set",{"_index":848,"title":{},"body":{"classes/Federated1665882607149.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerService.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{}}}],["setmetadata(roles_key",{"_index":2158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["severity",{"_index":1124,"title":{},"body":{"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{}}}],["severitylevel",{"_index":1106,"title":{},"body":{"interfaces/LoggerSentryConfigInterface.html":{},"miscellaneous/variables.html":{}}}],["side",{"_index":1985,"title":{},"body":{"index.html":{}}}],["sign",{"_index":888,"title":{},"body":{"injectables/FederatedService.html":{}}}],["sign(provider",{"_index":902,"title":{},"body":{"injectables/FederatedService.html":{}}}],["signoptions",{"_index":996,"title":{},"body":{"injectables/JwtConfigService.html":{},"miscellaneous/variables.html":{}}}],["silently",{"_index":570,"title":{},"body":{"injectables/AuthService.html":{}}}],["skip",{"_index":1768,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["smtp.mailgun.org",{"_index":2118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/ApiKeyMiddleware.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"injectables/AppService.html":{},"interfaces/AuthConfigInterface.html":{},"controllers/AuthController.html":{},"classes/AuthEmailDto.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"classes/AuthLoginDto.html":{},"classes/AuthLoginInterface.html":{},"modules/AuthModule.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatePasswordDto.html":{},"interfaces/AwsS3ConfigInterface.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"interfaces/CommonEntityInterface.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"modules/EmailModule.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"interfaces/EmailOptionsInterface.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"interfaces/ErrorCodeExceptionInterface.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"modules/FederatedModule.html":{},"injectables/FederatedService.html":{},"classes/FederatedUpdateDto.html":{},"classes/FileResponseDto.html":{},"interfaces/GitHubProfileInterface.html":{},"injectables/GithubAuthGuard.html":{},"interfaces/GithubConfigInterface.html":{},"modules/HandlebarEmailModule.html":{},"injectables/HandlebarEmailService.html":{},"injectables/JwtAuthGuard.html":{},"interfaces/JwtConfigInterface.html":{},"injectables/JwtConfigService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfigInterface.html":{},"injectables/LoggerExceptionFilter.html":{},"modules/LoggerModule.html":{},"injectables/LoggerRequestInterceptor.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"interfaces/Response.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"classes/RoleFactory.html":{},"interfaces/RoleInterface.html":{},"modules/RoleModule.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"interfaces/SendEmailServiceInterface.html":{},"interfaces/ServerConfigInterface.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateRoleDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UploadController.html":{},"modules/UploadModule.html":{},"entities/User.html":{},"controllers/UserController.html":{},"interfaces/UserCreatableInterface.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"classes/UserNotFoundException.html":{},"interfaces/UserOwnableInterface.html":{},"controllers/UserReportController.html":{},"entities/UserRole.html":{},"controllers/UserRoleController.html":{},"interfaces/UserRoleCreatableInterface.html":{},"classes/UserRoleDto.html":{},"classes/UserRoleFactory.html":{},"interfaces/UserRoleInterface.html":{},"modules/UserRoleModule.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"index.html":{},"classes/initTables1664757497775.html":{}}}],["south",{"_index":1825,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["split",{"_index":1969,"title":{},"body":{"miscellaneous/functions.html":{}}}],["splitloglevel",{"_index":1869,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["splitloglevel(levels",{"_index":1967,"title":{},"body":{"miscellaneous/functions.html":{}}}],["splitloglevel(process.env.log_level",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["splitloglevel(process.env.transport_log_level",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sponsors",{"_index":2010,"title":{},"body":{"index.html":{}}}],["sqlite3",{"_index":1951,"title":{},"body":{"dependencies.html":{}}}],["src/.../api",{"_index":2063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth",{"_index":2065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.config.ts",{"_index":2064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../aws",{"_index":2066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":2062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../email.config.ts",{"_index":2068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../federated",{"_index":2057,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../file",{"_index":2067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../github.config.ts",{"_index":2069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../is",{"_index":1960,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../jwt.config.ts",{"_index":2070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger",{"_index":2071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.config.ts",{"_index":1961,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1959,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../ormconfig.fixture.ts",{"_index":2072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../role.enum.ts",{"_index":1956,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../roles.decorator.ts",{"_index":2073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../server.config.ts",{"_index":2074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.ts",{"_index":1962,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../typeorm.config.ts",{"_index":2075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":2059,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.constants.ts",{"_index":2076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":81,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":84,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:83",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":201,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:14",{"_index":204,"title":{},"body":{"injectables/AppService.html":{}}}],["src/app.service.ts:21",{"_index":206,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/common.entity.ts",{"_index":588,"title":{},"body":{"classes/CommonEntity.html":{},"coverage.html":{}}}],["src/common/common.entity.ts:12",{"_index":595,"title":{},"body":{"classes/CommonEntity.html":{}}}],["src/common/common.entity.ts:16",{"_index":593,"title":{},"body":{"classes/CommonEntity.html":{}}}],["src/common/common.entity.ts:20",{"_index":597,"title":{},"body":{"classes/CommonEntity.html":{}}}],["src/common/constants.ts",{"_index":1840,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/api",{"_index":1850,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/decorators/is",{"_index":1852,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/doc/swagger.ts",{"_index":1855,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/common/dto/common",{"_index":606,"title":{},"body":{"classes/CommonEntityDto.html":{},"coverage.html":{}}}],["src/common/filters/error",{"_index":783,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{},"coverage.html":{}}}],["src/common/interceptors/transform.interceptor.ts",{"_index":1190,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/transform.interceptor.ts:20",{"_index":1352,"title":{},"body":{"injectables/TransformInterceptor.html":{}}}],["src/common/interfaces/common",{"_index":622,"title":{},"body":{"interfaces/CommonEntityInterface.html":{},"coverage.html":{}}}],["src/common/interfaces/error",{"_index":810,"title":{},"body":{"interfaces/ErrorCodeExceptionInterface.html":{},"coverage.html":{}}}],["src/common/interfaces/github",{"_index":960,"title":{},"body":{"interfaces/GithubConfigInterface.html":{},"coverage.html":{}}}],["src/common/interfaces/jwt",{"_index":979,"title":{},"body":{"interfaces/JwtConfigInterface.html":{},"coverage.html":{}}}],["src/common/interfaces/server",{"_index":1345,"title":{},"body":{"interfaces/ServerConfigInterface.html":{},"coverage.html":{}}}],["src/common/utils/crypt.util.ts",{"_index":664,"title":{},"body":{"classes/CryptUtil.html":{},"coverage.html":{}}}],["src/common/utils/crypt.util.ts:12",{"_index":674,"title":{},"body":{"classes/CryptUtil.html":{}}}],["src/common/utils/crypt.util.ts:4",{"_index":668,"title":{},"body":{"classes/CryptUtil.html":{}}}],["src/common/utils/crypt.util.ts:8",{"_index":671,"title":{},"body":{"classes/CryptUtil.html":{}}}],["src/common/utils/file",{"_index":1858,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/auth.config.ts",{"_index":1860,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/aws",{"_index":1861,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/email.config.ts",{"_index":1863,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/github.config.ts",{"_index":1864,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/jwt.config.ts",{"_index":1865,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/logger",{"_index":1866,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/logger.config.ts",{"_index":1868,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/config/server.config.ts",{"_index":1872,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/typeorm.config.ts",{"_index":1873,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.ts",{"_index":1874,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migrations/1664757497775",{"_index":1876,"title":{},"body":{"coverage.html":{},"classes/initTables1664757497775.html":{}}}],["src/migrations/1665198934490",{"_index":6,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"coverage.html":{}}}],["src/migrations/1665882607149",{"_index":828,"title":{},"body":{"classes/Federated1665882607149.html":{},"coverage.html":{}}}],["src/modules/auth/auth",{"_index":357,"title":{},"body":{"controllers/AuthGithubController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts",{"_index":231,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/modules/auth/auth.controller.ts:39",{"_index":271,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:49",{"_index":277,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:55",{"_index":264,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:72",{"_index":260,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.controller.ts:95",{"_index":295,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/modules/auth/auth.module.ts",{"_index":446,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/modules/auth/auth.service.ts",{"_index":474,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/modules/auth/auth.service.ts:120",{"_index":495,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:133",{"_index":499,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:152",{"_index":497,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:24",{"_index":485,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:38",{"_index":501,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:50",{"_index":494,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:69",{"_index":492,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/auth.service.ts:92",{"_index":488,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/modules/auth/decorator/auth",{"_index":1884,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/auth/dto/auth",{"_index":351,"title":{},"body":{"classes/AuthEmailDto.html":{},"classes/AuthLoginDto.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"classes/AuthUpdatePasswordDto.html":{},"coverage.html":{}}}],["src/modules/auth/guards/github",{"_index":955,"title":{},"body":{"injectables/GithubAuthGuard.html":{},"coverage.html":{}}}],["src/modules/auth/guards/jwt",{"_index":976,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/modules/auth/guards/local",{"_index":1011,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/modules/auth/interfaces/auth",{"_index":226,"title":{},"body":{"interfaces/AuthConfigInterface.html":{},"classes/AuthLoginInterface.html":{},"coverage.html":{}}}],["src/modules/auth/interfaces/github",{"_index":951,"title":{},"body":{"interfaces/GitHubProfileInterface.html":{},"coverage.html":{}}}],["src/modules/auth/interfaces/jwt",{"_index":998,"title":{},"body":{"interfaces/JwtPayload.html":{},"coverage.html":{}}}],["src/modules/auth/jwt",{"_index":983,"title":{},"body":{"injectables/JwtConfigService.html":{},"coverage.html":{}}}],["src/modules/auth/midleware/api",{"_index":53,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"coverage.html":{}}}],["src/modules/auth/strategies/github.strategy.ts",{"_index":391,"title":{},"body":{"injectables/AuthGithubStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/strategies/github.strategy.ts:11",{"_index":395,"title":{},"body":{"injectables/AuthGithubStrategy.html":{}}}],["src/modules/auth/strategies/github.strategy.ts:24",{"_index":400,"title":{},"body":{"injectables/AuthGithubStrategy.html":{}}}],["src/modules/auth/strategies/jwt.strategy.ts",{"_index":1000,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/modules/auth/strategies/jwt.strategy.ts:11",{"_index":1001,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/strategies/jwt.strategy.ts:23",{"_index":1003,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/modules/auth/strategies/local",{"_index":1013,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/modules/email/constants.ts",{"_index":1886,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/email/dto/email.dto.ts",{"_index":704,"title":{},"body":{"classes/EmailDto.html":{},"coverage.html":{}}}],["src/modules/email/dto/email.dto.ts:10",{"_index":707,"title":{},"body":{"classes/EmailDto.html":{}}}],["src/modules/email/dto/email.dto.ts:15",{"_index":706,"title":{},"body":{"classes/EmailDto.html":{}}}],["src/modules/email/email.controller.ts",{"_index":682,"title":{},"body":{"controllers/EmailController.html":{},"coverage.html":{}}}],["src/modules/email/email.controller.ts:16",{"_index":689,"title":{},"body":{"controllers/EmailController.html":{}}}],["src/modules/email/email.controller.ts:25",{"_index":695,"title":{},"body":{"controllers/EmailController.html":{}}}],["src/modules/email/email.module.ts",{"_index":708,"title":{},"body":{"modules/EmailModule.html":{}}}],["src/modules/email/email.module.ts:10",{"_index":712,"title":{},"body":{"modules/EmailModule.html":{}}}],["src/modules/email/email.service.ts",{"_index":741,"title":{},"body":{"injectables/EmailService.html":{},"coverage.html":{}}}],["src/modules/email/email.service.ts:12",{"_index":745,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/modules/email/email.service.ts:24",{"_index":747,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/modules/email/email.service.ts:40",{"_index":752,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/modules/email/email.service.ts:50",{"_index":751,"title":{},"body":{"injectables/EmailService.html":{}}}],["src/modules/email/interfaces/email",{"_index":725,"title":{},"body":{"interfaces/EmailModuleOptionsInterface.html":{},"interfaces/EmailOptionsInterface.html":{},"coverage.html":{}}}],["src/modules/email/interfaces/send",{"_index":1341,"title":{},"body":{"interfaces/SendEmailServiceInterface.html":{},"coverage.html":{}}}],["src/modules/federated/dto/create",{"_index":851,"title":{},"body":{"classes/FederatedCreateDto.html":{},"coverage.html":{}}}],["src/modules/federated/dto/federated.dto.ts",{"_index":859,"title":{},"body":{"classes/FederatedDto.html":{},"coverage.html":{}}}],["src/modules/federated/dto/federated.dto.ts:21",{"_index":861,"title":{},"body":{"classes/FederatedDto.html":{}}}],["src/modules/federated/dto/federated.dto.ts:32",{"_index":862,"title":{},"body":{"classes/FederatedDto.html":{}}}],["src/modules/federated/dto/federated.dto.ts:40",{"_index":863,"title":{},"body":{"classes/FederatedDto.html":{}}}],["src/modules/federated/dto/update",{"_index":927,"title":{},"body":{"classes/FederatedUpdateDto.html":{},"coverage.html":{}}}],["src/modules/federated/federated.entity.ts",{"_index":815,"title":{},"body":{"entities/Federated.html":{},"coverage.html":{}}}],["src/modules/federated/federated.entity.ts:12",{"_index":819,"title":{},"body":{"entities/Federated.html":{}}}],["src/modules/federated/federated.entity.ts:15",{"_index":823,"title":{},"body":{"entities/Federated.html":{}}}],["src/modules/federated/federated.entity.ts:18",{"_index":822,"title":{},"body":{"entities/Federated.html":{}}}],["src/modules/federated/federated.entity.ts:9",{"_index":818,"title":{},"body":{"entities/Federated.html":{}}}],["src/modules/federated/federated.module.ts",{"_index":879,"title":{},"body":{"modules/FederatedModule.html":{}}}],["src/modules/federated/federated.service.ts",{"_index":883,"title":{},"body":{"injectables/FederatedService.html":{},"coverage.html":{}}}],["src/modules/federated/federated.service.ts:107",{"_index":901,"title":{},"body":{"injectables/FederatedService.html":{}}}],["src/modules/federated/federated.service.ts:11",{"_index":891,"title":{},"body":{"injectables/FederatedService.html":{}}}],["src/modules/federated/federated.service.ts:27",{"_index":903,"title":{},"body":{"injectables/FederatedService.html":{}}}],["src/modules/federated/federated.service.ts:51",{"_index":899,"title":{},"body":{"injectables/FederatedService.html":{}}}],["src/modules/federated/federated.service.ts:72",{"_index":894,"title":{},"body":{"injectables/FederatedService.html":{}}}],["src/modules/federated/federated.service.ts:90",{"_index":897,"title":{},"body":{"injectables/FederatedService.html":{}}}],["src/modules/federated/interfaces/federated",{"_index":2060,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/modules/federated/interfaces/federated.interface.ts",{"_index":868,"title":{},"body":{"interfaces/FederatedInterface.html":{},"coverage.html":{}}}],["src/modules/handlebar",{"_index":964,"title":{},"body":{"modules/HandlebarEmailModule.html":{},"injectables/HandlebarEmailService.html":{},"coverage.html":{}}}],["src/modules/logger/interfaces/logger",{"_index":1025,"title":{},"body":{"interfaces/LoggerConfigInterface.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"interfaces/LoggerTransportInterface.html":{},"coverage.html":{}}}],["src/modules/logger/logger",{"_index":1029,"title":{},"body":{"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerTransportService.html":{},"coverage.html":{}}}],["src/modules/logger/logger.module.ts",{"_index":1047,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/modules/logger/logger.service.ts",{"_index":1133,"title":{},"body":{"injectables/LoggerService.html":{},"coverage.html":{}}}],["src/modules/logger/logger.service.ts:104",{"_index":1146,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/modules/logger/logger.service.ts:12",{"_index":1143,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/modules/logger/logger.service.ts:17",{"_index":1154,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/modules/logger/logger.service.ts:42",{"_index":1152,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/modules/logger/logger.service.ts:61",{"_index":1163,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/modules/logger/logger.service.ts:66",{"_index":1149,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/modules/logger/logger.service.ts:71",{"_index":1159,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/modules/logger/logger.service.ts:76",{"_index":1161,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/modules/logger/logger.service.ts:81",{"_index":1156,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/modules/logger/logger.service.ts:88",{"_index":1158,"title":{},"body":{"injectables/LoggerService.html":{}}}],["src/modules/logger/transports/logger",{"_index":1108,"title":{},"body":{"injectables/LoggerSentryTransport.html":{},"coverage.html":{}}}],["src/modules/role/decorator/roles.decorator.ts",{"_index":1903,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/role/dto/create",{"_index":625,"title":{},"body":{"classes/CreateRoleDto.html":{},"coverage.html":{}}}],["src/modules/role/dto/role.dto.ts",{"_index":1275,"title":{},"body":{"classes/RoleDto.html":{},"coverage.html":{}}}],["src/modules/role/dto/role.dto.ts:15",{"_index":1278,"title":{},"body":{"classes/RoleDto.html":{}}}],["src/modules/role/dto/update",{"_index":1353,"title":{},"body":{"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["src/modules/role/enum/role.enum.ts",{"_index":1957,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/modules/role/guards/roles.guard.ts",{"_index":1323,"title":{},"body":{"guards/RolesGuard.html":{},"coverage.html":{}}}],["src/modules/role/guards/roles.guard.ts:10",{"_index":1329,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/modules/role/guards/roles.guard.ts:7",{"_index":1327,"title":{},"body":{"guards/RolesGuard.html":{}}}],["src/modules/role/interfaces/role.interface.ts",{"_index":1291,"title":{},"body":{"interfaces/RoleInterface.html":{},"coverage.html":{}}}],["src/modules/role/role.controller.ts",{"_index":1216,"title":{},"body":{"controllers/RoleController.html":{},"coverage.html":{}}}],["src/modules/role/role.controller.ts:45",{"_index":1225,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/role/role.controller.ts:54",{"_index":1229,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/role/role.controller.ts:69",{"_index":1234,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/role/role.controller.ts:78",{"_index":1243,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/role/role.controller.ts:87",{"_index":1238,"title":{},"body":{"controllers/RoleController.html":{}}}],["src/modules/role/role.entity.ts",{"_index":1200,"title":{},"body":{"entities/Role.html":{},"coverage.html":{}}}],["src/modules/role/role.entity.ts:12",{"_index":1206,"title":{},"body":{"entities/Role.html":{}}}],["src/modules/role/role.entity.ts:9",{"_index":1202,"title":{},"body":{"entities/Role.html":{}}}],["src/modules/role/role.factory.ts",{"_index":1284,"title":{},"body":{"classes/RoleFactory.html":{},"coverage.html":{}}}],["src/modules/role/role.factory.ts:6",{"_index":1286,"title":{},"body":{"classes/RoleFactory.html":{}}}],["src/modules/role/role.module.ts",{"_index":1294,"title":{},"body":{"modules/RoleModule.html":{}}}],["src/modules/role/role.service.ts",{"_index":1297,"title":{},"body":{"injectables/RoleService.html":{},"coverage.html":{}}}],["src/modules/role/role.service.ts:13",{"_index":1299,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/role/role.service.ts:19",{"_index":1301,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/role/role.service.ts:25",{"_index":1303,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/role/role.service.ts:30",{"_index":1305,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/role/role.service.ts:38",{"_index":1306,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/role/role.service.ts:43",{"_index":1308,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/role/role.service.ts:56",{"_index":1307,"title":{},"body":{"injectables/RoleService.html":{}}}],["src/modules/upload/aws",{"_index":1794,"title":{},"body":{"injectables/awsS3UploadService.html":{},"coverage.html":{}}}],["src/modules/upload/dto/file",{"_index":931,"title":{},"body":{"classes/FileResponseDto.html":{},"coverage.html":{}}}],["src/modules/upload/interfaces/aws",{"_index":582,"title":{},"body":{"interfaces/AwsS3ConfigInterface.html":{},"coverage.html":{}}}],["src/modules/upload/upload.controller.ts",{"_index":1359,"title":{},"body":{"controllers/UploadController.html":{},"coverage.html":{}}}],["src/modules/upload/upload.controller.ts:35",{"_index":1367,"title":{},"body":{"controllers/UploadController.html":{}}}],["src/modules/upload/upload.controller.ts:41",{"_index":1370,"title":{},"body":{"controllers/UploadController.html":{}}}],["src/modules/upload/upload.module.ts",{"_index":1401,"title":{},"body":{"modules/UploadModule.html":{}}}],["src/modules/user",{"_index":654,"title":{},"body":{"classes/CreateUserRoleDto.html":{},"entities/UserRole.html":{},"controllers/UserRoleController.html":{},"interfaces/UserRoleCreatableInterface.html":{},"classes/UserRoleDto.html":{},"classes/UserRoleFactory.html":{},"interfaces/UserRoleInterface.html":{},"modules/UserRoleModule.html":{},"injectables/UserRoleService.html":{},"coverage.html":{}}}],["src/modules/user/__fixtures__/app.module.fixture.ts",{"_index":196,"title":{},"body":{"modules/AppModuleFixture.html":{}}}],["src/modules/user/__fixtures__/ormconfig.fixture.ts",{"_index":1906,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/user/constant/user.constants.ts",{"_index":1907,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/user/dto/create",{"_index":628,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/update",{"_index":1355,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/user.dto.ts",{"_index":1477,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{}}}],["src/modules/user/dto/user.dto.ts:101",{"_index":1492,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:38",{"_index":1493,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:50",{"_index":1489,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:62",{"_index":1490,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:74",{"_index":1485,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:83",{"_index":1482,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:96",{"_index":1497,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/dto/user.dto.ts:99",{"_index":1491,"title":{},"body":{"classes/UserDto.html":{}}}],["src/modules/user/exceptions/user",{"_index":1535,"title":{},"body":{"classes/UserNotFoundException.html":{},"coverage.html":{}}}],["src/modules/user/interfaces/user",{"_index":1474,"title":{},"body":{"interfaces/UserCreatableInterface.html":{},"interfaces/UserOwnableInterface.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/modules/user/interfaces/user.interface.ts",{"_index":1521,"title":{},"body":{"interfaces/UserInterface.html":{},"coverage.html":{}}}],["src/modules/user/user",{"_index":1544,"title":{},"body":{"controllers/UserReportController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts",{"_index":1435,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/user/user.controller.ts:107",{"_index":1446,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:43",{"_index":1450,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:55",{"_index":1440,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:66",{"_index":1442,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:81",{"_index":1444,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.controller.ts:93",{"_index":1449,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/user/user.entity.ts",{"_index":1411,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/modules/user/user.entity.ts:12",{"_index":1427,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/user.entity.ts:15",{"_index":1423,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/user.entity.ts:18",{"_index":1426,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/user.entity.ts:21",{"_index":1421,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/user.entity.ts:24",{"_index":1422,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/user.entity.ts:27",{"_index":1418,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/user.entity.ts:30",{"_index":1415,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/user.entity.ts:33",{"_index":1424,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/user.entity.ts:36",{"_index":1425,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/user.entity.ts:39",{"_index":1429,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/user.entity.ts:42",{"_index":1420,"title":{},"body":{"entities/User.html":{}}}],["src/modules/user/user.factory.ts",{"_index":1510,"title":{},"body":{"classes/UserFactory.html":{},"coverage.html":{}}}],["src/modules/user/user.factory.ts:6",{"_index":1511,"title":{},"body":{"classes/UserFactory.html":{}}}],["src/modules/user/user.module.ts",{"_index":1528,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/user/user.seeder.ts",{"_index":1621,"title":{},"body":{"classes/UserSeeder.html":{},"coverage.html":{}}}],["src/modules/user/user.seeder.ts:7",{"_index":1624,"title":{},"body":{"classes/UserSeeder.html":{}}}],["src/modules/user/user.service.ts",{"_index":1639,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/modules/user/user.service.ts:125",{"_index":1664,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:145",{"_index":1655,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:183",{"_index":1660,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:22",{"_index":1644,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:31",{"_index":1646,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:37",{"_index":1647,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:44",{"_index":1650,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:54",{"_index":1651,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:59",{"_index":1649,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:66",{"_index":1653,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:79",{"_index":1652,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.service.ts:91",{"_index":1669,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/user/user.subscriber.ts",{"_index":1710,"title":{},"body":{"classes/UserSubscriber.html":{},"coverage.html":{}}}],["src/modules/user/user.subscriber.ts:117",{"_index":1726,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["src/modules/user/user.subscriber.ts:21",{"_index":1737,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["src/modules/user/user.subscriber.ts:25",{"_index":1734,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["src/modules/user/user.subscriber.ts:35",{"_index":1736,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["src/modules/user/user.subscriber.ts:41",{"_index":1730,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["src/modules/user/user.subscriber.ts:47",{"_index":1728,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["src/modules/user/user.subscriber.ts:58",{"_index":1732,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["src/modules/user/user.subscriber.ts:83",{"_index":1723,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["start",{"_index":1993,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":1996,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":1998,"title":{},"body":{"index.html":{}}}],["startdate",{"_index":1073,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerService.html":{}}}],["started",{"_index":1977,"title":{"index.html":{}},"body":{}}],["starter",{"_index":1988,"title":{},"body":{"index.html":{}}}],["statements",{"_index":1836,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"classes/CryptUtil.html":{},"modules/EmailModule.html":{},"dependencies.html":{}}}],["status",{"_index":342,"title":{},"body":{"controllers/AuthController.html":{},"classes/ErrorCodeExceptionFilter.html":{}}}],["statuscode",{"_index":806,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{},"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["stay",{"_index":2018,"title":{},"body":{"index.html":{}}}],["still",{"_index":282,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["strategies/github.strategy",{"_index":456,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/jwt.strategy",{"_index":457,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategies/local",{"_index":458,"title":{},"body":{"modules/AuthModule.html":{}}}],["strategy",{"_index":404,"title":{},"body":{"injectables/AuthGithubStrategy.html":{},"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["strategy.ts",{"_index":1014,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["strategy.ts:13",{"_index":1018,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["strategy.ts:8",{"_index":1016,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["strict",{"_index":2133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":20,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthGithubStrategy.html":{},"classes/AuthLoginDto.html":{},"classes/AuthLoginInterface.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"interfaces/AwsS3ConfigInterface.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"interfaces/CommonEntityInterface.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/CryptUtil.html":{},"classes/EmailDto.html":{},"interfaces/EmailOptionsInterface.html":{},"injectables/EmailService.html":{},"interfaces/ErrorCodeExceptionInterface.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"injectables/FederatedService.html":{},"classes/FileResponseDto.html":{},"interfaces/GitHubProfileInterface.html":{},"interfaces/GithubConfigInterface.html":{},"interfaces/JwtConfigInterface.html":{},"interfaces/JwtPayload.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"interfaces/Response.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"interfaces/RoleInterface.html":{},"injectables/RoleService.html":{},"interfaces/ServerConfigInterface.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateRoleDto.html":{},"controllers/UploadController.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"classes/UserNotFoundException.html":{},"interfaces/UserOwnableInterface.html":{},"entities/UserRole.html":{},"controllers/UserRoleController.html":{},"interfaces/UserRoleCreatableInterface.html":{},"classes/UserRoleDto.html":{},"interfaces/UserRoleInterface.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"injectables/awsS3UploadService.html":{},"miscellaneous/functions.html":{},"classes/initTables1664757497775.html":{},"miscellaneous/variables.html":{}}}],["string(name",{"_index":1815,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["strong",{"_index":632,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sub",{"_index":524,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{}}}],["subject",{"_index":548,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/EmailOptionsInterface.html":{},"injectables/EmailService.html":{},"classes/FederatedDto.html":{},"injectables/FederatedService.html":{}}}],["subscribers",{"_index":2174,"title":{},"body":{"miscellaneous/variables.html":{}}}],["success",{"_index":252,"title":{},"body":{"controllers/AuthController.html":{},"injectables/LoggerRequestInterceptor.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{}}}],["successfully",{"_index":348,"title":{},"body":{"controllers/AuthController.html":{}}}],["successfully'})@apiresponse({status",{"_index":290,"title":{},"body":{"controllers/AuthController.html":{}}}],["super",{"_index":413,"title":{},"body":{"injectables/AuthGithubStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerService.html":{}}}],["super('user",{"_index":1539,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["super.catch(exception",{"_index":809,"title":{},"body":{"classes/ErrorCodeExceptionFilter.html":{},"injectables/LoggerExceptionFilter.html":{}}}],["support",{"_index":2011,"title":{},"body":{"index.html":{},"modules.html":{}}}],["supposed",{"_index":1185,"title":{},"body":{"injectables/LoggerTransportService.html":{}}}],["svg",{"_index":2043,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1856,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["swagger(app",{"_index":1972,"title":{},"body":{"miscellaneous/functions.html":{}}}],["switch",{"_index":2152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["symbol",{"_index":2082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["synchronize",{"_index":2157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t",{"_index":1192,"title":{},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{}}}],["table",{"_index":39,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"classes/Federated1665882607149.html":{},"coverage.html":{},"classes/initTables1664757497775.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1914,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":650,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["takes",{"_index":2095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tap",{"_index":1081,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["target",{"_index":2080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["template",{"_index":540,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/EmailOptionsInterface.html":{},"injectables/EmailService.html":{},"miscellaneous/variables.html":{}}}],["template_reset_password",{"_index":1887,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["template_test",{"_index":753,"title":{},"body":{"injectables/EmailService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["templates",{"_index":2130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["test",{"_index":693,"title":{},"body":{"controllers/EmailController.html":{},"index.html":{}}}],["test1234",{"_index":924,"title":{},"body":{"injectables/FederatedService.html":{},"classes/UserFactory.html":{}}}],["test:covsupport",{"_index":2003,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":2002,"title":{},"body":{"index.html":{}}}],["testing",{"_index":776,"title":{},"body":{"injectables/EmailService.html":{}}}],["tests",{"_index":2000,"title":{},"body":{"index.html":{}}}],["testtemplate",{"_index":2159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text",{"_index":739,"title":{},"body":{"interfaces/EmailOptionsInterface.html":{},"injectables/EmailService.html":{},"entities/User.html":{},"classes/initTables1664757497775.html":{}}}],["thanks",{"_index":2009,"title":{},"body":{"index.html":{}}}],["this._assigndefaultuserrole(event",{"_index":1750,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["this._authconfig.resettoken.ttl",{"_index":562,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._checkemailuniqueness(event",{"_index":1746,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["this._checkusernameuniqueness(event",{"_index":1747,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["this._hashinsertedpassword(event",{"_index":1748,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["this._hashpassword(user",{"_index":1757,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["this._hashupdatedpassword(event",{"_index":1751,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["this._jwtconfig.access",{"_index":520,"title":{},"body":{"injectables/AuthService.html":{}}}],["this._jwtconfig.refresh",{"_index":522,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.accesstoken",{"_index":472,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["this.appservice.getsampleconfig",{"_index":90,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.forgotpassword(authemaildto.email",{"_index":345,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.jwtrefresh(authrefreshdto",{"_index":336,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.jwtsign(user",{"_index":332,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{}}}],["this.authservice.updatepassword(resettoken",{"_index":350,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuser(username",{"_index":1020,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.cachemanager.get(user_report_cache_key",{"_index":1559,"title":{},"body":{"controllers/UserReportController.html":{}}}],["this.cachemanager.set(user_report_cache_key",{"_index":1465,"title":{},"body":{"controllers/UserController.html":{}}}],["this.config.access",{"_index":993,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["this.config.access.signoptions",{"_index":997,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["this.config.bucket",{"_index":1811,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["this.config.dsn",{"_index":1120,"title":{},"body":{"injectables/LoggerSentryTransport.html":{}}}],["this.config.loglevelmap(loglevel",{"_index":1125,"title":{},"body":{"injectables/LoggerSentryTransport.html":{}}}],["this.config.refresh",{"_index":994,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["this.config.secret",{"_index":995,"title":{},"body":{"injectables/JwtConfigService.html":{}}}],["this.config.transportloglevel",{"_index":1183,"title":{},"body":{"injectables/LoggerTransportService.html":{}}}],["this.config?.transportloglevel",{"_index":1181,"title":{},"body":{"injectables/LoggerTransportService.html":{}}}],["this.configservice.get('database",{"_index":222,"title":{},"body":{"injectables/AppService.html":{}}}],["this.configservice.get('port",{"_index":220,"title":{},"body":{"injectables/AppService.html":{}}}],["this.constructor.name",{"_index":1678,"title":{},"body":{"injectables/UserService.html":{}}}],["this.context",{"_index":1677,"title":{},"body":{"injectables/UserService.html":{}}}],["this.createfederated(provider",{"_index":918,"title":{},"body":{"injectables/FederatedService.html":{}}}],["this.createuser(email",{"_index":917,"title":{},"body":{"injectables/FederatedService.html":{}}}],["this.createuserwithfederated(provider",{"_index":913,"title":{},"body":{"injectables/FederatedService.html":{}}}],["this.dbconfig.host",{"_index":218,"title":{},"body":{"injectables/AppService.html":{}}}],["this.dbconfig.port",{"_index":217,"title":{},"body":{"injectables/AppService.html":{}}}],["this.emailservice.send(emailoptions",{"_index":557,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.emailservice.sendemailwithtemplate(dto.to",{"_index":702,"title":{},"body":{"controllers/EmailController.html":{}}}],["this.emailservice.sendtestemail",{"_index":699,"title":{},"body":{"controllers/EmailController.html":{}}}],["this.errorcode",{"_index":1540,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["this.exists(provider",{"_index":912,"title":{},"body":{"injectables/FederatedService.html":{}}}],["this.factory(rolefactory).create",{"_index":1629,"title":{},"body":{"classes/UserSeeder.html":{}}}],["this.factory(userfactory).create",{"_index":1632,"title":{},"body":{"classes/UserSeeder.html":{}}}],["this.factory(userrolefactory).create",{"_index":1634,"title":{},"body":{"classes/UserSeeder.html":{}}}],["this.federatedservice.sign('github",{"_index":423,"title":{},"body":{"injectables/AuthGithubStrategy.html":{}}}],["this.filename",{"_index":948,"title":{},"body":{"classes/FileResponseDto.html":{}}}],["this.findall",{"_index":1466,"title":{},"body":{"controllers/UserController.html":{}}}],["this.findbyid(id",{"_index":1318,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["this.hashpassword(passwordplain",{"_index":680,"title":{},"body":{"classes/CryptUtil.html":{}}}],["this.jwtservice.sign",{"_index":526,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verifyasync",{"_index":531,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtsign(user",{"_index":537,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggerservice.debug",{"_index":1692,"title":{},"body":{"injectables/UserService.html":{}}}],["this.loggerservice.debug('user",{"_index":571,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggerservice.error(e?.message",{"_index":763,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.loggerservice.exception",{"_index":1039,"title":{},"body":{"injectables/LoggerExceptionFilter.html":{}}}],["this.loggerservice.exception(error",{"_index":1097,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["this.loggerservice.formatrequestmessage(req",{"_index":1088,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["this.loggerservice.formatresponsemessage",{"_index":1096,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["this.loggerservice.log(message",{"_index":1090,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["this.loggerservice.setcontext(_context.getclass().name",{"_index":1087,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["this.loggerservice.setcontext(authservice.name",{"_index":515,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.loggertransports.map(loggertransport",{"_index":1188,"title":{},"body":{"injectables/LoggerTransportService.html":{}}}],["this.loggertransports.push(transport",{"_index":1184,"title":{},"body":{"injectables/LoggerTransportService.html":{}}}],["this.loglevels",{"_index":1182,"title":{},"body":{"injectables/LoggerTransportService.html":{}}}],["this.loglevels.includes(loglevel",{"_index":1186,"title":{},"body":{"injectables/LoggerTransportService.html":{}}}],["this.mailerservice.sendmail(emailoptions",{"_index":975,"title":{},"body":{"injectables/HandlebarEmailService.html":{}}}],["this.originalname",{"_index":949,"title":{},"body":{"classes/FileResponseDto.html":{}}}],["this.reflector.getallandoverride",{"_index":1334,"title":{},"body":{"guards/RolesGuard.html":{}}}],["this.refreshtoken",{"_index":473,"title":{},"body":{"classes/AuthResponseDto.html":{}}}],["this.repo.create(createrole",{"_index":1312,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.repo.create(createuser",{"_index":1679,"title":{},"body":{"injectables/UserService.html":{}}}],["this.repo.create(createuserrole",{"_index":1615,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["this.repo.find",{"_index":1316,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{}}}],["this.repo.findone",{"_index":925,"title":{},"body":{"injectables/FederatedService.html":{},"injectables/UserService.html":{}}}],["this.repo.findoneby",{"_index":1317,"title":{},"body":{"injectables/RoleService.html":{},"injectables/UserRoleService.html":{}}}],["this.repo.remove(role",{"_index":1321,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.repo.remove(user",{"_index":1688,"title":{},"body":{"injectables/UserService.html":{}}}],["this.repo.remove(userrole",{"_index":1619,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["this.repo.save",{"_index":920,"title":{},"body":{"injectables/FederatedService.html":{}}}],["this.repo.save(newrole",{"_index":1320,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.repo.save(newuser",{"_index":1687,"title":{},"body":{"injectables/UserService.html":{}}}],["this.repo.save(role",{"_index":1314,"title":{},"body":{"injectables/RoleService.html":{}}}],["this.repo.save(user",{"_index":1681,"title":{},"body":{"injectables/UserService.html":{}}}],["this.repo.save(userrole",{"_index":1617,"title":{},"body":{"injectables/UserRoleService.html":{}}}],["this.responseerror(req",{"_index":1095,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["this.responsesuccess(req",{"_index":1092,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["this.rolesservice.create(createroledto",{"_index":1264,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.rolesservice.findall",{"_index":1265,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.rolesservice.findone(id",{"_index":1268,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.rolesservice.remove(id",{"_index":1274,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.rolesservice.update(id",{"_index":1271,"title":{},"body":{"controllers/RoleController.html":{}}}],["this.s3",{"_index":1806,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["this.s3.upload(params).promise",{"_index":1828,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["this.s3service.uploadfile(file",{"_index":1394,"title":{},"body":{"controllers/UploadController.html":{}}}],["this.send",{"_index":768,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.sendemailservice.send",{"_index":758,"title":{},"body":{"injectables/EmailService.html":{}}}],["this.ttlconfig",{"_index":567,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.updatereportcache",{"_index":1468,"title":{},"body":{"controllers/UserController.html":{}}}],["this.updateresettoken(user",{"_index":1694,"title":{},"body":{"injectables/UserService.html":{}}}],["this.updateresettokenifvalid(email",{"_index":539,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.uploadtos3",{"_index":1809,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["this.url",{"_index":950,"title":{},"body":{"classes/FileResponseDto.html":{}}}],["this.userservice.create",{"_index":923,"title":{},"body":{"injectables/FederatedService.html":{}}}],["this.userservice.findbyemail(email",{"_index":915,"title":{},"body":{"injectables/FederatedService.html":{}}}],["this.userservice.findone(federated.userid",{"_index":914,"title":{},"body":{"injectables/FederatedService.html":{}}}],["this.userservice.findone(id",{"_index":536,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findone(sub",{"_index":1010,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.userservice.updatepassword",{"_index":574,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.updateresettokenbyemail(email",{"_index":568,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.validateuserpassword",{"_index":516,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.create(createuserdto",{"_index":1467,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.findall",{"_index":1469,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserReportController.html":{}}}],["this.usersservice.findone(id",{"_index":1471,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.remove(id",{"_index":1473,"title":{},"body":{"controllers/UserController.html":{}}}],["this.usersservice.update(id",{"_index":1472,"title":{},"body":{"controllers/UserController.html":{}}}],["this.useruserrolesservice.create(createuserroledto",{"_index":1587,"title":{},"body":{"controllers/UserRoleController.html":{}}}],["this.useruserrolesservice.findall",{"_index":1588,"title":{},"body":{"controllers/UserRoleController.html":{}}}],["this.useruserrolesservice.findone(id",{"_index":1589,"title":{},"body":{"controllers/UserRoleController.html":{}}}],["this.useruserrolesservice.remove(id",{"_index":1590,"title":{},"body":{"controllers/UserRoleController.html":{}}}],["throw",{"_index":73,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"injectables/AuthGithubStrategy.html":{},"injectables/AuthService.html":{},"injectables/EmailService.html":{},"injectables/FederatedService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/RoleService.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{}}}],["throwerror",{"_index":1078,"title":{},"body":{"injectables/LoggerRequestInterceptor.html":{}}}],["throws",{"_index":1022,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["time",{"_index":609,"title":{},"body":{"classes/CommonEntityDto.html":{},"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{}}}],["times",{"_index":1665,"title":{},"body":{"injectables/UserService.html":{}}}],["timestamp",{"_index":45,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"classes/ErrorCodeExceptionFilter.html":{},"classes/Federated1665882607149.html":{},"entities/User.html":{},"classes/initTables1664757497775.html":{}}}],["title",{"_index":610,"title":{},"body":{"classes/CommonEntityDto.html":{},"classes/CreateUserDto.html":{},"classes/FileResponseDto.html":{},"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{}}}],["todo",{"_index":383,"title":{},"body":{"controllers/AuthGithubController.html":{},"injectables/LoggerSentryTransport.html":{},"entities/Role.html":{}}}],["token",{"_index":244,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["token.'})@useguards(githubauthguard)@get('callback",{"_index":364,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["tokenexp",{"_index":552,"title":{},"body":{"injectables/AuthService.html":{}}}],["tokenurl",{"_index":550,"title":{},"body":{"injectables/AuthService.html":{}}}],["touch",{"_index":2019,"title":{},"body":{"index.html":{}}}],["trace",{"_index":1151,"title":{},"body":{"injectables/LoggerService.html":{}}}],["transform",{"_index":945,"title":{},"body":{"classes/FileResponseDto.html":{},"classes/UserDto.html":{}}}],["transformer",{"_index":376,"title":{},"body":{"controllers/AuthGithubController.html":{},"classes/AuthLoginDto.html":{},"classes/CommonEntityDto.html":{},"classes/EmailDto.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"classes/FederatedUpdateDto.html":{},"classes/FileResponseDto.html":{},"classes/RoleDto.html":{},"injectables/RoleService.html":{},"controllers/UploadController.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["transforminterceptor",{"_index":1193,"title":{"injectables/TransformInterceptor.html":{}},"body":{"interfaces/Response.html":{},"injectables/TransformInterceptor.html":{},"coverage.html":{}}}],["transport",{"_index":1147,"title":{},"body":{"injectables/LoggerService.html":{},"injectables/LoggerTransportService.html":{},"miscellaneous/variables.html":{}}}],["transport.interface",{"_index":1179,"title":{},"body":{"injectables/LoggerTransportService.html":{}}}],["transport.interface.ts",{"_index":1169,"title":{},"body":{"interfaces/LoggerTransportInterface.html":{},"coverage.html":{}}}],["transport.interface.ts:4",{"_index":1170,"title":{},"body":{"interfaces/LoggerTransportInterface.html":{}}}],["transport.service",{"_index":1048,"title":{},"body":{"modules/LoggerModule.html":{},"injectables/LoggerService.html":{}}}],["transport.service.ts",{"_index":1171,"title":{},"body":{"injectables/LoggerTransportService.html":{},"coverage.html":{}}}],["transport.service.ts:19",{"_index":1175,"title":{},"body":{"injectables/LoggerTransportService.html":{}}}],["transport.service.ts:23",{"_index":1176,"title":{},"body":{"injectables/LoggerTransportService.html":{}}}],["transport.service.ts:8",{"_index":1177,"title":{},"body":{"injectables/LoggerTransportService.html":{}}}],["transport.service.ts:9",{"_index":1174,"title":{},"body":{"injectables/LoggerTransportService.html":{}}}],["transportloglevel",{"_index":1027,"title":{},"body":{"interfaces/LoggerConfigInterface.html":{},"miscellaneous/variables.html":{}}}],["transports",{"_index":1187,"title":{},"body":{"injectables/LoggerTransportService.html":{}}}],["transports/logger",{"_index":1054,"title":{},"body":{"modules/LoggerModule.html":{}}}],["transportservice",{"_index":1144,"title":{},"body":{"injectables/LoggerService.html":{}}}],["true",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"injectables/AppService.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"classes/initTables1664757497775.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":756,"title":{},"body":{"injectables/EmailService.html":{},"injectables/FederatedService.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{},"injectables/awsS3UploadService.html":{}}}],["trying",{"_index":767,"title":{},"body":{"injectables/EmailService.html":{},"injectables/awsS3UploadService.html":{}}}],["ts",{"_index":2096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ttl",{"_index":229,"title":{},"body":{"interfaces/AuthConfigInterface.html":{},"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["ttlconfig",{"_index":477,"title":{},"body":{"injectables/AuthService.html":{}}}],["ttlminutes",{"_index":1659,"title":{},"body":{"injectables/UserService.html":{}}}],["twitter",{"_index":2025,"title":{},"body":{"index.html":{}}}],["type",{"_index":18,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"injectables/ApiKeyMiddleware.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"interfaces/AuthConfigInterface.html":{},"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"classes/AuthLoginDto.html":{},"classes/AuthLoginInterface.html":{},"classes/AuthRefreshDto.html":{},"classes/AuthResponseDto.html":{},"injectables/AuthService.html":{},"interfaces/AwsS3ConfigInterface.html":{},"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"interfaces/CommonEntityInterface.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/CryptUtil.html":{},"controllers/EmailController.html":{},"classes/EmailDto.html":{},"modules/EmailModule.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"interfaces/EmailOptionsInterface.html":{},"injectables/EmailService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"interfaces/ErrorCodeExceptionInterface.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"injectables/FederatedService.html":{},"classes/FileResponseDto.html":{},"interfaces/GitHubProfileInterface.html":{},"interfaces/GithubConfigInterface.html":{},"injectables/HandlebarEmailService.html":{},"interfaces/JwtConfigInterface.html":{},"injectables/JwtConfigService.html":{},"interfaces/JwtPayload.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"interfaces/LoggerConfigInterface.html":{},"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"interfaces/LoggerSentryConfigInterface.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"interfaces/Response.html":{},"entities/Role.html":{},"controllers/RoleController.html":{},"classes/RoleDto.html":{},"interfaces/RoleInterface.html":{},"injectables/RoleService.html":{},"guards/RolesGuard.html":{},"interfaces/SendEmailServiceInterface.html":{},"interfaces/ServerConfigInterface.html":{},"injectables/TransformInterceptor.html":{},"classes/UpdateRoleDto.html":{},"controllers/UploadController.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"classes/UserNotFoundException.html":{},"interfaces/UserOwnableInterface.html":{},"entities/UserRole.html":{},"controllers/UserRoleController.html":{},"interfaces/UserRoleCreatableInterface.html":{},"classes/UserRoleDto.html":{},"interfaces/UserRoleInterface.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"injectables/awsS3UploadService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/initTables1664757497775.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2055,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":2162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typeorm",{"_index":35,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"classes/CommonEntity.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"injectables/FederatedService.html":{},"entities/Role.html":{},"injectables/RoleService.html":{},"entities/User.html":{},"entities/UserRole.html":{},"injectables/UserRoleService.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"dependencies.html":{},"classes/initTables1664757497775.html":{}}}],["typeorm/find",{"_index":1741,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["typeorm_module_config",{"_index":1847,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormconfig",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeormconfig.key",{"_index":181,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmodule",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"modules/FederatedModule.html":{},"modules/RoleModule.html":{},"modules/UserModule.html":{},"modules/UserRoleModule.html":{}}}],["typeormmodule.forfeature([federated",{"_index":882,"title":{},"body":{"modules/FederatedModule.html":{}}}],["typeormmodule.forfeature([role",{"_index":1296,"title":{},"body":{"modules/RoleModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":1533,"title":{},"body":{"modules/UserModule.html":{}}}],["typeormmodule.forfeature([userrole",{"_index":1604,"title":{},"body":{"modules/UserRoleModule.html":{}}}],["typeormmodule.forroot(ormconfig",{"_index":200,"title":{},"body":{"modules/AppModuleFixture.html":{}}}],["typeormmodule.forrootasync",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":2168,"title":{},"body":{"miscellaneous/variables.html":{}}}],["types",{"_index":1921,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":1987,"title":{},"body":{"index.html":{}}}],["unauthorized",{"_index":1023,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["unauthorizedexception",{"_index":66,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"injectables/AuthGithubStrategy.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["unauthorizedexception('api",{"_index":75,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{}}}],["unauthorizedexception('permission",{"_index":421,"title":{},"body":{"injectables/AuthGithubStrategy.html":{}}}],["unavailable",{"_index":564,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":1040,"title":{},"body":{"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerService.html":{},"entities/User.html":{},"classes/UserDto.html":{},"miscellaneous/variables.html":{}}}],["undefined})@apiresponse({status",{"_index":288,"title":{},"body":{"controllers/AuthController.html":{}}}],["unique",{"_index":1208,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{},"entities/UserRole.html":{},"classes/initTables1664757497775.html":{}}}],["unique(['email",{"_index":1433,"title":{},"body":{"entities/User.html":{}}}],["unique(['name",{"_index":1210,"title":{},"body":{"entities/Role.html":{}}}],["unique(['userid",{"_index":1568,"title":{},"body":{"entities/UserRole.html":{}}}],["unique(['username",{"_index":1432,"title":{},"body":{"entities/User.html":{}}}],["unit",{"_index":1999,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":366,"title":{},"body":{"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"controllers/EmailController.html":{},"injectables/EmailService.html":{},"injectables/FederatedService.html":{},"injectables/HandlebarEmailService.html":{},"controllers/RoleController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{}}}],["unlicensed",{"_index":2054,"title":{},"body":{"properties.html":{}}}],["up",{"_index":17,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"classes/Federated1665882607149.html":{},"classes/initTables1664757497775.html":{}}}],["up(queryrunner",{"_index":32,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"classes/Federated1665882607149.html":{},"classes/initTables1664757497775.html":{}}}],["updatable.interface",{"_index":929,"title":{},"body":{"classes/FederatedUpdateDto.html":{}}}],["updatable.interface.ts",{"_index":2058,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["update",{"_index":284,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/AuthUpdatePasswordDto.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedUpdateDto.html":{},"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"classes/initTables1664757497775.html":{}}}],["update(@param('id",{"_index":1270,"title":{},"body":{"controllers/RoleController.html":{}}}],["update(id",{"_index":1239,"title":{},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updated",{"_index":618,"title":{},"body":{"classes/CommonEntityDto.html":{},"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"classes/UserSubscriber.html":{}}}],["updated.'})@expose",{"_index":620,"title":{},"body":{"classes/CommonEntityDto.html":{},"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{}}}],["updatedat",{"_index":591,"title":{},"body":{"classes/CommonEntity.html":{},"classes/CommonEntityDto.html":{},"interfaces/CommonEntityInterface.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedDto.html":{},"classes/RoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"classes/initTables1664757497775.html":{}}}],["updatedatecolumn",{"_index":600,"title":{},"body":{"classes/CommonEntity.html":{}}}],["updatedatecolumn()@apiproperty",{"_index":596,"title":{},"body":{"classes/CommonEntity.html":{},"classes/FederatedDto.html":{}}}],["updateevent",{"_index":1722,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["updatepassword",{"_index":478,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["updatepassword(resettoken",{"_index":1654,"title":{},"body":{"injectables/UserService.html":{}}}],["updatepassword(token",{"_index":496,"title":{},"body":{"injectables/AuthService.html":{}}}],["updatereportcache",{"_index":1436,"title":{},"body":{"controllers/UserController.html":{}}}],["updateresettoken",{"_index":1641,"title":{},"body":{"injectables/UserService.html":{}}}],["updateresettoken(user",{"_index":1658,"title":{},"body":{"injectables/UserService.html":{}}}],["updateresettokenbyemail",{"_index":1642,"title":{},"body":{"injectables/UserService.html":{}}}],["updateresettokenbyemail(email",{"_index":1663,"title":{},"body":{"injectables/UserService.html":{}}}],["updateresettokenifvalid",{"_index":479,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateresettokenifvalid(email",{"_index":498,"title":{},"body":{"injectables/AuthService.html":{}}}],["updateroledto",{"_index":1240,"title":{"classes/UpdateRoleDto.html":{}},"body":{"controllers/RoleController.html":{},"injectables/RoleService.html":{},"classes/UpdateRoleDto.html":{},"coverage.html":{}}}],["updateuserdto",{"_index":1354,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updating",{"_index":1700,"title":{},"body":{"injectables/UserService.html":{}}}],["upload",{"_index":1360,"title":{},"body":{"controllers/UploadController.html":{},"injectables/awsS3UploadService.html":{}}}],["upload.controller",{"_index":1409,"title":{},"body":{"modules/UploadModule.html":{}}}],["upload.service",{"_index":1385,"title":{},"body":{"controllers/UploadController.html":{},"modules/UploadModule.html":{}}}],["upload.service.ts",{"_index":1795,"title":{},"body":{"injectables/awsS3UploadService.html":{},"coverage.html":{}}}],["upload.service.ts:13",{"_index":1797,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["upload.service.ts:24",{"_index":1798,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["upload.service.ts:35",{"_index":1802,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["upload_folder_name",{"_index":1848,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["upload_path",{"_index":1377,"title":{},"body":{"controllers/UploadController.html":{},"modules/UploadModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["upload_url",{"_index":1849,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["uploadcontroller",{"_index":1358,"title":{"controllers/UploadController.html":{}},"body":{"controllers/UploadController.html":{},"modules/UploadModule.html":{},"coverage.html":{}}}],["uploadedfile",{"_index":1372,"title":{},"body":{"controllers/UploadController.html":{}}}],["uploadfile",{"_index":1361,"title":{},"body":{"controllers/UploadController.html":{},"injectables/awsS3UploadService.html":{}}}],["uploadfile(@uploadedfile",{"_index":1393,"title":{},"body":{"controllers/UploadController.html":{}}}],["uploadfile(file",{"_index":1363,"title":{},"body":{"controllers/UploadController.html":{},"injectables/awsS3UploadService.html":{}}}],["uploadmodule",{"_index":103,"title":{"modules/UploadModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UploadModule.html":{},"modules.html":{},"overview.html":{}}}],["uploadtos3",{"_index":1796,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["uploadtos3(file",{"_index":1799,"title":{},"body":{"injectables/awsS3UploadService.html":{}}}],["uq_78a916df40e02a9deb1c4b75edb",{"_index":2032,"title":{},"body":{"classes/initTables1664757497775.html":{}}}],["uq_7b4e17a669299579dfa55a3fc35",{"_index":2035,"title":{},"body":{"classes/initTables1664757497775.html":{}}}],["uq_ae4578dcaed5adff96595e61660",{"_index":2037,"title":{},"body":{"classes/initTables1664757497775.html":{}}}],["uq_e12875dfb3b1d92d7d7c5377e22",{"_index":2031,"title":{},"body":{"classes/initTables1664757497775.html":{}}}],["url",{"_index":934,"title":{},"body":{"classes/FileResponseDto.html":{},"miscellaneous/variables.html":{}}}],["use",{"_index":55,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"injectables/LoggerSentryTransport.html":{}}}],["use(req",{"_index":56,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{}}}],["useclass",{"_index":1058,"title":{},"body":{"modules/LoggerModule.html":{}}}],["usefactory",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/EmailModule.html":{},"interfaces/EmailModuleOptionsInterface.html":{},"modules/HandlebarEmailModule.html":{}}}],["useguards",{"_index":300,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"controllers/RoleController.html":{},"controllers/UserController.html":{},"controllers/UserRoleController.html":{}}}],["useguards(githubauthguard",{"_index":382,"title":{},"body":{"controllers/AuthGithubController.html":{}}}],["useguards(jwtauthguard",{"_index":337,"title":{},"body":{"controllers/AuthController.html":{},"controllers/RoleController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{}}}],["useguards(jwtauthguard)@get('profile",{"_index":263,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(localauthguard",{"_index":329,"title":{},"body":{"controllers/AuthController.html":{}}}],["useguards(rolesguard",{"_index":1260,"title":{},"body":{"controllers/RoleController.html":{},"controllers/UploadController.html":{},"controllers/UserController.html":{},"controllers/UserReportController.html":{},"controllers/UserRoleController.html":{}}}],["useinterceptors",{"_index":1373,"title":{},"body":{"controllers/UploadController.html":{},"controllers/UserReportController.html":{}}}],["useinterceptors(cacheinterceptor",{"_index":1556,"title":{},"body":{"controllers/UserReportController.html":{}}}],["useinterceptors(cacheinterceptor)@cachekey(user_report_cache_key)@cachettl(300)@get",{"_index":1548,"title":{},"body":{"controllers/UserReportController.html":{}}}],["user",{"_index":40,"title":{"entities/User.html":{}},"body":{"classes/AddResetToken1665198934490.html":{},"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthGithubStrategy.html":{},"injectables/AuthService.html":{},"classes/CreateUserRoleDto.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"injectables/FederatedService.html":{},"classes/FileResponseDto.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"entities/Role.html":{},"guards/RolesGuard.html":{},"entities/User.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"classes/UserFactory.html":{},"interfaces/UserInterface.html":{},"modules/UserModule.html":{},"controllers/UserReportController.html":{},"entities/UserRole.html":{},"controllers/UserRoleController.html":{},"classes/UserRoleFactory.html":{},"modules/UserRoleModule.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{},"classes/initTables1664757497775.html":{},"miscellaneous/variables.html":{}}}],["user\"(\"id",{"_index":845,"title":{},"body":{"classes/Federated1665882607149.html":{},"classes/initTables1664757497775.html":{}}}],["user'})@apiokresponse({description",{"_index":1439,"title":{},"body":{"controllers/UserController.html":{}}}],["user'})@patch(':id",{"_index":1448,"title":{},"body":{"controllers/UserController.html":{}}}],["user.'})@isstring()@expose",{"_index":940,"title":{},"body":{"classes/FileResponseDto.html":{}}}],["user.active",{"_index":517,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.controller",{"_index":1530,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":316,"title":{},"body":{"controllers/AuthController.html":{},"controllers/AuthGithubController.html":{}}}],["user.decorator.ts",{"_index":1885,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":579,"title":{},"body":{"classes/AuthUpdatePasswordDto.html":{},"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":629,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:28",{"_index":639,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.email",{"_index":547,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserFactory.html":{}}}],["user.entity",{"_index":1512,"title":{},"body":{"classes/UserFactory.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{}}}],["user.factory",{"_index":1627,"title":{},"body":{"classes/UserSeeder.html":{}}}],["user.federated",{"_index":821,"title":{},"body":{"entities/Federated.html":{}}}],["user.firstname",{"_index":1513,"title":{},"body":{"classes/UserFactory.html":{}}}],["user.id",{"_index":525,"title":{},"body":{"injectables/AuthService.html":{},"classes/UserSubscriber.html":{}}}],["user.interface",{"_index":1476,"title":{},"body":{"interfaces/UserCreatableInterface.html":{}}}],["user.lastname",{"_index":1515,"title":{},"body":{"classes/UserFactory.html":{}}}],["user.module",{"_index":197,"title":{},"body":{"modules/AppModuleFixture.html":{}}}],["user.password",{"_index":1520,"title":{},"body":{"classes/UserFactory.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{}}}],["user.resettoken",{"_index":1698,"title":{},"body":{"injectables/UserService.html":{}}}],["user.resettokenexp",{"_index":1699,"title":{},"body":{"injectables/UserService.html":{}}}],["user.resettokenexp.toutcstring",{"_index":556,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.roles",{"_index":1214,"title":{},"body":{"entities/Role.html":{}}}],["user.salt",{"_index":1691,"title":{},"body":{"injectables/UserService.html":{},"classes/UserSubscriber.html":{}}}],["user.service",{"_index":1459,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/UserReportController.html":{}}}],["user.username",{"_index":1517,"title":{},"body":{"classes/UserFactory.html":{}}}],["user.userroles",{"_index":1564,"title":{},"body":{"entities/UserRole.html":{}}}],["user.userroles.length",{"_index":1785,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["user.userroles?.includes(role",{"_index":1340,"title":{},"body":{"guards/RolesGuard.html":{}}}],["user/dto/create",{"_index":578,"title":{},"body":{"classes/AuthUpdatePasswordDto.html":{}}}],["user/dto/user.dto",{"_index":311,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthEmailDto.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthService.html":{},"injectables/FederatedService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["user/user.entity",{"_index":509,"title":{},"body":{"injectables/AuthService.html":{},"entities/Federated.html":{},"entities/UserRole.html":{}}}],["user/user.module",{"_index":453,"title":{},"body":{"modules/AuthModule.html":{},"modules/FederatedModule.html":{}}}],["user/user.service",{"_index":408,"title":{},"body":{"injectables/AuthGithubStrategy.html":{},"injectables/AuthService.html":{},"injectables/FederatedService.html":{},"injectables/JwtStrategy.html":{}}}],["user?.[data",{"_index":2094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user?.email",{"_index":1765,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["user?.password",{"_index":1763,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["user?.resettoken",{"_index":551,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.resettokenexp",{"_index":553,"title":{},"body":{"injectables/AuthService.html":{}}}],["user?.username",{"_index":1693,"title":{},"body":{"injectables/UserService.html":{},"classes/UserSubscriber.html":{}}}],["user_001",{"_index":1541,"title":{},"body":{"classes/UserNotFoundException.html":{}}}],["user_create",{"_index":1438,"title":{},"body":{"controllers/UserController.html":{}}}],["user_delete",{"_index":1445,"title":{},"body":{"controllers/UserController.html":{}}}],["user_email_max_length",{"_index":1501,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_email_max_length})@isemail()@minlength(user_email_min_length)@maxlength(user_email_max_length)@expose",{"_index":1484,"title":{},"body":{"classes/UserDto.html":{}}}],["user_email_min_length",{"_index":1483,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_findall",{"_index":1441,"title":{},"body":{"controllers/UserController.html":{}}}],["user_findone",{"_index":1443,"title":{},"body":{"controllers/UserController.html":{}}}],["user_height_max",{"_index":1908,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_height_min",{"_index":1909,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_name_max_length",{"_index":1502,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_name_max_length})@isstring()@minlength(user_name_min_length)@maxlength(user_name_max_length)@expose",{"_index":1488,"title":{},"body":{"classes/UserDto.html":{}}}],["user_name_min_length",{"_index":1487,"title":{},"body":{"classes/UserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_password_min_length",{"_index":643,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_password_min_length})@isstrongpassword",{"_index":638,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user_report",{"_index":2185,"title":{},"body":{"miscellaneous/variables.html":{}}}],["user_report_cache_key",{"_index":1457,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserReportController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user_role",{"_index":2034,"title":{},"body":{"classes/initTables1664757497775.html":{}}}],["user_update",{"_index":1447,"title":{},"body":{"controllers/UserController.html":{}}}],["usercontroller",{"_index":1434,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usercreatableinterface",{"_index":630,"title":{"interfaces/UserCreatableInterface.html":{}},"body":{"classes/CreateUserDto.html":{},"interfaces/UserCreatableInterface.html":{},"coverage.html":{}}}],["userdto",{"_index":262,"title":{"classes/UserDto.html":{}},"body":{"controllers/AuthController.html":{},"classes/AuthEmailDto.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/FederatedService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"classes/UserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userfactory",{"_index":1509,"title":{"classes/UserFactory.html":{}},"body":{"classes/UserFactory.html":{},"classes/UserSeeder.html":{},"coverage.html":{}}}],["userid",{"_index":657,"title":{},"body":{"classes/CreateUserRoleDto.html":{},"entities/Federated.html":{},"classes/Federated1665882607149.html":{},"classes/FederatedCreateDto.html":{},"classes/FederatedDto.html":{},"interfaces/FederatedInterface.html":{},"injectables/FederatedService.html":{},"interfaces/UserOwnableInterface.html":{},"entities/UserRole.html":{},"interfaces/UserRoleCreatableInterface.html":{},"classes/UserRoleDto.html":{},"interfaces/UserRoleInterface.html":{},"classes/UserSeeder.html":{},"classes/initTables1664757497775.html":{}}}],["userinterface",{"_index":1430,"title":{"interfaces/UserInterface.html":{}},"body":{"entities/User.html":{},"interfaces/UserCreatableInterface.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"coverage.html":{}}}],["usermodule",{"_index":104,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"modules/AuthModule.html":{},"modules/FederatedModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":269,"title":{},"body":{"controllers/AuthController.html":{},"classes/AuthLoginDto.html":{},"classes/AuthLoginInterface.html":{},"injectables/AuthService.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserDto.html":{},"injectables/FederatedService.html":{},"classes/FileResponseDto.html":{},"interfaces/GitHubProfileInterface.html":{},"injectables/LocalStrategy.html":{},"classes/RoleDto.html":{},"classes/UpdateRoleDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{},"classes/initTables1664757497775.html":{}}}],["username'})@isstring",{"_index":430,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/CreateRoleDto.html":{},"classes/UpdateRoleDto.html":{}}}],["username'})@isstring()@expose",{"_index":1277,"title":{},"body":{"classes/RoleDto.html":{}}}],["usernotfoundexception",{"_index":1534,"title":{"classes/UserNotFoundException.html":{}},"body":{"classes/UserNotFoundException.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["userownableinterface",{"_index":1542,"title":{"interfaces/UserOwnableInterface.html":{}},"body":{"interfaces/UserOwnableInterface.html":{},"coverage.html":{}}}],["userreportcontroller",{"_index":1529,"title":{"controllers/UserReportController.html":{}},"body":{"modules/UserModule.html":{},"controllers/UserReportController.html":{},"coverage.html":{}}}],["userresult",{"_index":916,"title":{},"body":{"injectables/FederatedService.html":{}}}],["userresult.id",{"_index":919,"title":{},"body":{"injectables/FederatedService.html":{}}}],["userrole",{"_index":1203,"title":{"entities/UserRole.html":{}},"body":{"entities/Role.html":{},"entities/User.html":{},"entities/UserRole.html":{},"classes/UserRoleFactory.html":{},"modules/UserRoleModule.html":{},"injectables/UserRoleService.html":{},"classes/UserSeeder.html":{},"classes/UserSubscriber.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userrole.id",{"_index":1638,"title":{},"body":{"classes/UserSeeder.html":{}}}],["userrole.role",{"_index":1205,"title":{},"body":{"entities/Role.html":{}}}],["userrole.user",{"_index":1428,"title":{},"body":{"entities/User.html":{}}}],["userrolecontroller",{"_index":1569,"title":{"controllers/UserRoleController.html":{}},"body":{"controllers/UserRoleController.html":{},"modules/UserRoleModule.html":{},"coverage.html":{}}}],["userrolecreatableinterface",{"_index":1591,"title":{"interfaces/UserRoleCreatableInterface.html":{}},"body":{"interfaces/UserRoleCreatableInterface.html":{},"coverage.html":{}}}],["userroledto",{"_index":1494,"title":{"classes/UserRoleDto.html":{}},"body":{"classes/UserDto.html":{},"controllers/UserRoleController.html":{},"classes/UserRoleDto.html":{},"injectables/UserRoleService.html":{},"coverage.html":{}}}],["userrolefactory",{"_index":1597,"title":{"classes/UserRoleFactory.html":{}},"body":{"classes/UserRoleFactory.html":{},"classes/UserSeeder.html":{},"coverage.html":{}}}],["userroleinterface",{"_index":1522,"title":{"interfaces/UserRoleInterface.html":{}},"body":{"interfaces/UserInterface.html":{},"entities/UserRole.html":{},"classes/UserRoleDto.html":{},"interfaces/UserRoleInterface.html":{},"coverage.html":{}}}],["userrolemodule",{"_index":105,"title":{"modules/UserRoleModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserRoleModule.html":{},"modules.html":{},"overview.html":{}}}],["userroles",{"_index":1201,"title":{},"body":{"entities/Role.html":{},"entities/User.html":{},"classes/UserDto.html":{},"interfaces/UserInterface.html":{},"injectables/UserRoleService.html":{}}}],["userroles.role",{"_index":1684,"title":{},"body":{"injectables/UserService.html":{}}}],["userroleservice",{"_index":1584,"title":{"injectables/UserRoleService.html":{}},"body":{"controllers/UserRoleController.html":{},"modules/UserRoleModule.html":{},"injectables/UserRoleService.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":368,"title":{},"body":{"controllers/AuthGithubController.html":{},"entities/Role.html":{},"controllers/UserController.html":{},"controllers/UserReportController.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{}}}],["userseeder",{"_index":1620,"title":{"classes/UserSeeder.html":{}},"body":{"classes/UserSeeder.html":{},"coverage.html":{}}}],["userservice",{"_index":407,"title":{"injectables/UserService.html":{}},"body":{"injectables/AuthGithubStrategy.html":{},"injectables/AuthService.html":{},"injectables/FederatedService.html":{},"injectables/JwtStrategy.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"controllers/UserReportController.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersservice",{"_index":1462,"title":{},"body":{"controllers/UserController.html":{},"controllers/UserReportController.html":{}}}],["usersubscriber",{"_index":1709,"title":{"classes/UserSubscriber.html":{}},"body":{"classes/UserSubscriber.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userupdatableinterface",{"_index":1356,"title":{},"body":{"classes/UpdateUserDto.html":{},"miscellaneous/typealiases.html":{}}}],["useruserrole",{"_index":1574,"title":{},"body":{"controllers/UserRoleController.html":{}}}],["useruserrole'})@apiokresponse({description",{"_index":1573,"title":{},"body":{"controllers/UserRoleController.html":{}}}],["useruserrole_create",{"_index":1572,"title":{},"body":{"controllers/UserRoleController.html":{}}}],["useruserrole_delete",{"_index":1580,"title":{},"body":{"controllers/UserRoleController.html":{}}}],["useruserrole_findall",{"_index":1576,"title":{},"body":{"controllers/UserRoleController.html":{}}}],["useruserrole_findone",{"_index":1578,"title":{},"body":{"controllers/UserRoleController.html":{}}}],["useruserrolesservice",{"_index":1586,"title":{},"body":{"controllers/UserRoleController.html":{}}}],["userwithadminrole",{"_index":1631,"title":{},"body":{"classes/UserSeeder.html":{}}}],["userwithadminrole.id",{"_index":1635,"title":{},"body":{"classes/UserSeeder.html":{}}}],["userwithuserrole",{"_index":1633,"title":{},"body":{"classes/UserSeeder.html":{}}}],["userwithuserrole.id",{"_index":1637,"title":{},"body":{"classes/UserSeeder.html":{}}}],["using",{"_index":1127,"title":{},"body":{"injectables/LoggerSentryTransport.html":{}}}],["utils",{"_index":1382,"title":{},"body":{"controllers/UploadController.html":{},"modules/UploadModule.html":{}}}],["utils.ts",{"_index":1859,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["uuid",{"_index":43,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"controllers/AuthController.html":{},"classes/CommonEntityDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/Federated1665882607149.html":{},"classes/RoleDto.html":{},"entities/User.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"classes/initTables1664757497775.html":{}}}],["uuid'})@isuuid",{"_index":659,"title":{},"body":{"classes/CreateUserRoleDto.html":{},"classes/UserRoleDto.html":{}}}],["uuid_generate_v4",{"_index":835,"title":{},"body":{"classes/Federated1665882607149.html":{},"classes/initTables1664757497775.html":{}}}],["uuidparam",{"_index":308,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["uuidparam('resettoken",{"_index":349,"title":{},"body":{"controllers/AuthController.html":{}}}],["uuidparam(property",{"_index":1975,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valid",{"_index":283,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["validate",{"_index":392,"title":{},"body":{"injectables/AuthGithubStrategy.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UserService.html":{}}}],["validate(accesstoken",{"_index":396,"title":{},"body":{"injectables/AuthGithubStrategy.html":{}}}],["validate(payload",{"_index":1002,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":1017,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validatepassword",{"_index":667,"title":{},"body":{"classes/CryptUtil.html":{}}}],["validatepassword(passwordplain",{"_index":672,"title":{},"body":{"classes/CryptUtil.html":{}}}],["validateuser",{"_index":480,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":500,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuserpassword",{"_index":1643,"title":{},"body":{"injectables/UserService.html":{}}}],["validateuserpassword(username",{"_index":1668,"title":{},"body":{"injectables/UserService.html":{}}}],["validator",{"_index":435,"title":{},"body":{"classes/AuthLoginDto.html":{},"classes/AuthRefreshDto.html":{},"classes/CreateRoleDto.html":{},"classes/CreateUserRoleDto.html":{},"classes/EmailDto.html":{},"classes/FederatedDto.html":{},"classes/FileResponseDto.html":{},"classes/RoleDto.html":{},"classes/UpdateRoleDto.html":{},"classes/UserDto.html":{},"classes/UserRoleDto.html":{},"dependencies.html":{}}}],["value",{"_index":22,"title":{},"body":{"classes/AddResetToken1665198934490.html":{},"classes/Federated1665882607149.html":{},"interfaces/GitHubProfileInterface.html":{},"injectables/LoggerTransportService.html":{},"classes/UserDto.html":{},"miscellaneous/enumerations.html":{},"classes/initTables1664757497775.html":{},"miscellaneous/variables.html":{}}}],["value?.map((role",{"_index":1507,"title":{},"body":{"classes/UserDto.html":{}}}],["variable",{"_index":1841,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2061,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varying",{"_index":838,"title":{},"body":{"classes/Federated1665882607149.html":{},"classes/initTables1664757497775.html":{}}}],["verbose",{"_index":1140,"title":{},"body":{"injectables/LoggerService.html":{},"miscellaneous/variables.html":{}}}],["verbose(message",{"_index":1160,"title":{},"body":{"injectables/LoggerService.html":{}}}],["verified",{"_index":530,"title":{},"body":{"injectables/AuthService.html":{}}}],["verified.sub",{"_index":535,"title":{},"body":{"injectables/AuthService.html":{}}}],["version",{"_index":2052,"title":{},"body":{"properties.html":{}}}],["viewimage",{"_index":1362,"title":{},"body":{"controllers/UploadController.html":{}}}],["viewimage(@param('path",{"_index":1396,"title":{},"body":{"controllers/UploadController.html":{}}}],["viewimage(image",{"_index":1368,"title":{},"body":{"controllers/UploadController.html":{}}}],["violation",{"_index":1776,"title":{},"body":{"classes/UserSubscriber.html":{}}}],["void",{"_index":64,"title":{},"body":{"injectables/ApiKeyMiddleware.html":{},"modules/AppModule.html":{},"controllers/AuthGithubController.html":{},"injectables/AuthService.html":{},"classes/ErrorCodeExceptionFilter.html":{},"injectables/LoggerExceptionFilter.html":{},"injectables/LoggerRequestInterceptor.html":{},"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{}}}],["warn",{"_index":1141,"title":{},"body":{"injectables/LoggerService.html":{},"miscellaneous/variables.html":{}}}],["warn(message",{"_index":1162,"title":{},"body":{"injectables/LoggerService.html":{}}}],["warning",{"_index":2154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":1994,"title":{},"body":{"index.html":{}}}],["way",{"_index":1211,"title":{},"body":{"entities/Role.html":{}}}],["website",{"_index":2023,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":779,"title":{},"body":{"injectables/EmailService.html":{}}}],["without",{"_index":1685,"title":{},"body":{"injectables/UserService.html":{}}}],["yes",{"_index":1113,"title":{},"body":{"injectables/LoggerSentryTransport.html":{},"injectables/LoggerService.html":{},"interfaces/LoggerTransportInterface.html":{},"injectables/LoggerTransportService.html":{},"injectables/UserService.html":{},"classes/UserSubscriber.html":{}}}],["you'd",{"_index":2014,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"modules/AppModuleFixture.html":{},"modules/AuthModule.html":{},"modules/FederatedModule.html":{},"modules/HandlebarEmailModule.html":{},"modules/LoggerModule.html":{},"modules/RoleModule.html":{},"modules/UploadModule.html":{},"modules/UserModule.html":{},"modules/UserRoleModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/AddResetToken1665198934490.html":{"url":"classes/AddResetToken1665198934490.html","title":"class - AddResetToken1665198934490","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AddResetToken1665198934490\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1665198934490-AddResetToken.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'AddResetToken1665198934490'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1665198934490-AddResetToken.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1665198934490-AddResetToken.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1665198934490-AddResetToken.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class AddResetToken1665198934490 implements MigrationInterface {\n  name = 'AddResetToken1665198934490';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"user\" ADD \"resetToken\" uuid`);\n    await queryRunner.query(`ALTER TABLE \"user\" ADD \"resetTokenExp\" TIMESTAMP`);\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`ALTER TABLE \"user\" DROP COLUMN \"resetTokenExp\"`);\n    await queryRunner.query(`ALTER TABLE \"user\" DROP COLUMN \"resetToken\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ApiKeyMiddleware.html":{"url":"injectables/ApiKeyMiddleware.html","title":"injectable - ApiKeyMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ApiKeyMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/midleware/api-key.middleware.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        use\n                        \n                    \n                \n            \n            \n                \nuse(req: Request, res: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/midleware/api-key.middleware.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestMiddleware,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { Request, Response, NextFunction } from 'express';\nimport { API_KEY_HEADER } from '../../../common/constants';\n\n@Injectable()\nexport class ApiKeyMiddleware implements NestMiddleware {\n  use(req: Request, res: Response, next: NextFunction) {\n    if (req.headers[API_KEY_HEADER] !== 'API_KEY')\n      throw new UnauthorizedException('API KEY is missing');\n    next();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSampleConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSampleConfig\n                        \n                    \n                \n            \n            \n                \ngetSampleConfig()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getSampleConfig(): string {\n    return this.appService.getSampleConfig();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEmailModule\n\nEmailModule\n\nAppModule -->\n\nEmailModule->AppModule\n\n\n\n\n\nFederatedModule\n\nFederatedModule\n\nAppModule -->\n\nFederatedModule->AppModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nAppModule -->\n\nLoggerModule->AppModule\n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nUploadModule\n\nUploadModule\n\nAppModule -->\n\nUploadModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserRoleModule\n\nUserRoleModule\n\nAppModule -->\n\nUserRoleModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            EmailModule\n                        \n                        \n                            FederatedModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            RoleModule\n                        \n                        \n                            UploadModule\n                        \n                        \n                            UserModule\n                        \n                        \n                            UserRoleModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { join } from 'path';\n\nimport {\n  CacheModule,\n  MiddlewareConsumer,\n  Module,\n  NestModule,\n  RequestMethod,\n} from '@nestjs/common';\nimport { ConfigModule, ConfigType } from '@nestjs/config';\n\nimport { TypeOrmModule } from '@nestjs/typeorm';\n\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { jwtConfig } from './config/jwt.config';\nimport { loggerSentryConfig } from './config/logger-sentry.config';\nimport { loggerConfig } from './config/logger.config';\nimport sampleConfig from './config/sample.config';\nimport { typeormConfig } from './config/typeorm.config';\nimport { AuthModule } from './modules/auth/auth.module';\nimport { ApiKeyMiddleware } from './modules/auth/midleware/api-key.middleware';\nimport { LoggerModule } from './modules/logger/logger.module';\nimport { RoleModule } from './modules/role/role.module';\nimport { UploadModule } from './modules/upload/upload.module';\nimport { UserRoleModule } from './modules/user-role/user-role.module';\nimport { UserModule } from './modules/user/user.module';\nimport { ServeStaticModule } from '@nestjs/serve-static';\nimport { PUBLIC_FOLDER_NAME, PUBLIC_URL } from './common/constants';\nimport { EmailModule } from './modules/email/email.module';\nimport { emailConfig } from './config/email.config';\nimport { authConfig } from './config/auth.config';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { HandlebarEmailModule } from './modules/handlebar-email/handlebar-email.module';\nimport { HandlebarEmailService } from './modules/handlebar-email/handlebar-email.service';\nimport { githubConfig } from './config/github.config';\nimport { FederatedModule } from './modules/federated/federated.module';\n@Module({\n  imports: [\n    ServeStaticModule.forRoot({\n      rootPath: join(__dirname, '..', PUBLIC_FOLDER_NAME),\n      serveRoot: PUBLIC_URL,\n    }),\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [\n        typeormConfig,\n        jwtConfig,\n        loggerConfig,\n        loggerSentryConfig,\n        emailConfig,\n        authConfig,\n        githubConfig,\n        sampleConfig,\n      ],\n    }),\n    TypeOrmModule.forRootAsync({\n      inject: [typeormConfig.KEY],\n      useFactory: async (config: ConfigType) => config,\n    }),\n    CacheModule.register({\n      isGlobal: true,\n    }),\n    UserModule,\n    RoleModule,\n    UserRoleModule,\n    AuthModule,\n    LoggerModule,\n    UploadModule,\n    EmailModule.registerAsync({\n      imports: [HandlebarEmailModule],\n      inject: [HandlebarEmailService],\n      useFactory: (emailService: HandlebarEmailService) => {\n        return emailService;\n      },\n    }),\n    FederatedModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer\n      .apply(ApiKeyMiddleware)\n      .exclude('(.*)')\n      //.exclude('auth/(.*)')\n      .forRoutes({ path: '*', method: RequestMethod.ALL });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModuleFixture.html":{"url":"modules/AppModuleFixture.html","title":"module - AppModuleFixture","body":"\n                   \n\n\n\n\n    Modules\n    AppModuleFixture\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModuleFixture\n\n\n\ncluster_AppModuleFixture_imports\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nAppModuleFixture\n\nAppModuleFixture\n\nAppModuleFixture -->\n\nUserModule->AppModuleFixture\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/__fixtures__/app.module.fixture.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CacheModule, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { loggerConfig } from '../../../config/logger.config';\nimport { UserModule } from '../user.module';\nimport { ormConfig } from './ormconfig.fixture';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [loggerConfig],\n    }),\n    TypeOrmModule.forRoot(ormConfig),\n    CacheModule.register({\n      isGlobal: true,\n    }),\n    UserModule,\n  ],\n})\nexport class AppModuleFixture {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getSampleConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(dbConfig: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/app.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbConfig\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getSampleConfig\n                        \n                    \n                \n            \n            \n                \ngetSampleConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport {\n  //ConfigService,\n  ConfigType,\n} from '@nestjs/config';\nimport sampleConfig from './config/sample.config';\n\n// interface DatabaseConfig {\n//   host: string;\n//   port: number;\n// }\n\n@Injectable()\nexport class AppService {\n  constructor(\n    //  private configService: configService@Inject(sampleConfig.KEY)\n    @Inject(sampleConfig.KEY)\n    private dbConfig: ConfigType\n  ) {}\n\n  getSampleConfig(): string {\n    const port = this.dbConfig.port;\n    const host = this.dbConfig.host;\n    return `\n    Port: ${port}\n    Database Host: ${host}\n    `;\n  }\n\n  // getSampleConfig(): string {\n  //   const port = this.configService.get('port', { infer: true });\n  //   const host = this.configService.get('database');\n  //   return `\n  //   Port: ${port}\n  //   Database Host: ${host?.host}\n  //   `;\n  // }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AuthConfigInterface.html":{"url":"interfaces/AuthConfigInterface.html","title":"interface - AuthConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AuthConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/interfaces/auth-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            resetToken\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        resetToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resetToken:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface AuthConfigInterface {\n  resetToken: {\n    ttl: number;\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                forgotPassword\n                            \n                            \n                                getProfile\n                            \n                            \n                                login\n                            \n                            \n                                refresh\n                            \n                            \n                                resetUpdatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \nforgotPassword(authEmailDto: AuthEmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('forgot-password')@HttpCode(200)@ApiOperation({description: 'Generate a reset token and send email to the user, if email exists.', operationId: 'auth_resetPassword'})@ApiResponse({status: 200, description: 'Success is returned even if email not found for security reasons.'})@ApiResponse({status: 400, description: 'Bad request.'})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authEmailDto\n                                    \n                                                AuthEmailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getProfile\n                        \n                    \n                \n            \n            \n                \ngetProfile(user: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         UserDto\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(user: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBody({type: AuthLoginDto, description: 'Authenticate user with username and password'})@UseGuards(LocalAuthGuard)@Post('login')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        refresh\n                        \n                    \n                \n            \n            \n                \nrefresh(authRefreshDto: AuthRefreshDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Post('/refresh')@ApiOperation({operationId: 'auth_refresh'})@ApiCreatedResponse({type: AuthResponseDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authRefreshDto\n                                    \n                                                AuthRefreshDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetUpdatePassword\n                        \n                    \n                \n            \n            \n                \nresetUpdatePassword(resetToken: string, authUpdatePasswordDto: AuthUpdatePasswordDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':resetToken/reset-password')@ApiOperation({description: 'If resetToken exists and is still valid, update password.', operationId: 'auth_resetUpdatePassword'})@ApiParam({name: 'resetToken', description: 'The reset token', schema: undefined})@ApiResponse({status: 200, description: 'Password was changed successfully'})@ApiResponse({status: 400, description: 'Bad request.'})@ApiResponse({status: 404, description: 'Token does not exist or has expired.'})\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth.controller.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    resetToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authUpdatePasswordDto\n                                    \n                                                AuthUpdatePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiBody,\n  ApiCreatedResponse,\n  ApiOperation,\n  ApiParam,\n  ApiResponse,\n} from '@nestjs/swagger';\nimport { UUIDParam } from '../../common/decorators/is-uuid-param';\nimport { UserDto } from '../user/dto/user.dto';\nimport { AuthService } from './auth.service';\nimport { AuthUser } from './decorator/auth-user.decorator';\nimport { AuthEmailDto } from './dto/auth-email.dto';\nimport { AuthLoginDto } from './dto/auth-login-dto';\nimport { AuthRefreshDto } from './dto/auth-refresh.dto';\nimport { AuthResponseDto } from './dto/auth-response.dto';\nimport { AuthUpdatePasswordDto } from './dto/auth-update-password.dto';\nimport { JwtAuthGuard } from './guards/jwt-auth-guard';\nimport { LocalAuthGuard } from './guards/local-auth-guard';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private authService: AuthService) {}\n  @ApiBody({\n    type: AuthLoginDto,\n    description: 'Authenticate user with username and password',\n  })\n  @UseGuards(LocalAuthGuard)\n  @Post('login')\n  login(@AuthUser() user: UserDto): Promise {\n    return this.authService.jwtSign(user);\n  }\n\n  @ApiBearerAuth()\n  @Post('/refresh')\n  @ApiOperation({ operationId: 'auth_refresh' })\n  @ApiCreatedResponse({\n    type: AuthResponseDto,\n  })\n  refresh(@Body() authRefreshDto: AuthRefreshDto): Promise {\n    return this.authService.jwtRefresh(authRefreshDto);\n  }\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  getProfile(@AuthUser() user: UserDto) {\n    return user;\n  }\n\n  @Post('forgot-password')\n  @HttpCode(200)\n  @ApiOperation({\n    description:\n      'Generate a reset token and send email to the user, if email exists.',\n    operationId: 'auth_resetPassword',\n  })\n  @ApiResponse({\n    status: 200,\n    description:\n      'Success is returned even if email not found for security reasons.',\n  })\n  @ApiResponse({ status: 400, description: 'Bad request.' })\n  forgotPassword(@Body() authEmailDto: AuthEmailDto): Promise {\n    return this.authService.forgotPassword(authEmailDto.email);\n  }\n\n  @Patch(':resetToken/reset-password')\n  @ApiOperation({\n    description: 'If resetToken exists and is still valid, update password.',\n    operationId: 'auth_resetUpdatePassword',\n  })\n  @ApiParam({\n    name: 'resetToken',\n    description: 'The reset token',\n    schema: { type: 'string', format: 'uuid' },\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Password was changed successfully',\n  })\n  @ApiResponse({ status: 400, description: 'Bad request.' })\n  @ApiResponse({\n    status: 404,\n    description: 'Token does not exist or has expired.',\n  })\n  resetUpdatePassword(\n    @UUIDParam('resetToken') resetToken: string,\n    @Body() authUpdatePasswordDto: AuthUpdatePasswordDto\n  ): Promise {\n    return this.authService.updatePassword(resetToken, authUpdatePasswordDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthEmailDto.html":{"url":"classes/AuthEmailDto.html","title":"class - AuthEmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthEmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/auth-email.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { UserDto } from '../../user/dto/user.dto';\n\nexport class AuthEmailDto extends PickType(UserDto, ['email']) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthGithubController.html":{"url":"controllers/AuthGithubController.html","title":"controller - AuthGithubController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthGithubController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth-github.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth/github\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                get\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(user: UserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({type: AuthResponseDto, description: 'DTO containing an access token and a refresh token.'})@UseGuards(GithubAuthGuard)@Get('callback')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth-github.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOkResponse({description: 'Users are redirected to request their GitHub identity.'})@UseGuards(GithubAuthGuard)@Get('')\n                \n            \n\n            \n                \n                    Defined in src/modules/auth/auth-github.controller.ts:23\n                \n            \n\n\n            \n                \n                    Login\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Request, UseGuards } from '@nestjs/common';\nimport { ApiOkResponse, ApiTags } from '@nestjs/swagger';\nimport { instanceToPlain } from 'class-transformer';\nimport { UserDto } from '../user/dto/user.dto';\nimport { AuthService } from './auth.service';\nimport { AuthUser } from './decorator/auth-user.decorator';\nimport { AuthResponseDto } from './dto/auth-response.dto';\nimport { GithubAuthGuard } from './guards/github-auth-guard';\n\n@Controller('auth/github')\n@ApiTags('auth')\nexport class AuthGithubController {\n  constructor(private authService: AuthService) {}\n\n  /**\n   * Login\n   */\n  @ApiOkResponse({\n    description: 'Users are redirected to request their GitHub identity.',\n  })\n  @UseGuards(GithubAuthGuard)\n  @Get('')\n  login(): void {\n    // TODO: no code needed, Decorator will redirect to github\n    return;\n  }\n\n  @ApiOkResponse({\n    type: AuthResponseDto,\n    description: 'DTO containing an access token and a refresh token.',\n  })\n  @UseGuards(GithubAuthGuard)\n  @Get('callback')\n  async get(@AuthUser() user: UserDto) {\n    return this.authService.jwtSign(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGithubStrategy.html":{"url":"injectables/AuthGithubStrategy.html","title":"injectable - AuthGithubStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthGithubStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategies/github.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigType<>, federatedService: FederatedService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategies/github.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        federatedService\n                                                  \n                                                        \n                                                                        FederatedService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(accessToken: string, refreshToken: string, profile: GitHubProfileInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/strategies/github.strategy.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    accessToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    refreshToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    profile\n                                    \n                                                GitHubProfileInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { PassportStrategy } from '@nestjs/passport';\nimport Strategy from 'passport-github';\nimport { githubConfig } from '../../../config/github.config';\nimport { FederatedService } from '../../federated/federated.service';\nimport { UserService } from '../../user/user.service';\nimport { GitHubProfileInterface } from '../interfaces/github-profile.interface';\n\n@Injectable()\nexport class AuthGithubStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @Inject(githubConfig.KEY)\n    private config: ConfigType,\n    private federatedService: FederatedService\n  ) {\n    super({\n      clientID: config?.clientId,\n      clientSecret: config?.clientSecret,\n      callbackURL: config?.callbackURL,\n    });\n  }\n\n  async validate(\n    accessToken: string,\n    refreshToken: string,\n    profile: GitHubProfileInterface\n  ) {\n    const email = profile.emails[0].value;\n    if (!email)\n      throw new UnauthorizedException('Permission for email not allowed.');\n\n    const user = await this.federatedService.sign('github', email, profile.id);\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthLoginDto.html":{"url":"classes/AuthLoginDto.html","title":"class - AuthLoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthLoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/auth-login-dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            AuthLoginInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: 'string', description: 'Password'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/auth-login-dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: 'string', description: 'Username'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/auth-login-dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsString } from 'class-validator';\nimport { AuthLoginInterface } from '../interfaces/auth-login.interface';\n\n@Exclude()\nexport class AuthLoginDto implements AuthLoginInterface {\n  @Expose()\n  @ApiProperty({\n    type: 'string',\n    description: 'Username',\n  })\n  @IsString()\n  username!: string;\n\n  @Expose()\n  @ApiProperty({\n    type: 'string',\n    description: 'Password',\n  })\n  @IsString()\n  password!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthLoginInterface.html":{"url":"classes/AuthLoginInterface.html","title":"class - AuthLoginInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthLoginInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/interfaces/auth-login.interface.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                username\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/interfaces/auth-login.interface.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/interfaces/auth-login.interface.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class AuthLoginInterface {\n  username!: string;\n  password!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\n\nFederatedModule\n\nFederatedModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nFederatedModule->AuthModule\n\n\n\n\n\nAuthGithubStrategy\n\nAuthGithubStrategy\n\nAuthModule -->\n\nAuthGithubStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalAuthGuard\n\nLocalAuthGuard\n\nAuthModule -->\n\nLocalAuthGuard->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthGithubStrategy\n                        \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalAuthGuard\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                        \n                            AuthGithubController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FederatedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { forwardRef, Module } from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { jwtConfig } from '../../config/jwt.config';\nimport { EmailModule } from '../email/email.module';\nimport { FederatedModule } from '../federated/federated.module';\nimport { UserModule } from '../user/user.module';\nimport { AuthGithubController } from './auth-github.controller';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './auth.service';\nimport { LocalAuthGuard } from './guards/local-auth-guard';\nimport { AuthGithubStrategy } from './strategies/github.strategy';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { LocalStrategy } from './strategies/local-strategy';\n\n@Module({\n  imports: [\n    forwardRef(() => UserModule),\n    PassportModule,\n    JwtModule.registerAsync({\n      inject: [jwtConfig.KEY],\n      useFactory: async (config: ConfigType) => config,\n    }),\n    FederatedModule,\n  ],\n  controllers: [AuthController, AuthGithubController],\n  providers: [\n    AuthService,\n    LocalStrategy,\n    LocalAuthGuard,\n    JwtStrategy,\n    AuthGithubStrategy,\n  ],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthRefreshDto.html":{"url":"classes/AuthRefreshDto.html","title":"class - AuthRefreshDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthRefreshDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/auth-refresh.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@MinLength(1)@MaxLength(5000)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/auth-refresh.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, MinLength, MaxLength } from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class AuthRefreshDto {\n  @ApiProperty()\n  @IsString()\n  @MinLength(1)\n  @MaxLength(5000)\n  refreshToken!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthResponseDto.html":{"url":"classes/AuthResponseDto.html","title":"class - AuthResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/auth-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                accessToken\n                            \n                            \n                                    Readonly\n                                refreshToken\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(accessToken: string, refreshToken: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/dto/auth-response.dto.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        accessToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        refreshToken\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        accessToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/auth-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Readonly\n                        refreshToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/auth/dto/auth-response.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class AuthResponseDto {\n  @ApiProperty()\n  readonly accessToken: string;\n\n  @ApiProperty()\n  readonly refreshToken: string;\n\n  constructor(accessToken: string, refreshToken: string) {\n    this.accessToken = accessToken;\n    this.refreshToken = refreshToken;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                forgotPassword\n                            \n                            \n                                    Async\n                                jwtRefresh\n                            \n                            \n                                    Async\n                                jwtSign\n                            \n                            \n                                    Private\n                                ttlConfig\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Private\n                                    Async\n                                updateResetTokenIfValid\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_authConfig: ConfigType<>, _jwtConfig: ConfigType<>, userService: UserService, jwtService: JwtService, emailService: EmailService, loggerService: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/auth.service.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _authConfig\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _jwtConfig\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        emailService\n                                                  \n                                                        \n                                                                        EmailService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggerService\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        forgotPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    forgotPassword(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:92\n                \n            \n\n\n            \n                \n                    Update reset token and token exp and send a email if user is in our records\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        jwtRefresh\n                        \n                    \n                \n            \n            \n                \n                    \n                    jwtRefresh(authRefreshDto: AuthRefreshDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    authRefreshDto\n                                    \n                                                AuthRefreshDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        jwtSign\n                        \n                    \n                \n            \n            \n                \n                    \n                    jwtSign(user: UserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        ttlConfig\n                        \n                    \n                \n            \n            \n                \n                    \n                    ttlConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:120\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(token: string, authUpdatePasswordDto: AuthUpdatePasswordDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:152\n                \n            \n\n\n            \n                \n                    If token exists and is still valid, update password.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authUpdatePasswordDto\n                                    \n                                                AuthUpdatePasswordDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        updateResetTokenIfValid\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateResetTokenIfValid(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:133\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/auth.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { JwtService } from '@nestjs/jwt';\nimport { EMAIL_TEMPLATE_RESET_PASSWORD } from '../../common/constants';\nimport { authConfig } from '../../config/auth.config';\nimport { jwtConfig } from '../../config/jwt.config';\nimport { EmailService } from '../email/email.service';\nimport { EmailOptionsInterface } from '../email/interfaces/email-options.interface';\nimport { LoggerService } from '../logger/logger.service';\nimport { UserDto } from '../user/dto/user.dto';\nimport { User } from '../user/user.entity';\nimport { UserService } from '../user/user.service';\nimport { AuthRefreshDto } from './dto/auth-refresh.dto';\nimport { AuthResponseDto } from './dto/auth-response.dto';\nimport { AuthUpdatePasswordDto } from './dto/auth-update-password.dto';\nimport { JwtPayload } from './interfaces/jwt-payload.interface';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(authConfig.KEY)\n    private _authConfig: ConfigType,\n    @Inject(jwtConfig.KEY)\n    private _jwtConfig: ConfigType,\n    private userService: UserService,\n    private jwtService: JwtService,\n    private emailService: EmailService,\n    private loggerService: LoggerService\n  ) {\n    this.loggerService.setContext(AuthService.name);\n  }\n\n  async validateUser(\n    username: string,\n    password: string\n  ): Promise {\n    const user = await this.userService.validateUserPassword(\n      username,\n      password\n    );\n    if (!user || !user.active) null;\n    return user;\n  }\n\n  async jwtSign(user: UserDto): Promise {\n    const accessConfig = this._jwtConfig.access;\n    const refreshConfig = this._jwtConfig.refresh;\n\n    const payload: JwtPayload = { sub: user.id };\n\n    const accessToken = await this.jwtService.sign(\n      payload,\n      accessConfig?.signOptions\n    );\n\n    const refreshToken = await this.jwtService.sign(\n      payload,\n      refreshConfig?.signOptions\n    );\n\n    return new AuthResponseDto(accessToken, refreshToken);\n  }\n\n  async jwtRefresh(authRefreshDto: AuthRefreshDto): Promise {\n    const refreshConfig = this._jwtConfig.refresh;\n\n    const verified = await this.jwtService.verifyAsync(\n      authRefreshDto.refreshToken,\n      refreshConfig?.verifyOptions\n    );\n\n    if (verified) {\n      const id = verified.sub;\n      const user = await this.userService.findOne(id);\n      return this.jwtSign(user);\n    }\n\n    throw new UnauthorizedException();\n  }\n\n  /**\n   * Update reset token and token exp and send a email if user is in our records\n   *\n   * @param authResetPasswordDto\n   * @return void\n   */\n  async forgotPassword(email: string): Promise {\n    // update user if it does exists and return it\n    const user = await this.updateResetTokenIfValid(email);\n\n    if (!user) return;\n\n    const template = EMAIL_TEMPLATE_RESET_PASSWORD;\n\n    // build the object with data information to be populated in the email template\n    const emailOptions: EmailOptionsInterface = {\n      to: user.email,\n      subject: 'Reset Password',\n      template: template,\n      context: {\n        tokenUrl: `${user?.resetToken}`,\n        tokenExp:\n          user?.resetTokenExp instanceof Date\n            ? user.resetTokenExp.toUTCString()\n            : '',\n      },\n    };\n\n    await this.emailService.send(emailOptions);\n\n    // don't return anything for security reasons\n    return;\n  }\n\n  private ttlConfig() {\n    // get the ttl and nodemailer configs\n    const ttl = this._authConfig.resetToken.ttl;\n\n    if (!ttl) {\n      throw new InternalServerErrorException(\n        'Service unavailable, reset ttl not configured properly!'\n      );\n    }\n\n    return ttl;\n  }\n\n  private async updateResetTokenIfValid(email: string): Promise {\n    // get the ttl and nodemailer configs\n    const ttl = this.ttlConfig();\n\n    // update user if it does exists and return it\n    const user = await this.userService.updateResetTokenByEmail(email, ttl);\n\n    // if no user or no user email, fail silently\n    if (!user || !user.email) {\n      this.loggerService.debug('user with invalid token or with no email');\n      return null;\n    }\n\n    return user;\n  }\n\n  /**\n   * If token exists and is still valid, update password.\n   */\n  async updatePassword(\n    token: string,\n    authUpdatePasswordDto: AuthUpdatePasswordDto\n  ): Promise {\n    // call user service\n    await this.userService.updatePassword(\n      token,\n      authUpdatePasswordDto.password\n    );\n    // don't return anything\n    return;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AuthUpdatePasswordDto.html":{"url":"classes/AuthUpdatePasswordDto.html","title":"class - AuthUpdatePasswordDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AuthUpdatePasswordDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/dto/auth-update-password.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PickType } from '@nestjs/swagger';\nimport { CreateUserDto } from '../../user/dto/create-user.dto';\n\nexport class AuthUpdatePasswordDto extends PickType(CreateUserDto, [\n  'password',\n]) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/AwsS3ConfigInterface.html":{"url":"interfaces/AwsS3ConfigInterface.html","title":"interface - AwsS3ConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  AwsS3ConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/upload/interfaces/aws-s3-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accessKeyId\n                                        \n                                \n                                \n                                        \n                                            bucket\n                                        \n                                \n                                \n                                        \n                                            secretAccessKey\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accessKeyId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accessKeyId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        bucket\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bucket:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secretAccessKey\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secretAccessKey:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export default interface AwsS3ConfigInterface {\n  accessKeyId: string;\n  secretAccessKey: string;\n  bucket: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonEntity.html":{"url":"classes/CommonEntity.html","title":"class - CommonEntity","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/common.entity.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            CommonEntityInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/common.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/common.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()@ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/common.entity.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  CreateDateColumn,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { CommonEntityInterface } from './interfaces/common-entity.interface';\n\nexport abstract class CommonEntity implements CommonEntityInterface {\n  @PrimaryGeneratedColumn('uuid')\n  @ApiProperty()\n  id!: string;\n\n  @CreateDateColumn()\n  @ApiProperty()\n  createdAt!: Date;\n\n  @UpdateDateColumn()\n  @ApiProperty()\n  updatedAt!: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonEntityDto.html":{"url":"classes/CommonEntityDto.html","title":"class - CommonEntityDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonEntityDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/common-entity.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', title: 'Created At', description: 'The date and time at which the resource was created.'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/common-entity.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'uuid', title: 'Id', description: 'The primary key of the resource.'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/common-entity.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', title: 'Updated At', description: 'The date and time at which the resource was last updated.'})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/common-entity.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\n\n@Exclude()\nexport class CommonEntityDto {\n  @ApiProperty({\n    type: 'string',\n    format: 'uuid',\n    title: 'Id',\n    description: 'The primary key of the resource.',\n  })\n  @Expose()\n  id!: string;\n\n  @ApiProperty({\n    type: 'string',\n    format: 'date-time',\n    title: 'Created At',\n    description: 'The date and time at which the resource was created.',\n  })\n  @Expose()\n  createdAt!: Date;\n\n  @ApiProperty({\n    type: 'string',\n    format: 'date-time',\n    title: 'Updated At',\n    description: 'The date and time at which the resource was last updated.',\n  })\n  @Expose()\n  updatedAt!: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonEntityInterface.html":{"url":"interfaces/CommonEntityInterface.html","title":"interface - CommonEntityInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CommonEntityInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/common-entity.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            updatedAt\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface CommonEntityInterface {\n  id: string;\n  createdAt: Date;\n  updatedAt: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateRoleDto.html":{"url":"classes/CreateRoleDto.html","title":"class - CreateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/dto/create-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', description: 'Username'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/create-role.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class CreateRoleDto {\n  @ApiProperty({\n    type: 'string',\n    description: 'Username',\n  })\n  @IsString()\n  name!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/create-user.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            UserCreatableInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({title: 'Password', description: 'A Strong password that must contain at least one number, one capital letter and one lowercase letter', minLength: USER_PASSWORD_MIN_LENGTH})@IsStrongPassword()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  ApiProperty,\n  IntersectionType,\n  PartialType,\n  PickType,\n} from '@nestjs/swagger';\nimport { IsStrongPassword } from '../../../common/decorators/is-strong-password';\nimport { UserCreatableInterface } from '../interfaces';\nimport { USER_PASSWORD_MIN_LENGTH } from '../constant/user.constants';\nimport { UserDto } from './user.dto';\n\nexport class CreateUserDto\n  extends IntersectionType(\n    // PickType will pick properties as mandatory\n    PickType(UserDto, ['username', 'firstName', 'lastName', 'email']),\n    // partial Type will take properties as optional\n    PartialType(PickType(UserDto, ['active']))\n  )\n  implements UserCreatableInterface\n{\n  @ApiProperty({\n    title: 'Password',\n    description:\n      'A Strong password that must contain at least one number, one capital letter and one lowercase letter',\n    minLength: USER_PASSWORD_MIN_LENGTH,\n  })\n  @IsStrongPassword()\n  password!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserRoleDto.html":{"url":"classes/CreateUserRoleDto.html","title":"class - CreateUserRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user-role/dto/create-user-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                roleId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        roleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({format: 'uuid'})@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user-role/dto/create-user-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({format: 'uuid'})@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user-role/dto/create-user-role.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsUUID } from 'class-validator';\n\nexport class CreateUserRoleDto {\n  @ApiProperty({ format: 'uuid' })\n  @IsUUID()\n  userId!: string;\n\n  @ApiProperty({ format: 'uuid' })\n  @IsUUID()\n  roleId!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CryptUtil.html":{"url":"classes/CryptUtil.html","title":"class - CryptUtil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CryptUtil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/utils/crypt.util.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Async\n                                generateSalt\n                            \n                            \n                                    Static\n                                    Async\n                                hashPassword\n                            \n                            \n                                    Static\n                                    Async\n                                validatePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        generateSalt\n                        \n                    \n                \n            \n            \n                \n                    \n                    generateSalt()\n                \n            \n\n\n            \n                \n                    Defined in src/common/utils/crypt.util.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        hashPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    hashPassword(password: string, salt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/utils/crypt.util.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    salt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        Async\n                        validatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    validatePassword(passwordPlain: string, passwordCrypt: string, salt: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/utils/crypt.util.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    passwordPlain\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    passwordCrypt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    salt\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as bcrypt from 'bcrypt';\n\nexport abstract class CryptUtil {\n  static async generateSalt(): Promise {\n    return bcrypt.genSalt();\n  }\n\n  static async hashPassword(password: string, salt: string): Promise {\n    return bcrypt.hash(password, salt);\n  }\n\n  static async validatePassword(\n    passwordPlain: string,\n    passwordCrypt: string,\n    salt: string\n  ): Promise {\n    const hash = await this.hashPassword(passwordPlain, salt);\n    return hash === passwordCrypt;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/EmailController.html":{"url":"controllers/EmailController.html","title":"controller - EmailController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  EmailController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/email/email.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                email\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                sendEmail\n                            \n                            \n                                    Async\n                                sendEmailTemplate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmail()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({operationId: 'send_email', description: 'Endpoint to send a new email'})@Post()\n                \n            \n\n            \n                \n                    Defined in src/modules/email/email.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmailTemplate\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailTemplate(dto: EmailDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({operationId: 'send_email_with_template', description: 'Endpoint send a test email'})@Post('template')\n                \n            \n\n            \n                \n                    Defined in src/modules/email/email.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                EmailDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { EmailDto } from './dto/email.dto';\nimport { EmailService } from './email.service';\n\n@ApiTags('Email')\n@Controller('email')\nexport class EmailController {\n  constructor(private emailService: EmailService) {}\n\n  @ApiOperation({\n    operationId: 'send_email',\n    description: 'Endpoint to send a new email',\n  })\n  @Post()\n  async sendEmail() {\n    return this.emailService.sendTestEmail();\n  }\n\n  @ApiOperation({\n    operationId: 'send_email_with_template',\n    description: 'Endpoint send a test email',\n  })\n  @Post('template')\n  async sendEmailTemplate(@Body() dto: EmailDto) {\n    return this.emailService.sendEmailWithTemplate(dto.to, dto.firstName);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/EmailDto.html":{"url":"classes/EmailDto.html","title":"class - EmailDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  EmailDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/email/dto/email.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/email/dto/email.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@Expose()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/email/dto/email.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose } from 'class-transformer';\nimport { IsString } from 'class-validator';\n\n@Exclude()\nexport class EmailDto {\n  @ApiProperty()\n  @Expose()\n  @IsString()\n  to!: string;\n\n  @ApiProperty()\n  @Expose()\n  @IsString()\n  firstName!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/EmailModule.html":{"url":"modules/EmailModule.html","title":"module - EmailModule","body":"\n                   \n\n\n\n\n    Modules\n    EmailModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/email/email.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        registerAsync\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerAsync(options: EmailModuleOptionsInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/email/email.module.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                EmailModuleOptionsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Global, Module } from '@nestjs/common';\nimport { EmailService } from './email.service';\nimport { EmailController } from './email.controller';\nimport { EmailModuleOptionsInterface } from './interfaces/email-module-options.interface';\nimport { SEND_EMAIL_TOKEN } from './constants';\n///\n@Global()\n@Module({})\nexport class EmailModule {\n  static registerAsync(options: EmailModuleOptionsInterface): DynamicModule {\n    return {\n      module: EmailModule,\n      imports: options.imports ?? [],\n      providers: [\n        EmailService,\n        {\n          provide: SEND_EMAIL_TOKEN,\n          inject: options.inject ?? [],\n          useFactory: options.useFactory,\n        },\n      ],\n      controllers: [EmailController],\n      exports: [EmailService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmailModuleOptionsInterface.html":{"url":"interfaces/EmailModuleOptionsInterface.html","title":"interface - EmailModuleOptionsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmailModuleOptionsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/email/interfaces/email-module-options.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            useFactory\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        useFactory\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        useFactory:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { FactoryProvider, ModuleMetadata } from '@nestjs/common';\nimport { SendEmailServiceInterface } from './send-email-service.interface';\n\n//sendEmailService: SendEmailServiceInterface;\nexport interface EmailModuleOptionsInterface\n  extends Pick,\n    Partial, 'inject'>> {\n  useFactory: (...args: any[]) => SendEmailServiceInterface;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EmailOptionsInterface.html":{"url":"interfaces/EmailOptionsInterface.html","title":"interface - EmailOptionsInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EmailOptionsInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/email/interfaces/email-options.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            bcc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cc\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            context\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            from\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            html\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            inReplyTo\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            replyTo\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            subject\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            template\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            text\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            to\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        bcc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        bcc:     string | Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cc\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cc:     string | Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        context\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        context:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        from\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        from:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        html\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        html:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        inReplyTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        inReplyTo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        replyTo\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        replyTo:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        subject\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        subject:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        template\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        template:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        text\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        text:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        to\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        to:     string | Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface EmailOptionsInterface {\n  to?: string | Array;\n  cc?: string | Array;\n  bcc?: string | Array;\n  replyTo?: string;\n  inReplyTo?: string;\n  from?: string;\n  subject?: string;\n  text?: string;\n  html?: string;\n  context?: {\n    [name: string]: any;\n  };\n  template?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EmailService.html":{"url":"injectables/EmailService.html","title":"injectable - EmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/email/email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                            \n                                    Async\n                                sendEmailWithTemplate\n                            \n                            \n                                    Async\n                                sendTestEmail\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sendEmailService: SendEmailServiceInterface, loggerService: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/email/email.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sendEmailService\n                                                  \n                                                        \n                                                                        SendEmailServiceInterface\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggerService\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(emailOptions: EmailOptionsInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/email/email.service.ts:24\n                \n            \n\n\n            \n                \n                    logic to send email based on options\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emailOptions\n                                    \n                                                EmailOptionsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendEmailWithTemplate\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendEmailWithTemplate(to: string, firstName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/email/email.service.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    to\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    firstName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sendTestEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    sendTestEmail()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/email/email.service.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { LoggerService } from '../logger/logger.service';\nimport { SEND_EMAIL_TOKEN, TEMPLATE_TEST } from './constants';\nimport { EmailOptionsInterface } from './interfaces/email-options.interface';\nimport { SendEmailServiceInterface } from './interfaces/send-email-service.interface';\n\n@Injectable()\nexport class EmailService {\n  constructor(\n    @Inject(SEND_EMAIL_TOKEN)\n    private readonly sendEmailService: SendEmailServiceInterface,\n    private readonly loggerService: LoggerService\n  ) {}\n\n  /**\n   * logic to send email based on options\n   *\n   * @param emailOptions\n   */\n  async send(emailOptions: EmailOptionsInterface) {\n    try {\n      const result = await this.sendEmailService.send({\n        from: 'noreply@gmail.com',\n        ...emailOptions,\n      });\n      console.log(result);\n      return result;\n    } catch (e: any) {\n      this.loggerService.error(e?.message, EmailService.name);\n      throw new InternalServerErrorException(\n        'Fatal error while trying to send email.'\n      );\n    }\n  }\n\n  async sendTestEmail() {\n    return await this.send({\n      to: 'nestjs-devpro-course@dispostable.com', // list of receivers\n      from: 'noreply@dispostable.com', // sender address\n      subject: 'Testing Nest MailerModule ✔', // Subject line\n      text: 'welcome', // plaintext body\n      html: 'welcome', // HTML body content\n    });\n  }\n\n  async sendEmailWithTemplate(to: string, firstName: string) {\n    return await this.send({\n      to: to, // list of receivers\n      template: TEMPLATE_TEST,\n      context: {\n        firstName: `${firstName}`,\n      },\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ErrorCodeExceptionFilter.html":{"url":"classes/ErrorCodeExceptionFilter.html","title":"class - ErrorCodeExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ErrorCodeExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/error-code-exception.filter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/error-code-exception.filter.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Catch, ArgumentsHost, HttpException } from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\nimport { Response } from 'express';\nimport { ErrorCodeExceptionInterface } from '../interfaces/error-code-exception.interface';\n\n@Catch()\nexport class ErrorCodeExceptionFilter extends BaseExceptionFilter {\n  catch(\n    exception: HttpException & ErrorCodeExceptionInterface,\n    host: ArgumentsHost\n  ) {\n    const ctx = host.switchToHttp();\n    const response = ctx.getResponse();\n    const status = exception?.getStatus ? exception?.getStatus() : 500;\n\n    const errorMessage = exception['response']?.message ?? exception?.message;\n\n    response.status(status).json({\n      errorCode: exception?.errorCode,\n      statusCode: status,\n      message: errorMessage,\n      timestamp: new Date().toISOString(),\n    });\n    //super.catch(exception, host);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ErrorCodeExceptionInterface.html":{"url":"interfaces/ErrorCodeExceptionInterface.html","title":"interface - ErrorCodeExceptionInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ErrorCodeExceptionInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/error-code-exception.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            errorCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        errorCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        errorCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ErrorCodeExceptionInterface {\n  errorCode: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Federated.html":{"url":"entities/Federated.html","title":"entity - Federated","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Federated\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/federated/federated.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                provider\n                            \n                            \n                                providerRef\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/federated/federated.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        providerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/federated/federated.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.federated)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/federated/federated.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/federated/federated.entity.ts:15\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { CommonEntity } from '../../common/common.entity';\nimport { Column, Entity, ManyToOne } from 'typeorm';\nimport { User } from '../user/user.entity';\nimport { FederatedInterface } from './interfaces';\n\n@Entity()\nexport class Federated extends CommonEntity implements FederatedInterface {\n  @Column()\n  provider!: string;\n\n  @Column()\n  providerRef!: string;\n\n  @Column()\n  userId!: string;\n\n  @ManyToOne(() => User, user => user.federated)\n  user!: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Federated1665882607149.html":{"url":"classes/Federated1665882607149.html","title":"class - Federated1665882607149","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Federated1665882607149\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1665882607149-Federated.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Federated1665882607149'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1665882607149-Federated.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1665882607149-Federated.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1665882607149-Federated.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class Federated1665882607149 implements MigrationInterface {\n  name = 'Federated1665882607149';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"federated\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"createdAt\" TIMESTAMP NOT NULL DEFAULT now(), \"updatedAt\" TIMESTAMP NOT NULL DEFAULT now(), \"provider\" character varying NOT NULL, \"providerRef\" character varying NOT NULL, \"userId\" uuid NOT NULL, CONSTRAINT \"PK_6037a20d155c89a0dec47ead84e\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user\" ALTER COLUMN \"email\" DROP NOT NULL`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"federated\" ADD CONSTRAINT \"FK_216af9ffcc64c2529a9db18b52c\" FOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"federated\" DROP CONSTRAINT \"FK_216af9ffcc64c2529a9db18b52c\"`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user\" ALTER COLUMN \"email\" SET NOT NULL`\n    );\n    await queryRunner.query(`DROP TABLE \"federated\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FederatedCreateDto.html":{"url":"classes/FederatedCreateDto.html","title":"class - FederatedCreateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FederatedCreateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/federated/dto/create-federated.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Federated Create DTO\n\n            \n\n\n            \n                Implements\n            \n            \n                            FederatedCreatableInterface\n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from 'class-transformer';\nimport { PickType } from '@nestjs/swagger';\nimport { FederatedDto } from './federated.dto';\nimport { FederatedCreatableInterface } from '../interfaces/federated-creatable.interface';\n\n/**\n * Federated Create DTO\n */\n@Exclude()\nexport class FederatedCreateDto\n  extends PickType(FederatedDto, ['provider', 'providerRef', 'userId'])\n  implements FederatedCreatableInterface {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FederatedDto.html":{"url":"classes/FederatedDto.html","title":"class - FederatedDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FederatedDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/federated/dto/federated.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Federated DTO\n\n            \n\n            \n                Extends\n            \n            \n                        CommonEntity\n            \n\n            \n                Implements\n            \n            \n                            FederatedInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                provider\n                            \n                            \n                                providerRef\n                            \n                            \n                                userId\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        provider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: 'string', description: 'provider of the federated'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/federated/dto/federated.dto.ts:21\n                        \n                    \n\n            \n                \n                    provider\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        providerRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: 'string', description: 'subject of the federated'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/federated/dto/federated.dto.ts:32\n                        \n                    \n\n            \n                \n                    subject\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()@ApiProperty({type: 'string', description: 'user of the federated'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/federated/dto/federated.dto.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CommonEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntity:16\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CommonEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntity:12\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn()@ApiProperty()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CommonEntity\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntity:20\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString } from 'class-validator';\nimport { Exclude, Expose } from 'class-transformer';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { FederatedInterface } from '../interfaces';\nimport { CommonEntity } from '../../../common/common.entity';\n\n/**\n * Federated DTO\n */\n@Exclude()\nexport class FederatedDto extends CommonEntity implements FederatedInterface {\n  /**\n   * provider\n   */\n  @Expose()\n  @ApiProperty({\n    type: 'string',\n    description: 'provider of the federated',\n  })\n  @IsString()\n  provider!: string;\n\n  /**\n   * subject\n   */\n  @Expose()\n  @ApiProperty({\n    type: 'string',\n    description: 'subject of the federated',\n  })\n  @IsString()\n  providerRef!: string;\n\n  @Expose()\n  @ApiProperty({\n    type: 'string',\n    description: 'user of the federated',\n  })\n  @IsString()\n  userId!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FederatedInterface.html":{"url":"interfaces/FederatedInterface.html","title":"interface - FederatedInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FederatedInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/federated/interfaces/federated.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CommonEntityInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            provider\n                                        \n                                \n                                \n                                        \n                                            providerRef\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        provider\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        provider:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Provider name (github, facebook, etc)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        providerRef\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        providerRef:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The reference identification for provider\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The user federated will be associated to\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { CommonEntityInterface } from '../../../common/interfaces';\n\nexport interface FederatedInterface extends CommonEntityInterface {\n  /**\n   * Provider name (github, facebook, etc)\n   */\n  provider: string;\n\n  /**\n   * The reference identification for provider\n   */\n  providerRef: string;\n\n  /**\n   * The user federated will be associated to\n   */\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FederatedModule.html":{"url":"modules/FederatedModule.html","title":"module - FederatedModule","body":"\n                   \n\n\n\n\n    Modules\n    FederatedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_FederatedModule\n\n\n\ncluster_FederatedModule_imports\n\n\n\ncluster_FederatedModule_exports\n\n\n\ncluster_FederatedModule_providers\n\n\n\n\nUserModule\n\nUserModule\n\n\n\nFederatedModule\n\nFederatedModule\n\nFederatedModule -->\n\nUserModule->FederatedModule\n\n\n\n\n\nFederatedService \n\nFederatedService \n\nFederatedService  -->\n\nFederatedModule->FederatedService \n\n\n\n\n\nFederatedService\n\nFederatedService\n\nFederatedModule -->\n\nFederatedService->FederatedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/federated/federated.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            FederatedService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UserModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FederatedService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { FederatedService } from './federated.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Federated } from './federated.entity';\nimport { UserModule } from '../user/user.module';\n\n@Module({\n  imports: [UserModule, TypeOrmModule.forFeature([Federated])],\n  controllers: [],\n  providers: [FederatedService],\n  exports: [FederatedService],\n})\nexport class FederatedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FederatedService.html":{"url":"injectables/FederatedService.html","title":"injectable - FederatedService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FederatedService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/federated/federated.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Async\n                                createFederated\n                            \n                            \n                                    Protected\n                                    Async\n                                createUser\n                            \n                            \n                                    Protected\n                                    Async\n                                createUserWithFederated\n                            \n                            \n                                    Async\n                                exists\n                            \n                            \n                                    Async\n                                sign\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/federated/federated.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        createFederated\n                        \n                    \n                \n            \n            \n                \n                    \n                    createFederated(provider: string, providerRef: string, userId: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/federated/federated.service.ts:72\n                \n            \n\n\n            \n                \n                    Create federated credentials\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    providerRef\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(email: string, username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/federated/federated.service.ts:90\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        createUserWithFederated\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUserWithFederated(provider: string, email: string, providerRef: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/federated/federated.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    providerRef\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        exists\n                        \n                    \n                \n            \n            \n                \n                    \n                    exists(provider: string, providerRef: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/federated/federated.service.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    providerRef\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        sign\n                        \n                    \n                \n            \n            \n                \n                    \n                    sign(provider: string, email: string, providerRef: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/federated/federated.service.ts:27\n                \n            \n\n\n            \n                \n                    Sign in with federated creating a user if it doesn't exist\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    provider\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nprovider name (github, facebook, google)\n\n\n                                    \n                                \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        email account\n\n                                    \n                                \n                                \n                                    providerRef\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nsubject (user id/ profile id from provider)\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        email - email of user\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Repository } from 'typeorm';\n\nimport { Injectable, InternalServerErrorException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { Federated } from './federated.entity';\nimport { UserService } from '../user/user.service';\nimport { UserDto } from '../user/dto/user.dto';\n\n@Injectable()\nexport class FederatedService {\n  constructor(\n    @InjectRepository(Federated)\n    private repo: Repository,\n    private userService: UserService\n  ) {}\n\n  /**\n   * Sign in with federated creating a user if it doesn't exist\n   * @param provider - provider name (github, facebook, google)\n   * @param email email account\n   * @param providerRef - subject (user id/ profile id from provider)\n   * @returns email - email of user\n   *\n   * @return FederatedCredentialsInterface - user information\n   */\n  async sign(\n    provider: string,\n    email: string,\n    providerRef: string\n  ): Promise {\n    // check if Federated Exists\n    const federated = await this.exists(provider, providerRef);\n\n    // if there is no federated user, create one\n    if (!federated) {\n      return await this.createUserWithFederated(provider, email, providerRef);\n    } else {\n      // if there is a user, return it\n      const user = await this.userService.findOne(federated.userId);\n\n      if (!user)\n        throw new InternalServerErrorException(\n          'An account associated with github was not found'\n        );\n\n      return user;\n    }\n  }\n\n  protected async createUserWithFederated(\n    provider: string,\n    email: string,\n    providerRef: string\n  ): Promise {\n    // Check if user exists by email\n    const user = await this.userService.findByEmail(email);\n\n    const userResult = user ? user : await this.createUser(email, email);\n\n    // Create federated\n    await this.createFederated(provider, providerRef, userResult.id);\n\n    return userResult;\n  }\n\n  /**\n   * Create federated credentials\n   *\n   * @private\n   */\n  private async createFederated(\n    provider: string,\n    providerRef: string,\n    userId: string\n  ): Promise {\n    try {\n      const federated = await this.repo.save({\n        provider,\n        providerRef,\n        userId,\n      });\n\n      return federated;\n    } catch (e) {\n      throw new InternalServerErrorException(e);\n    }\n  }\n\n  protected async createUser(\n    email: string,\n    username: string\n  ): Promise {\n    try {\n      const newUser = await this.userService.create({\n        email,\n        username,\n        password: 'Test1234',\n      });\n\n      return newUser;\n    } catch (e) {\n      throw new InternalServerErrorException(e);\n    }\n  }\n\n  async exists(provider: string, providerRef: string) {\n    try {\n      return this.repo.findOne({\n        where: {\n          provider,\n          providerRef,\n        },\n      });\n    } catch (e) {\n      throw new InternalServerErrorException(e);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FederatedUpdateDto.html":{"url":"classes/FederatedUpdateDto.html","title":"class - FederatedUpdateDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FederatedUpdateDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/federated/dto/update-federated.dto.ts\n        \n\n\n            \n                Description\n            \n            \n                Federated Update DTO\n\n            \n\n\n            \n                Implements\n            \n            \n                            FederatedUpdatableInterface\n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude } from 'class-transformer';\nimport { PickType } from '@nestjs/swagger';\n\nimport { FederatedDto } from './federated.dto';\nimport { FederatedUpdatableInterface } from '../interfaces/federated-updatable.interface';\n\n/**\n * Federated Update DTO\n */\n@Exclude()\nexport class FederatedUpdateDto\n  extends PickType(FederatedDto, ['provider', 'providerRef'] as const)\n  implements FederatedUpdatableInterface {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FileResponseDto.html":{"url":"classes/FileResponseDto.html","title":"class - FileResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FileResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/upload/dto/file-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filename\n                            \n                            \n                                originalname\n                            \n                            \n                                    Optional\n                                url\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_originalname: string, _filename: string, _url: string)\n                    \n                \n                        \n                            \n                                Defined in src/modules/upload/dto/file-response.dto.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _originalname\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _filename\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _url\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({title: 'File name', description: 'The username of user.'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/upload/dto/file-response.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        originalname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({title: 'Original file name', description: 'The username of user.'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/upload/dto/file-response.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/upload/dto/file-response.dto.ts:30\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Exclude, Expose, Transform } from 'class-transformer';\nimport { IsString } from 'class-validator';\nimport { serverConfig } from '../../../config/server.config';\n\n@Exclude()\nexport class FileResponseDto {\n  constructor(_originalname: string, _filename: string, _url: string) {\n    this.filename = _filename;\n    this.originalname = _originalname;\n    this.url = _url;\n  }\n  @ApiProperty({\n    title: 'Original file name',\n    description: 'The username of user.',\n  })\n  @IsString()\n  @Expose()\n  originalname!: string;\n\n  @ApiProperty({\n    title: 'File name',\n    description: 'The username of user.',\n  })\n  @IsString()\n  @Expose()\n  filename!: string;\n\n  @Expose()\n  url?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GitHubProfileInterface.html":{"url":"interfaces/GitHubProfileInterface.html","title":"interface - GitHubProfileInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GitHubProfileInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/interfaces/github-profile.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            displayName\n                                        \n                                \n                                \n                                        \n                                            emails\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            username\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        displayName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        displayName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        emails\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        emails:     literal type[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GitHubProfileInterface {\n  id: string;\n  username?: string;\n  displayName?: string;\n  emails: { value: string }[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GithubAuthGuard.html":{"url":"injectables/GithubAuthGuard.html","title":"injectable - GithubAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GithubAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/guards/github-auth-guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class GithubAuthGuard extends AuthGuard('github') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GithubConfigInterface.html":{"url":"interfaces/GithubConfigInterface.html","title":"interface - GithubConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  GithubConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/github-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            callbackURL\n                                        \n                                \n                                \n                                        \n                                            clientId\n                                        \n                                \n                                \n                                        \n                                            clientSecret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        callbackURL\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        callbackURL:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        clientSecret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        clientSecret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface GithubConfigInterface {\n  clientId: string;\n  clientSecret: string;\n  callbackURL: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/HandlebarEmailModule.html":{"url":"modules/HandlebarEmailModule.html","title":"module - HandlebarEmailModule","body":"\n                   \n\n\n\n\n    Modules\n    HandlebarEmailModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_HandlebarEmailModule\n\n\n\ncluster_HandlebarEmailModule_exports\n\n\n\ncluster_HandlebarEmailModule_providers\n\n\n\n\nHandlebarEmailService \n\nHandlebarEmailService \n\n\n\nHandlebarEmailModule\n\nHandlebarEmailModule\n\nHandlebarEmailService  -->\n\nHandlebarEmailModule->HandlebarEmailService \n\n\n\n\n\nHandlebarEmailService\n\nHandlebarEmailService\n\nHandlebarEmailModule -->\n\nHandlebarEmailService->HandlebarEmailModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/handlebar-email/handlebar-email.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            HandlebarEmailService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            HandlebarEmailService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { HandlebarEmailService } from './handlebar-email.service';\nimport { MailerModule } from '@nestjs-modules/mailer';\nimport { ConfigType } from '@nestjs/config';\nimport { emailConfig } from '../../config/email.config';\n\n@Module({\n  imports: [\n    MailerModule.forRootAsync({\n      inject: [emailConfig.KEY],\n      useFactory: async (config: ConfigType) => {\n        return config;\n      },\n    }),\n  ],\n  providers: [HandlebarEmailService],\n  exports: [HandlebarEmailService],\n})\nexport class HandlebarEmailModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HandlebarEmailService.html":{"url":"injectables/HandlebarEmailService.html","title":"injectable - HandlebarEmailService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HandlebarEmailService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/handlebar-email/handlebar-email.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mailerService: MailerService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/handlebar-email/handlebar-email.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mailerService\n                                                  \n                                                        \n                                                                    MailerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        send\n                        \n                    \n                \n            \n            \n                \n                    \n                    send(emailOptions: EmailOptionsInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/handlebar-email/handlebar-email.service.ts:15\n                \n            \n\n\n            \n                \n                    logic to send email based on options\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emailOptions\n                                    \n                                                EmailOptionsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { MailerService } from '@nestjs-modules/mailer';\nimport { Injectable } from '@nestjs/common';\nimport { EmailOptionsInterface } from '../email/interfaces/email-options.interface';\nimport { SendEmailServiceInterface } from '../email/interfaces/send-email-service.interface';\n\n@Injectable()\nexport class HandlebarEmailService implements SendEmailServiceInterface {\n  constructor(private readonly mailerService: MailerService) {}\n\n  /**\n   * logic to send email based on options\n   *\n   * @param emailOptions\n   */\n  async send(emailOptions: EmailOptionsInterface) {\n    const result = await this.mailerService.sendMail(emailOptions);\n    console.log(result);\n    return result;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/guards/jwt-auth-guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtConfigInterface.html":{"url":"interfaces/JwtConfigInterface.html","title":"interface - JwtConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/jwt-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            access\n                                        \n                                \n                                \n                                        \n                                            refresh\n                                        \n                                \n                                \n                                        \n                                            secret\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        access\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        access:     JwtModuleOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     JwtModuleOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        refresh\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        refresh:     JwtModuleOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     JwtModuleOptions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secret\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        secret:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { JwtModuleOptions } from '@nestjs/jwt';\n\nexport interface JwtConfigInterface {\n  secret: string;\n  access: JwtModuleOptions;\n  refresh: JwtModuleOptions;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtConfigService.html":{"url":"injectables/JwtConfigService.html","title":"injectable - JwtConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/jwt-config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createJwtOptions\n                            \n                            \n                                getAccessConfig\n                            \n                            \n                                getRefreshConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/jwt-config.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createJwtOptions\n                        \n                    \n                \n            \n            \n                \ncreateJwtOptions()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/jwt-config.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     JwtModuleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAccessConfig\n                        \n                    \n                \n            \n            \n                \ngetAccessConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/jwt-config.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     JwtModuleOptions\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRefreshConfig\n                        \n                    \n                \n            \n            \n                \ngetRefreshConfig()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/jwt-config.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     JwtModuleOptions\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { JwtModuleOptions, JwtOptionsFactory } from '@nestjs/jwt';\nimport { ConfigType } from '@nestjs/config';\nimport { Inject, Injectable } from '@nestjs/common';\nimport { jwtConfig } from '../../config/jwt.config';\n\n@Injectable()\nexport class JwtConfigService implements JwtOptionsFactory {\n  constructor(\n    @Inject(jwtConfig.KEY)\n    private config: ConfigType\n  ) {}\n\n  getAccessConfig(): JwtModuleOptions {\n    return this.config.access;\n  }\n\n  getRefreshConfig(): JwtModuleOptions {\n    return this.config.refresh;\n  }\n\n  createJwtOptions(): JwtModuleOptions {\n    return {\n      secret: this.config.secret,\n      signOptions: this.config.access.signOptions,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayload.html":{"url":"interfaces/JwtPayload.html","title":"interface - JwtPayload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  JwtPayload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/interfaces/jwt-payload.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            sub\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        sub\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        sub:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayload {\n  sub: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategies/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigType<>, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategies/jwt.strategy.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayload)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/strategies/jwt.strategy.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayload\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { PassportStrategy } from '@nestjs/passport';\nimport { Strategy, ExtractJwt } from 'passport-jwt';\nimport { Inject, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { UserService } from '../../user/user.service';\nimport { jwtConfig } from '../../../config/jwt.config';\nimport { JwtPayload } from '../interfaces/jwt-payload.interface';\nimport { UserDto } from '../../user/dto/user.dto';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(\n    @Inject(jwtConfig.KEY)\n    private config: ConfigType,\n    private userService: UserService\n  ) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      secretOrKey: config.secret,\n    });\n  }\n\n  async validate(payload: JwtPayload): Promise {\n    const { sub } = payload;\n    const user = await this.userService.findOne(sub);\n\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/guards/local-auth-guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/auth/strategies/local-strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/auth/strategies/local-strategy.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/auth/strategies/local-strategy.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { AuthService } from '../auth.service';\nimport { UserDto } from '../../user/dto/user.dto';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    try {\n      const user = await this.authService.validateUser(username, password);\n      if (!user) {\n        throw new UnauthorizedException();\n      }\n      return user;\n    } catch (e) {\n      // does not matter the error throws unauthorized\n      throw new UnauthorizedException();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggerConfigInterface.html":{"url":"interfaces/LoggerConfigInterface.html","title":"interface - LoggerConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoggerConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/logger/interfaces/logger-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            logLevel\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            transportLogLevel\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevel:     LogLevel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LogLevel[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        transportLogLevel\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        transportLogLevel:     LogLevel[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LogLevel[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LogLevel } from '@nestjs/common';\n\nexport interface LoggerConfigInterface {\n  logLevel: LogLevel[];\n  transportLogLevel?: LogLevel[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerExceptionFilter.html":{"url":"injectables/LoggerExceptionFilter.html","title":"injectable - LoggerExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/logger/logger-exception.filter.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loggerService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: Error, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/logger/logger-exception.filter.ts:17\n                \n            \n\n\n            \n                \n                    Override catch to log before returning exception.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loggerService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggerService\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(LoggerService)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/logger/logger-exception.filter.ts:12\n                        \n                    \n\n            \n                \n                    Inject logger service\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Catch, ArgumentsHost, Injectable, Inject } from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\nimport { LoggerService } from './logger.service';\n\n@Catch()\n@Injectable()\nexport class LoggerExceptionFilter extends BaseExceptionFilter {\n  /**\n   * Inject logger service\n   */\n  @Inject(LoggerService)\n  private loggerService!: LoggerService;\n\n  /**\n   * Override catch to log before returning exception.\n   */\n  catch(exception: Error, host: ArgumentsHost) {\n    this.loggerService.exception(\n      exception,\n      undefined,\n      LoggerExceptionFilter.name\n    );\n    super.catch(exception, host);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_LoggerModule_exports\n\n\n\n\nLoggerService \n\nLoggerService \n\n\n\nLoggerModule\n\nLoggerModule\n\nLoggerService  -->\n\nLoggerModule->LoggerService \n\n\n\n\n\nLoggerSentryTransport\n\nLoggerSentryTransport\n\nLoggerModule -->\n\nLoggerSentryTransport->LoggerModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\nLoggerTransportService\n\nLoggerTransportService\n\nLoggerModule -->\n\nLoggerTransportService->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoggerSentryTransport\n                        \n                        \n                            LoggerService\n                        \n                        \n                            LoggerTransportService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoggerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { LoggerService } from './logger.service';\nimport { LoggerTransportService } from './logger-transport.service';\nimport { APP_FILTER, APP_INTERCEPTOR } from '@nestjs/core';\nimport { LoggerExceptionFilter } from './logger-exception.filter';\nimport { LoggerRequestInterceptor } from './logger-request.interceptor';\nimport { LoggerSentryTransport } from './transports/logger-sentry.transport';\nimport { loggerConfig } from '../../config/logger.config';\nimport { loggerSentryConfig } from '../../config/logger-sentry.config';\n\n@Global()\n@Module({\n  imports: [\n    ConfigModule.forFeature(loggerConfig),\n    ConfigModule.forFeature(loggerSentryConfig),\n  ],\n  providers: [\n    LoggerService,\n    LoggerTransportService,\n    LoggerSentryTransport,\n    {\n      provide: APP_INTERCEPTOR,\n      useClass: LoggerRequestInterceptor,\n    },\n    {\n      provide: APP_FILTER,\n      useClass: LoggerExceptionFilter,\n    },\n  ],\n  exports: [LoggerService],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerRequestInterceptor.html":{"url":"injectables/LoggerRequestInterceptor.html","title":"injectable - LoggerRequestInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerRequestInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/logger/logger-request.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                            \n                                responseError\n                            \n                            \n                                responseSuccess\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loggerService: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/logger/logger-request.interceptor.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loggerService\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(_context: ExecutionContext, _next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/logger/logger-request.interceptor.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    _next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        responseError\n                        \n                    \n                \n            \n            \n                \nresponseError(req: Request, res: Response, startDate: Date, error: Error, context: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/logger/logger-request.interceptor.ts:77\n                \n            \n\n\n            \n                \n                    Format exception error\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        responseSuccess\n                        \n                    \n                \n            \n            \n                \nresponseSuccess(req: Request, res: Response, startDate: Date, context: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/logger/logger-request.interceptor.ts:52\n                \n            \n\n\n            \n                \n                    Method to log response success\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Request\n\n                                    \n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Response\n\n                                    \n                                \n                                \n                                    startDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the date for the message\n\n                                    \n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  ExecutionContext,\n  CallHandler,\n  NestInterceptor,\n} from '@nestjs/common';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, tap } from 'rxjs/operators';\nimport { Request, Response } from 'express';\nimport { LoggerService } from './logger.service';\n\n@Injectable()\nexport class LoggerRequestInterceptor\n  implements NestInterceptor>\n{\n  constructor(private loggerService: LoggerService) {}\n\n  intercept(\n    _context: ExecutionContext,\n    _next: CallHandler\n  ): Observable> {\n    const req: Request = _context.switchToHttp().getRequest();\n    const res: Response = _context.switchToHttp().getResponse();\n    const startDate = new Date();\n\n    const context = _context.getClass().name;\n    // set context where it was called from\n    this.loggerService.setContext(_context.getClass().name);\n\n    // format the request message\n    const message = this.loggerService.formatRequestMessage(req);\n\n    // log the incoming request\n    this.loggerService.log(message, context);\n\n    return _next.handle().pipe(\n      tap(() => this.responseSuccess(req, res, startDate, context)),\n      // catch all errors\n      catchError((error: Error) =>\n        this.responseError(req, res, startDate, error, context)\n      )\n    );\n  }\n\n  /**\n   * Method to log response success\n   *\n   * @param req Request\n   * @param res Response\n   * @param startDate the date for the message\n   */\n  responseSuccess(\n    req: Request,\n    res: Response,\n    startDate: Date,\n    context: string\n  ) {\n    // format the response message\n    const message = this.loggerService.formatResponseMessage(\n      req,\n      res,\n      startDate\n    );\n    // log the response\n    this.loggerService.log(message, context);\n  }\n\n  /**\n   * Format exception error\n   *\n   * @param req\n   * @param res\n   * @param startDate\n   * @param error\n   * @returns\n   */\n  responseError(\n    req: Request,\n    res: Response,\n    startDate: Date,\n    error: Error,\n    context: string\n  ) {\n    // format the message\n    const message = this.loggerService.formatResponseMessage(\n      req,\n      res,\n      startDate,\n      error\n    );\n\n    // log as an exception\n    this.loggerService.exception(error, message, context);\n\n    // all done, re-throw original error\n    return throwError(() => error);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggerSentryConfigInterface.html":{"url":"interfaces/LoggerSentryConfigInterface.html","title":"interface - LoggerSentryConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoggerSentryConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/logger/interfaces/logger-sentry-config.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    SentryNodeOptions\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            logLevelMap\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        logLevelMap\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        logLevelMap:         function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         function\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { LogLevel } from '@nestjs/common';\nimport { NodeOptions as SentryNodeOptions } from '@sentry/node/types';\nimport { SeverityLevel } from '@sentry/types';\n\nexport interface LoggerSentryConfigInterface extends SentryNodeOptions {\n  logLevelMap: (logLevel: LogLevel) => SeverityLevel;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerSentryTransport.html":{"url":"injectables/LoggerSentryTransport.html","title":"injectable - LoggerSentryTransport","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerSentryTransport\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/logger/transports/logger-sentry.transport.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/modules/logger/transports/logger-sentry.transport.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: string, logLevel: LogLevel, error?: Error | string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/logger/transports/logger-sentry.transport.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    logLevel\n                                    \n                                            LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                            Error | string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConfigType } from '@nestjs/config';\nimport * as Sentry from '@sentry/node';\nimport { Inject, Injectable, LogLevel } from '@nestjs/common';\nimport { LoggerTransportInterface } from '../interfaces';\nimport { loggerSentryConfig } from '../../../config/logger-sentry.config';\n\n@Injectable()\nexport class LoggerSentryTransport implements LoggerTransportInterface {\n  constructor(\n    @Inject(loggerSentryConfig.KEY)\n    private config: ConfigType\n  ) {\n    // init sentry\n    Sentry.init({\n      dsn: this.config.dsn,\n    });\n  }\n\n  log(message: string, logLevel: LogLevel, error?: Error | string): void {\n    // map the internal log level to sentry log severity\n    const severity = this.config.logLevelMap(logLevel);\n    // call sentry\n    if (error) {\n      // its an error, use error message\n      Sentry.captureException(error, {\n        level: severity,\n        // TODO: are we using this extras correctly?\n        extra: { developerMessage: message },\n      });\n    } else {\n      // its a string, just send it\n      Sentry.captureMessage(message, severity);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerService.html":{"url":"injectables/LoggerService.html","title":"injectable - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/logger/logger.service.ts\n        \n\n\n            \n                Description\n            \n            \n                A Custom logger Service\n\n            \n\n            \n                Extends\n            \n            \n                    ConsoleLogger\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addTransport\n                            \n                            \n                                debug\n                            \n                            \n                                error\n                            \n                            \n                                exception\n                            \n                            \n                                formatRequestMessage\n                            \n                            \n                                formatResponseMessage\n                            \n                            \n                                log\n                            \n                            \n                                verbose\n                            \n                            \n                                warn\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(transportService: LoggerTransportService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/logger/logger.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        transportService\n                                                  \n                                                        \n                                                                        LoggerTransportService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addTransport\n                        \n                    \n                \n            \n            \n                \naddTransport(transport: LoggerTransportInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/logger/logger.service.ts:104\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transport\n                                    \n                                                LoggerTransportInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        debug\n                        \n                    \n                \n            \n            \n                \ndebug(message: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/logger/logger.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n            \n                \nerror(message: string, trace?: string | undefined, context?: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/logger/logger.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    trace\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        exception\n                        \n                    \n                \n            \n            \n                \nexception(error: Error, message?: string, context?: string | undefined)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/logger/logger.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                            string | undefined\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatRequestMessage\n                        \n                    \n                \n            \n            \n                \nformatRequestMessage(req: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/logger/logger.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatResponseMessage\n                        \n                    \n                \n            \n            \n                \nformatResponseMessage(req: Request, res: Response, startDate: Date, error?: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/logger/logger.service.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    startDate\n                                    \n                                                Date\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/logger/logger.service.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        verbose\n                        \n                    \n                \n            \n            \n                \nverbose(message: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/logger/logger.service.ts:76\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        warn\n                        \n                    \n                \n            \n            \n                \nwarn(message: string, context?: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/logger/logger.service.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    context\n                                    \n                                                string\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ConsoleLogger, HttpException, Injectable } from '@nestjs/common';\nimport { LoggerTransportService } from './logger-transport.service';\nimport { LogLevel } from '@nestjs/common/services/logger.service';\nimport { Request, Response } from 'express';\nimport { LoggerTransportInterface } from './interfaces';\n\n/**\n * A Custom logger Service\n *\n */\n@Injectable()\nexport class LoggerService extends ConsoleLogger {\n  constructor(private transportService: LoggerTransportService) {\n    super();\n  }\n\n  exception(error: Error, message?: string, context?: string | undefined) {\n    // message is missing?\n    if (!message) {\n      // yes, set it\n      message = error.message;\n    }\n\n    // is this a low severity http exception?\n    if (\n      error instanceof HttpException &&\n      error.getStatus() >= 400 &&\n      error.getStatus() \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggerTransportInterface.html":{"url":"interfaces/LoggerTransportInterface.html","title":"interface - LoggerTransportInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoggerTransportInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/logger/interfaces/logger-transport.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        log\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        log\n                        \n                    \n                \n            \n            \n                \nlog(message: string, logLevel: LogLevel, error?: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/logger/interfaces/logger-transport.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    logLevel\n                                    \n                                            LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { LogLevel } from '@nestjs/common';\n\nexport interface LoggerTransportInterface {\n  log(message: string, logLevel: LogLevel, error?: Error): void;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggerTransportService.html":{"url":"injectables/LoggerTransportService.html","title":"injectable - LoggerTransportService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoggerTransportService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/logger/logger-transport.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                loggerTransports\n                            \n                            \n                                    Private\n                                    Readonly\n                                logLevels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addTransport\n                            \n                            \n                                    Public\n                                log\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/modules/logger/logger-transport.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        addTransport\n                        \n                    \n                \n            \n            \n                \n                    \n                    addTransport(transport: LoggerTransportInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/logger/logger-transport.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    transport\n                                    \n                                                LoggerTransportInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        log\n                        \n                    \n                \n            \n            \n                \n                    \n                    log(message: string, logLevel: LogLevel, error?: Error)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/logger/logger-transport.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    logLevel\n                                    \n                                            LogLevel\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        loggerTransports\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoggerTransportInterface[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/modules/logger/logger-transport.service.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logLevels\n                        \n                    \n                \n            \n                \n                    \n                        Type :     LogLevel[]\n\n                    \n                \n                \n                    \n                        Default value : ['error']\n                    \n                \n                    \n                        \n                                Defined in src/modules/logger/logger-transport.service.ts:8\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { ConfigType } from '@nestjs/config';\nimport { Inject, Injectable, LogLevel } from '@nestjs/common';\nimport { LoggerTransportInterface } from './interfaces/logger-transport.interface';\nimport { loggerConfig } from '../../config/logger.config';\n\n@Injectable()\nexport class LoggerTransportService {\n  private readonly logLevels: LogLevel[] = ['error'];\n  private readonly loggerTransports: LoggerTransportInterface[] = [];\n\n  constructor(\n    @Inject(loggerConfig.KEY) private config: ConfigType\n  ) {\n    if (this.config?.transportLogLevel) {\n      this.logLevels = this.config.transportLogLevel;\n    }\n  }\n\n  public addTransport(transport: LoggerTransportInterface) {\n    this.loggerTransports.push(transport);\n  }\n\n  public log(message: string, logLevel: LogLevel, error?: Error): void {\n    // are we supposed to send this log level?\n    if (this.logLevels.includes(logLevel)) {\n      // yes, call all logger transports\n      this.loggerTransports.map(loggerTransport =>\n        loggerTransport.log(message, logLevel, error)\n      );\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Response.html":{"url":"interfaces/Response.html","title":"interface - Response","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Response\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/transform.interceptor.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            length\n                                        \n                                \n                                \n                                        \n                                            statusCode\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:     T\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     T\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        length\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        length:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        statusCode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        statusCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\ninterface Response {\n  statusCode: string;\n  data: T;\n  length?: number;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler\n  ): Observable> {\n    return next.handle().pipe(\n      map(data => {\n        const length = Array.isArray(data) ? { length: data.length } : null;\n\n        return {\n          statusCode: context.switchToHttp().getResponse().statusCode,\n          ...length,\n          data,\n        };\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Role.html":{"url":"entities/Role.html","title":"entity - Role","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Role\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                userRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/role.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userRoles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserRole[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, userRole => userRole.role)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/role.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { CommonEntity } from '../../common/common.entity';\nimport { Column, Entity, OneToMany, Unique } from 'typeorm';\nimport { UserRole } from '../user-role/user-role.entity';\n\n@Entity()\n@Unique(['name'])\nexport class Role extends CommonEntity {\n  @Column()\n  name!: string;\n\n  @OneToMany(() => UserRole, userRole => userRole.role)\n  userRoles!: UserRole[];\n\n  //TODO: One way to do ManyToMany relationship\n  // @ManyToMany(() => User, (user) => user.roles)\n  // users!: User[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/RoleController.html":{"url":"controllers/RoleController.html","title":"controller - RoleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  RoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/role.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                roles\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRoleDto: CreateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({operationId: 'role_create', description: 'Endpoint to create a new role'})@ApiOkResponse({description: 'Success role created'})\n                \n            \n\n            \n                \n                    Defined in src/modules/role/role.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRoleDto\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({operationId: 'role_findAll', description: 'Endpoint to find all'})\n                \n            \n\n            \n                \n                    Defined in src/modules/role/role.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({operationId: 'role_findOne', description: 'Endpoint to create a new role'})@ApiOkResponse({description: 'Success role created'})@ApiNotFoundResponse({description: 'Was not able to find role'})\n                \n            \n\n            \n                \n                    Defined in src/modules/role/role.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({operationId: 'role_delete', description: 'Endpoint to delete all'})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/role/role.controller.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateRoleDto: UpdateRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({operationId: 'role_update', description: 'Endpoint to update role'})@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/role/role.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRoleDto\n                                    \n                                                UpdateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { RoleDto } from './dto/role.dto';\n\nimport { RoleService } from './role.service';\nimport { RolesGuard } from './guards/roles.guard';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth-guard';\nimport { RoleEnum } from './enum/role.enum';\nimport { Roles } from './decorator/roles.decorator';\n\n@ApiTags('Roles')\n@Controller('roles')\n@ApiBearerAuth()\n@UseGuards(RolesGuard)\n@UseGuards(JwtAuthGuard)\n@Roles(RoleEnum.Admin)\nexport class RoleController {\n  constructor(private readonly rolesService: RoleService) {}\n\n  @Post()\n  @ApiOperation({\n    operationId: 'role_create',\n    description: 'Endpoint to create a new role',\n  })\n  @ApiOkResponse({\n    description: 'Success role created',\n  })\n  async create(@Body() createRoleDto: CreateRoleDto): Promise {\n    return this.rolesService.create(createRoleDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    operationId: 'role_findAll',\n    description: 'Endpoint to find all',\n  })\n  findAll(): Promise {\n    return this.rolesService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    operationId: 'role_findOne',\n    description: 'Endpoint to create a new role',\n  })\n  @ApiOkResponse({\n    description: 'Success role created',\n  })\n  @ApiNotFoundResponse({\n    description: 'Was not able to find role',\n  })\n  async findOne(@Param('id') id: string) {\n    return this.rolesService.findOne(id);\n  }\n\n  @ApiOperation({\n    operationId: 'role_update',\n    description: 'Endpoint to update role',\n  })\n  @Patch(':id')\n  async update(@Param('id') id: string, @Body() updateRoleDto: UpdateRoleDto) {\n    return this.rolesService.update(id, updateRoleDto);\n  }\n\n  @ApiOperation({\n    operationId: 'role_delete',\n    description: 'Endpoint to delete all',\n  })\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    return this.rolesService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleDto.html":{"url":"classes/RoleDto.html","title":"class - RoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/dto/role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CommonEntityDto\n            \n\n            \n                Implements\n            \n            \n                            RoleInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', description: 'Username'})@IsString()@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/role.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', title: 'Created At', description: 'The date and time at which the resource was created.'})@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CommonEntityDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntityDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'uuid', title: 'Id', description: 'The primary key of the resource.'})@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CommonEntityDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntityDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', title: 'Updated At', description: 'The date and time at which the resource was last updated.'})@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CommonEntityDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntityDto:31\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { RoleInterface } from '../interfaces';\nimport { Exclude, Expose } from 'class-transformer';\nimport { CommonEntityDto } from '../../../common/dto';\nimport { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\n@Exclude()\nexport class RoleDto extends CommonEntityDto implements RoleInterface {\n  @ApiProperty({\n    type: 'string',\n    description: 'Username',\n  })\n  @IsString()\n  @Expose()\n  name!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RoleFactory.html":{"url":"classes/RoleFactory.html","title":"class - RoleFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RoleFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/role.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Factory\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        entity\n                        \n                    \n                \n            \n            \n                \n                    \n                    entity()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/role/role.factory.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { faker } from '@faker-js/faker';\nimport { Factory } from '@concepta/typeorm-seeding';\nimport { Role } from './role.entity';\n\nexport class RoleFactory extends Factory {\n  protected async entity(): Promise {\n    const role = new Role();\n    return role;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RoleInterface.html":{"url":"interfaces/RoleInterface.html","title":"interface - RoleInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RoleInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/interfaces/role.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CommonEntityInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            name\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CommonEntityInterface } from '../../../common/interfaces';\n\nexport interface RoleInterface extends CommonEntityInterface {\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/RoleModule.html":{"url":"modules/RoleModule.html","title":"module - RoleModule","body":"\n                   \n\n\n\n\n    Modules\n    RoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\n\nRoleService\n\nRoleService\n\n\n\nRoleModule\n\nRoleModule\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/role/role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RoleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            RoleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { RoleService } from './role.service';\nimport { RoleController } from './role.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Role } from './role.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([Role])],\n  controllers: [RoleController],\n  providers: [RoleService],\n})\nexport class RoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RoleService.html":{"url":"injectables/RoleService.html","title":"injectable - RoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/role.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/role/role.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createRole: CreateRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/role/role.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createRole\n                                    \n                                                CreateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/role/role.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/role/role.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/role/role.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/role/role.service.ts:56\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateRoleDto: UpdateRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/role/role.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateRoleDto\n                                    \n                                                UpdateRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { plainToInstance } from 'class-transformer';\nimport { Repository } from 'typeorm';\n\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { CreateRoleDto } from './dto/create-role.dto';\nimport { UpdateRoleDto } from './dto/update-role.dto';\nimport { RoleDto } from './dto/role.dto';\nimport { Role } from './role.entity';\n\n@Injectable()\nexport class RoleService {\n  constructor(\n    @InjectRepository(Role)\n    private repo: Repository\n  ) {}\n\n  public async create(createRole: CreateRoleDto): Promise {\n    const role = this.repo.create(createRole);\n    const dbRole = await this.repo.save(role);\n    return plainToInstance(RoleDto, dbRole);\n  }\n\n  public async findAll(): Promise {\n    const roles = await this.repo.find();\n    return plainToInstance(RoleDto, roles);\n  }\n\n  private async findById(id: string): Promise {\n    const role = await this.repo.findOneBy({\n      id,\n    });\n    if (!role) throw new NotFoundException();\n    return role;\n  }\n\n  public async findOne(id: string): Promise {\n    const role = await this.findById(id);\n    return plainToInstance(RoleDto, role);\n  }\n\n  public async update(\n    id: string,\n    updateRoleDto: UpdateRoleDto\n  ): Promise {\n    const role = await this.findById(id);\n    const newRole: Role = {\n      ...role,\n      ...updateRoleDto,\n    };\n    this.repo.save(newRole);\n    return plainToInstance(RoleDto, newRole);\n  }\n\n  public async remove(id: string): Promise {\n    const role = await this.findById(id);\n    await this.repo.remove(role);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RolesGuard.html":{"url":"guards/RolesGuard.html","title":"guard - RolesGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RolesGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/modules/role/guards/roles.guard.ts\n            \n\n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(reflector: Reflector)\n                    \n                \n                        \n                            \n                                Defined in src/modules/role/guards/roles.guard.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reflector\n                                                  \n                                                        \n                                                                    Reflector\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/role/guards/roles.guard.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable, CanActivate, ExecutionContext } from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { ROLES_KEY } from '../decorator/roles.decorator';\nimport { RoleEnum } from '../enum/role.enum';\n\n@Injectable()\nexport class RolesGuard implements CanActivate {\n  constructor(private reflector: Reflector) {}\n\n  canActivate(context: ExecutionContext): boolean {\n    // Get metadata of method\n    const requiredRoles = this.reflector.getAllAndOverride(\n      ROLES_KEY,\n      [context.getHandler(), context.getClass()]\n    );\n    if (!requiredRoles) {\n      return true;\n    }\n    // get user from request to see if they have roles\n    const { user } = context.switchToHttp().getRequest();\n\n    // check if user has roles\n    return requiredRoles.some(role => user.userRoles?.includes(role));\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SendEmailServiceInterface.html":{"url":"interfaces/SendEmailServiceInterface.html","title":"interface - SendEmailServiceInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SendEmailServiceInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/email/interfaces/send-email-service.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                        send\n                                    \n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        send\n                        \n                    \n                \n            \n            \n                \nsend(emailOptions: EmailOptionsInterface)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/email/interfaces/send-email-service.interface.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    emailOptions\n                                    \n                                                EmailOptionsInterface\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EmailOptionsInterface } from './email-options.interface';\n\nexport interface SendEmailServiceInterface {\n  send(emailOptions: EmailOptionsInterface): Promise;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ServerConfigInterface.html":{"url":"interfaces/ServerConfigInterface.html","title":"interface - ServerConfigInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ServerConfigInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/server-config.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            api\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            cors\n                                        \n                                \n                                \n                                        \n                                            environment\n                                        \n                                \n                                \n                                        \n                                            port\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        api\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        api:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        cors\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cors:     CorsOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     CorsOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        environment\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        environment:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        port\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        port:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CorsOptions } from '@nestjs/common/interfaces/external/cors-options.interface';\n\nexport interface ServerConfigInterface {\n  api: string;\n  environment: string;\n  port: number;\n  cors?: CorsOptions;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransformInterceptor.html":{"url":"injectables/TransformInterceptor.html","title":"injectable - TransformInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransformInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/transform.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/transform.interceptor.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n} from '@nestjs/common';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\ninterface Response {\n  statusCode: string;\n  data: T;\n  length?: number;\n}\n\n@Injectable()\nexport class TransformInterceptor\n  implements NestInterceptor>\n{\n  intercept(\n    context: ExecutionContext,\n    next: CallHandler\n  ): Observable> {\n    return next.handle().pipe(\n      map(data => {\n        const length = Array.isArray(data) ? { length: data.length } : null;\n\n        return {\n          statusCode: context.switchToHttp().getResponse().statusCode,\n          ...length,\n          data,\n        };\n      })\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateRoleDto.html":{"url":"classes/UpdateRoleDto.html","title":"class - UpdateRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/role/dto/update-role.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', description: 'Username'})@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/role/dto/update-role.dto.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsString } from 'class-validator';\n\nexport class UpdateRoleDto {\n  @ApiProperty({\n    type: 'string',\n    description: 'Username',\n  })\n  @IsString()\n  name!: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/update-user.dto.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                            UserUpdatableInterface\n            \n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IntersectionType, PartialType, PickType } from '@nestjs/swagger';\nimport { UserUpdatableInterface } from '../interfaces';\nimport { CreateUserDto } from './create-user.dto';\nimport { UserDto } from './user.dto';\n\nexport class UpdateUserDto\n  extends IntersectionType(\n    PartialType(PickType(UserDto, ['firstName', 'lastName', 'active'])),\n    PartialType(PickType(CreateUserDto, ['password']))\n  )\n  implements UserUpdatableInterface {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UploadController.html":{"url":"controllers/UploadController.html","title":"controller - UploadController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UploadController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/upload/upload.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                upload\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                uploadFile\n                            \n                            \n                                viewImage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('file')@ApiFileDecorator()@ApiConsumes('multipart/form-data')@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/upload/upload.controller.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        viewImage\n                        \n                    \n                \n            \n            \n                \nviewImage(image: string, res: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':path')\n                \n            \n\n            \n                \n                    Defined in src/modules/upload/upload.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    image\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    res\n                                    \n                                                Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Param,\n  Post,\n  Res,\n  UploadedFile,\n  UseInterceptors,\n} from '@nestjs/common';\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport { ApiBearerAuth, ApiConsumes, ApiTags } from '@nestjs/swagger';\nimport { instanceToPlain } from 'class-transformer';\nimport { Response } from 'express';\nimport { UPLOAD_PATH } from '../../common/constants';\nimport { ApiFileDecorator } from '../../common/decorators/api-file-decorator';\nimport { imageFileFilter } from '../../common/utils/file-utils';\nimport { awsS3UploadService } from './aws-s3-upload.service';\n\n@ApiTags('Upload')\n@Controller('upload')\n@ApiBearerAuth()\n//@UseGuards(RolesGuard)\n//@UseGuards(JwtAuthGuard)\n//@Roles(RoleEnum.Admin)\nexport class UploadController {\n  constructor(private s3Service: awsS3UploadService) {}\n  @Post('file')\n  @ApiFileDecorator()\n  @ApiConsumes('multipart/form-data')\n  @UseInterceptors(\n    FileInterceptor('file', {\n      fileFilter: imageFileFilter,\n    })\n  )\n  async uploadFile(@UploadedFile() file: Express.Multer.File) {\n    const response = await this.s3Service.uploadFile(file);\n    return instanceToPlain(response);\n  }\n\n  @Get(':path')\n  viewImage(@Param('path') image: string, @Res() res: Response) {\n    return res.sendFile(image, { root: UPLOAD_PATH });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UploadModule.html":{"url":"modules/UploadModule.html","title":"module - UploadModule","body":"\n                   \n\n\n\n\n    Modules\n    UploadModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UploadModule\n\n\n\ncluster_UploadModule_providers\n\n\n\n\nawsS3UploadService\n\nawsS3UploadService\n\n\n\nUploadModule\n\nUploadModule\n\nUploadModule -->\n\nawsS3UploadService->UploadModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/upload/upload.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            awsS3UploadService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UploadController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { diskStorage } from 'multer';\nimport { UPLOAD_PATH } from '../../common/constants';\nimport { editFileName } from '../../common/utils/file-utils';\nimport { awsS3Config } from '../../config/aws-s3.config';\nimport { awsS3UploadService } from './aws-s3-upload.service';\nimport { UploadController } from './upload.controller';\n\n@Module({\n  imports: [ConfigModule.forFeature(awsS3Config)],\n  controllers: [UploadController],\n  providers: [awsS3UploadService],\n})\nexport class UploadModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                federated\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                resetToken\n                            \n                            \n                                resetTokenExp\n                            \n                            \n                                salt\n                            \n                            \n                                username\n                            \n                            \n                                    Optional\n                                userRoles\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'citext', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        federated\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Federated[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, federated => federated.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'citext', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'citext', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'uuid', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetTokenExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'timestamp', nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        salt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'citext', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        userRoles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserRole[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @OneToMany(undefined, userRole => userRole.user)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.entity.ts:39\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, Unique, OneToMany } from 'typeorm';\nimport { UserInterface } from './interfaces';\nimport { CommonEntity } from '../../common/common.entity';\nimport { UserRole } from '../user-role/user-role.entity';\nimport { Federated } from '../federated/federated.entity';\n\n@Entity()\n@Unique(['username'])\n@Unique(['email'])\nexport class User extends CommonEntity implements UserInterface {\n  @Column({ type: 'citext', nullable: false })\n  username!: string;\n\n  @Column({ type: 'text', nullable: false })\n  password!: string;\n\n  @Column({ type: 'text', nullable: true, default: null })\n  salt!: string;\n\n  @Column({ type: 'citext', nullable: true })\n  firstName!: string;\n\n  @Column({ type: 'citext', nullable: true })\n  lastName!: string;\n\n  @Column({ type: 'citext', nullable: true })\n  email!: string;\n\n  @Column({ default: true, nullable: false })\n  active!: boolean;\n\n  @Column({ type: 'uuid', nullable: true })\n  resetToken!: string | null;\n\n  @Column({ type: 'timestamp', nullable: true })\n  resetTokenExp!: Date | null;\n\n  @OneToMany(() => UserRole, userRole => userRole.user)\n  userRoles?: UserRole[];\n\n  @OneToMany(() => Federated, federated => federated.user)\n  federated?: Federated[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Private\n                                    Async\n                                updateReportCache\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({operationId: 'user_create', description: 'Endpoint to create a new user'})@ApiOkResponse({description: 'Success user created'})\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({operationId: 'user_findAll', description: 'Endpoint to find all'})\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({operationId: 'user_findOne', description: 'Endpoint to create a new user'})@ApiOkResponse({description: 'Success user created'})@ApiNotFoundResponse({description: 'Was not able to find user'})\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({operationId: 'user_delete', description: 'Endpoint to delete all'})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({operationId: 'user_update', description: 'Endpoint to update user'})@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:93\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        updateReportCache\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateReportCache()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  Inject,\n  CACHE_MANAGER,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { Cache } from 'cache-manager';\nimport { IsUUIDParam } from '../../common/decorators/is-strong-password';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth-guard';\nimport { Roles } from '../role/decorator/roles.decorator';\nimport { RoleEnum } from '../role/enum/role.enum';\nimport { USER_REPORT_CACHE_KEY } from './constant/user.constants';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { UserDto } from './dto/user.dto';\nimport { UserService } from './user.service';\n\n@ApiTags('Users')\n@Controller('users')\n@ApiBearerAuth()\n//@UseGuards(RolesGuard)\n//@UseGuards(JwtAuthGuard)\n@Roles(RoleEnum.Admin)\nexport class UserController {\n  constructor(\n    private readonly usersService: UserService,\n    @Inject(CACHE_MANAGER) private cacheManager: Cache\n  ) {}\n\n  private async updateReportCache() {\n    this.cacheManager.set(USER_REPORT_CACHE_KEY, await this.findAll());\n  }\n\n  @Post()\n  @ApiOperation({\n    operationId: 'user_create',\n    description: 'Endpoint to create a new user',\n  })\n  @ApiOkResponse({\n    description: 'Success user created',\n  })\n  async create(@Body() createUserDto: CreateUserDto): Promise {\n    const user = await this.usersService.create(createUserDto);\n    this.updateReportCache();\n    return user;\n  }\n\n  @Get()\n  @ApiOperation({\n    operationId: 'user_findAll',\n    description: 'Endpoint to find all',\n  })\n  async findAll(): Promise {\n    return await this.usersService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    operationId: 'user_findOne',\n    description: 'Endpoint to create a new user',\n  })\n  @ApiOkResponse({\n    description: 'Success user created',\n  })\n  @ApiNotFoundResponse({\n    description: 'Was not able to find user',\n  })\n  async findOne(\n    @IsUUIDParam('id')\n    id: string\n  ) {\n    return await this.usersService.findOne(id);\n  }\n\n  @ApiOperation({\n    operationId: 'user_update',\n    description: 'Endpoint to update user',\n  })\n  @Patch(':id')\n  async update(\n    @IsUUIDParam('id') id: string,\n    @Body() updateUserDto: UpdateUserDto\n  ) {\n    const user = await this.usersService.update(id, updateUserDto);\n    this.updateReportCache();\n    return user;\n  }\n\n  @ApiOperation({\n    operationId: 'user_delete',\n    description: 'Endpoint to delete all',\n  })\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    await this.usersService.remove(id);\n    this.updateReportCache();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserCreatableInterface.html":{"url":"interfaces/UserCreatableInterface.html","title":"interface - UserCreatableInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserCreatableInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/interfaces/user-creatable.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Pick\n            \n\n\n\n\n    \n\n\n    \n        import { UserInterface } from './user.interface';\n\nexport interface UserCreatableInterface\n  extends Pick,\n    Partial> {}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserDto.html":{"url":"classes/UserDto.html","title":"class - UserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/dto/user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CommonEntityDto\n            \n\n            \n                Implements\n            \n            \n                        Omit\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                firstName\n                            \n                            \n                                    Optional\n                                lastName\n                            \n                            \n                                resetToken\n                            \n                            \n                                resetTokenExp\n                            \n                            \n                                username\n                            \n                            \n                                userRoles\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        active\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({title: 'Active', description: 'The flag to inform if user is active or not.'})@Expose()@IsBoolean()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user.dto.ts:83\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({title: 'Email', description: 'The email user.', minLength: USER_EMAIL_MIN_LENGTH, maxLength: USER_EMAIL_MAX_LENGTH})@IsEmail()@MinLength(USER_EMAIL_MIN_LENGTH)@MaxLength(USER_EMAIL_MAX_LENGTH)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user.dto.ts:74\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({title: 'First Name', description: 'The first name of user.', minLength: USER_NAME_MIN_LENGTH, maxLength: USER_NAME_MAX_LENGTH})@IsString()@MinLength(USER_NAME_MIN_LENGTH)@MaxLength(USER_NAME_MAX_LENGTH)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user.dto.ts:50\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({title: 'Last Name', description: 'The last name of user.', minLength: USER_NAME_MIN_LENGTH, maxLength: USER_NAME_MAX_LENGTH})@IsString()@MinLength(USER_NAME_MIN_LENGTH)@MaxLength(USER_NAME_MAX_LENGTH)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetToken\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user.dto.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetTokenExp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user.dto.ts:101\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        username\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({title: 'Username', description: 'The username of user.', minLength: USER_NAME_MIN_LENGTH, maxLength: USER_NAME_MAX_LENGTH})@IsString()@MinLength(USER_NAME_MIN_LENGTH)@MaxLength(USER_NAME_MAX_LENGTH)@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user.dto.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userRoles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     UserRoleDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: undefined, description: 'roles', required: false})@Expose()@Transform( => )\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user/dto/user.dto.ts:96\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', title: 'Created At', description: 'The date and time at which the resource was created.'})@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CommonEntityDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntityDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'uuid', title: 'Id', description: 'The primary key of the resource.'})@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CommonEntityDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntityDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', title: 'Updated At', description: 'The date and time at which the resource was last updated.'})@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CommonEntityDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntityDto:31\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Exclude, Expose, Transform, Type } from 'class-transformer';\n\nimport { ApiProperty } from '@nestjs/swagger';\n\nimport { UserRoleDto } from '../../user-role/dto/user-role.dto';\nimport { UserInterface } from '../interfaces';\nimport { CommonEntityDto } from '../../../common/dto';\nimport {\n  IsBoolean,\n  IsEmail,\n  IsString,\n  MaxLength,\n  MinLength,\n} from 'class-validator';\nimport {\n  USER_EMAIL_MAX_LENGTH,\n  USER_EMAIL_MIN_LENGTH,\n  USER_NAME_MAX_LENGTH,\n  USER_NAME_MIN_LENGTH,\n} from '../constant/user.constants';\n\n@Exclude()\nexport class UserDto\n  extends CommonEntityDto\n  implements\n    Omit\n{\n  @ApiProperty({\n    title: 'Username',\n    description: 'The username of user.',\n    minLength: USER_NAME_MIN_LENGTH,\n    maxLength: USER_NAME_MAX_LENGTH,\n  })\n  @IsString()\n  @MinLength(USER_NAME_MIN_LENGTH)\n  @MaxLength(USER_NAME_MAX_LENGTH)\n  @Expose()\n  username!: string;\n\n  @ApiProperty({\n    title: 'First Name',\n    description: 'The first name of user.',\n    minLength: USER_NAME_MIN_LENGTH,\n    maxLength: USER_NAME_MAX_LENGTH,\n  })\n  @IsString()\n  @MinLength(USER_NAME_MIN_LENGTH)\n  @MaxLength(USER_NAME_MAX_LENGTH)\n  @Expose()\n  firstName?: string;\n\n  @ApiProperty({\n    title: 'Last Name',\n    description: 'The last name of user.',\n    minLength: USER_NAME_MIN_LENGTH,\n    maxLength: USER_NAME_MAX_LENGTH,\n  })\n  @IsString()\n  @MinLength(USER_NAME_MIN_LENGTH)\n  @MaxLength(USER_NAME_MAX_LENGTH)\n  @Expose()\n  lastName?: string;\n\n  @ApiProperty({\n    title: 'Email',\n    description: 'The email user.',\n    minLength: USER_EMAIL_MIN_LENGTH,\n    maxLength: USER_EMAIL_MAX_LENGTH,\n  })\n  @IsEmail()\n  @MinLength(USER_EMAIL_MIN_LENGTH)\n  @MaxLength(USER_EMAIL_MAX_LENGTH)\n  @Expose()\n  email!: string;\n\n  @ApiProperty({\n    title: 'Active',\n    description: 'The flag to inform if user is active or not.',\n  })\n  @Expose()\n  @IsBoolean()\n  @Type(() => Boolean)\n  active!: boolean;\n\n  @ApiProperty({\n    type: [UserRoleDto],\n    description: 'roles',\n    required: false,\n  })\n  @Expose()\n  @Transform(({ value }) => {\n    return value?.map((role: UserRoleDto) => {\n      return role?.role?.name;\n    });\n  })\n  userRoles!: UserRoleDto[];\n\n  @Expose()\n  resetToken!: string;\n  @Expose()\n  resetTokenExp!: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserFactory.html":{"url":"classes/UserFactory.html","title":"class - UserFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Factory\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        entity\n                        \n                    \n                \n            \n            \n                \n                    \n                    entity()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.factory.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { faker } from '@faker-js/faker';\nimport { Factory } from '@concepta/typeorm-seeding';\nimport { User } from './user.entity';\n\nexport class UserFactory extends Factory {\n  protected async entity(): Promise {\n    const password = 'Test1234';\n    const user = new User();\n    user.firstName = faker.name.firstName();\n    user.lastName = faker.name.lastName();\n    user.username = faker.helpers.unique(faker.internet.userName);\n    user.email = faker.helpers.unique(faker.internet.email);\n    user.password = password;\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserInterface.html":{"url":"interfaces/UserInterface.html","title":"interface - UserInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/interfaces/user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CommonEntityInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            active\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            resetToken\n                                        \n                                \n                                \n                                        \n                                            resetTokenExp\n                                        \n                                \n                                \n                                        \n                                            salt\n                                        \n                                \n                                \n                                        \n                                            username\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            userRoles\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        active\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        active:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetToken\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resetToken:     string | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resetTokenExp\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        resetTokenExp:     Date | null\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Date | null\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        salt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        salt:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        username\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        username:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userRoles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userRoles:     UserRoleInterface[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     UserRoleInterface[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CommonEntityInterface } from '../../../common/interfaces';\nimport { UserRoleInterface } from '../../user-role/interfaces';\n\nexport interface UserInterface extends CommonEntityInterface {\n  firstName?: string;\n  lastName?: string;\n  username: string;\n  password: string;\n  salt: string;\n  active: boolean;\n  resetToken: string | null;\n  resetTokenExp: Date | null;\n  userRoles?: UserRoleInterface[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_exports\n\n\n\n\nLoggerModule\n\nLoggerModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nLoggerModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                        \n                            UserReportController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            LoggerModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './user.entity';\nimport { LoggerModule } from '../logger/logger.module';\nimport { UserReportController } from './user-report.controller';\n@Module({\n  imports: [TypeOrmModule.forFeature([User]), LoggerModule],\n  controllers: [UserController, UserReportController],\n  providers: [UserService],\n  exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserNotFoundException.html":{"url":"classes/UserNotFoundException.html","title":"class - UserNotFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserNotFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/exceptions/user-not-found.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    NotFoundException\n            \n\n            \n                Implements\n            \n            \n                            ErrorCodeExceptionInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorCode\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/exceptions/user-not-found.exception.ts:8\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/user/exceptions/user-not-found.exception.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotFoundException } from '@nestjs/common';\nimport { ErrorCodeExceptionInterface } from '../../../common/interfaces/error-code-exception.interface';\n\nexport class UserNotFoundException\n  extends NotFoundException\n  implements ErrorCodeExceptionInterface\n{\n  errorCode!: string;\n  constructor() {\n    super('User was not found');\n    this.errorCode = 'USER_001';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserOwnableInterface.html":{"url":"interfaces/UserOwnableInterface.html","title":"interface - UserOwnableInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserOwnableInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/interfaces/user-ownable.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserOwnableInterface {\n  userId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserReportController.html":{"url":"controllers/UserReportController.html","title":"controller - UserReportController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserReportController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user-report.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user-report\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                report\n                            \n                            \n                                    Async\n                                report_\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        report\n                        \n                    \n                \n            \n            \n                \n                    \n                    report()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseInterceptors(CacheInterceptor)@CacheKey(USER_REPORT_CACHE_KEY)@CacheTTL(300)@Get()\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user-report.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        report_\n                        \n                    \n                \n            \n            \n                \n                    \n                    report_()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('report_2')\n                \n            \n\n            \n                \n                    Defined in src/modules/user/user-report.controller.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  UseInterceptors,\n  Inject,\n  CACHE_MANAGER,\n  CacheInterceptor,\n  CacheTTL,\n  CacheKey,\n} from '@nestjs/common';\nimport { ApiBearerAuth, ApiTags } from '@nestjs/swagger';\nimport { Cache } from 'cache-manager';\nimport { Roles } from '../role/decorator/roles.decorator';\nimport { RoleEnum } from '../role/enum/role.enum';\nimport { USER_REPORT_CACHE_KEY } from './constant/user.constants';\nimport { UserService } from './user.service';\n\n@ApiTags('Users')\n@Controller('user-report')\n@ApiBearerAuth()\n//@UseGuards(RolesGuard)\n//@UseGuards(JwtAuthGuard)\n@Roles(RoleEnum.Admin)\nexport class UserReportController {\n  constructor(\n    private readonly usersService: UserService,\n    @Inject(CACHE_MANAGER) private cacheManager: Cache\n  ) {}\n\n  @UseInterceptors(CacheInterceptor)\n  @CacheKey(USER_REPORT_CACHE_KEY)\n  @CacheTTL(300)\n  @Get()\n  async report() {\n    return await this.usersService.findAll();\n  }\n\n  @Get('report_2')\n  async report_() {\n    const users = await this.cacheManager.get(USER_REPORT_CACHE_KEY);\n    return users;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/UserRole.html":{"url":"entities/UserRole.html","title":"entity - UserRole","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  UserRole\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user-role/user-role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                role\n                            \n                            \n                                roleId\n                            \n                            \n                                user\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Role\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, role => role.userRoles)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user-role/user-role.entity.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user-role/user-role.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ManyToOne(undefined, user => user.userRoles)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user-role/user-role.entity.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user-role/user-role.entity.ts:11\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, Unique, ManyToOne } from 'typeorm';\nimport { UserRoleInterface } from './interfaces';\nimport { CommonEntity } from '../../common/common.entity';\nimport { Role } from '../role/role.entity';\nimport { User } from '../user/user.entity';\n\n@Entity()\n@Unique(['userId', 'roleId'])\nexport class UserRole extends CommonEntity implements UserRoleInterface {\n  @Column()\n  userId!: string;\n\n  @Column()\n  roleId!: string;\n\n  @ManyToOne(() => User, user => user.userRoles)\n  user!: User;\n\n  @ManyToOne(() => Role, role => role.userRoles)\n  role!: Role;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserRoleController.html":{"url":"controllers/UserRoleController.html","title":"controller - UserRoleController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserRoleController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user-role/user-role.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user-role\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserRoleDto: CreateUserRoleDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({operationId: 'userUserRole_create', description: 'Endpoint to create a new userUserRole'})@ApiOkResponse({description: 'Success userUserRole created'})\n                \n            \n\n            \n                \n                    Defined in src/modules/user-role/user-role.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserRoleDto\n                                    \n                                                CreateUserRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({operationId: 'userUserRole_findAll', description: 'Endpoint to find all'})\n                \n            \n\n            \n                \n                    Defined in src/modules/user-role/user-role.controller.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({operationId: 'userUserRole_findOne', description: 'Endpoint to create a new userUserRole'})@ApiOkResponse({description: 'Success userUserRole created'})@ApiNotFoundResponse({description: 'Was not able to find userUserRole'})\n                \n            \n\n            \n                \n                    Defined in src/modules/user-role/user-role.controller.ts:69\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({operationId: 'userUserRole_delete', description: 'Endpoint to delete all'})@Delete(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/user-role/user-role.controller.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Param,\n  Delete,\n  UseGuards,\n} from '@nestjs/common';\nimport {\n  ApiBearerAuth,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { JwtAuthGuard } from '../auth/guards/jwt-auth-guard';\nimport { Roles } from '../role/decorator/roles.decorator';\nimport { RoleEnum } from '../role/enum/role.enum';\nimport { RolesGuard } from '../role/guards/roles.guard';\nimport { CreateUserRoleDto } from './dto/create-user-role.dto';\nimport { UserRoleDto } from './dto/user-role.dto';\n\nimport { UserRoleService } from './user-role.service';\n\n@ApiTags('user-role')\n@Controller('user-role')\n@ApiBearerAuth()\n@UseGuards(RolesGuard)\n@UseGuards(JwtAuthGuard)\n@Roles(RoleEnum.Admin)\nexport class UserRoleController {\n  constructor(private readonly userUserRolesService: UserRoleService) {}\n\n  @Post()\n  @ApiOperation({\n    operationId: 'userUserRole_create',\n    description: 'Endpoint to create a new userUserRole',\n  })\n  @ApiOkResponse({\n    description: 'Success userUserRole created',\n  })\n  async create(\n    @Body() createUserRoleDto: CreateUserRoleDto\n  ): Promise {\n    return this.userUserRolesService.create(createUserRoleDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    operationId: 'userUserRole_findAll',\n    description: 'Endpoint to find all',\n  })\n  async findAll(): Promise {\n    return this.userUserRolesService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    operationId: 'userUserRole_findOne',\n    description: 'Endpoint to create a new userUserRole',\n  })\n  @ApiOkResponse({\n    description: 'Success userUserRole created',\n  })\n  @ApiNotFoundResponse({\n    description: 'Was not able to find userUserRole',\n  })\n  async findOne(@Param('id') id: string) {\n    return this.userUserRolesService.findOne(id);\n  }\n\n  @ApiOperation({\n    operationId: 'userUserRole_delete',\n    description: 'Endpoint to delete all',\n  })\n  @Delete(':id')\n  async remove(@Param('id') id: string) {\n    return this.userUserRolesService.remove(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRoleCreatableInterface.html":{"url":"interfaces/UserRoleCreatableInterface.html","title":"interface - UserRoleCreatableInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRoleCreatableInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user-role/interfaces/user-role-creatable.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            roleId\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface UserRoleCreatableInterface {\n  userId: string;\n  roleId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRoleDto.html":{"url":"classes/UserRoleDto.html","title":"class - UserRoleDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRoleDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user-role/dto/user-role.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CommonEntityDto\n            \n\n            \n                Implements\n            \n            \n                            UserRoleInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                role\n                            \n                            \n                                roleId\n                            \n                            \n                                userId\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleDto\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: () => RoleDto, required: false})@Expose()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user-role/dto/user-role.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roleId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({format: 'uuid'})@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user-role/dto/user-role.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({format: 'uuid'})@IsUUID()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/user-role/dto/user-role.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', title: 'Created At', description: 'The date and time at which the resource was created.'})@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CommonEntityDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntityDto:22\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'uuid', title: 'Id', description: 'The primary key of the resource.'})@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CommonEntityDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntityDto:13\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({type: 'string', format: 'date-time', title: 'Updated At', description: 'The date and time at which the resource was last updated.'})@Expose()\n                        \n                    \n                \n                        \n                            \n                                Inherited from         CommonEntityDto\n\n                            \n                        \n                    \n                        \n                                Defined in         CommonEntityDto:31\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { Expose } from 'class-transformer';\nimport { IsUUID } from 'class-validator';\nimport { CommonEntityDto } from '../../../common/dto';\nimport { RoleDto } from '../../role/dto/role.dto';\nimport { UserRoleInterface } from '../interfaces';\n\nexport class UserRoleDto extends CommonEntityDto implements UserRoleInterface {\n  @ApiProperty({ format: 'uuid' })\n  @IsUUID()\n  userId!: string;\n\n  @ApiProperty({ format: 'uuid' })\n  @IsUUID()\n  roleId!: string;\n\n  @ApiProperty({ type: () => RoleDto, required: false })\n  @Expose()\n  role!: RoleDto;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserRoleFactory.html":{"url":"classes/UserRoleFactory.html","title":"class - UserRoleFactory","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserRoleFactory\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user-role/user-role.factory.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Factory\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Protected\n                                    Async\n                                entity\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Protected\n                        Async\n                        entity\n                        \n                    \n                \n            \n            \n                \n                    \n                    entity()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user-role/user-role.factory.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Factory } from '@concepta/typeorm-seeding';\nimport { UserRole } from './user-role.entity';\n\nexport class UserRoleFactory extends Factory {\n  protected async entity(): Promise {\n    const userRole = new UserRole();\n    return userRole;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UserRoleInterface.html":{"url":"interfaces/UserRoleInterface.html","title":"interface - UserRoleInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  UserRoleInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user-role/interfaces/user-role.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        CommonEntityInterface\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            roleId\n                                        \n                                \n                                \n                                        \n                                            userId\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        roleId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roleId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { CommonEntityInterface } from '../../../common/interfaces';\n\nexport interface UserRoleInterface extends CommonEntityInterface {\n  userId: string;\n  roleId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserRoleModule.html":{"url":"modules/UserRoleModule.html","title":"module - UserRoleModule","body":"\n                   \n\n\n\n\n    Modules\n    UserRoleModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserRoleModule\n\n\n\ncluster_UserRoleModule_providers\n\n\n\n\nUserRoleService\n\nUserRoleService\n\n\n\nUserRoleModule\n\nUserRoleModule\n\nUserRoleModule -->\n\nUserRoleService->UserRoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/user-role/user-role.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserRoleService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserRoleController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { UserRoleService } from './user-role.service';\nimport { UserRoleController } from './user-role.controller';\nimport { UserRole } from './user-role.entity';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([UserRole])],\n  controllers: [UserRoleController],\n  providers: [UserRoleService],\n})\nexport class UserRoleModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserRoleService.html":{"url":"injectables/UserRoleService.html","title":"injectable - UserRoleService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserRoleService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user-role/user-role.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Private\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user-role/user-role.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                    Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserRole: CreateUserRoleDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user-role/user-role.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserRole\n                                    \n                                                CreateUserRoleDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user-role/user-role.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user-role/user-role.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user-role/user-role.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user-role/user-role.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { plainToInstance } from 'class-transformer';\nimport { Repository } from 'typeorm';\n\nimport { Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { CreateUserRoleDto } from './dto/create-user-role.dto';\nimport { UserRoleDto } from './dto/user-role.dto';\nimport { UserRole } from './user-role.entity';\n\n@Injectable()\nexport class UserRoleService {\n  constructor(\n    @InjectRepository(UserRole)\n    private repo: Repository\n  ) {}\n\n  public async create(createUserRole: CreateUserRoleDto): Promise {\n    const userRole = this.repo.create(createUserRole);\n    const dbUserRole = await this.repo.save(userRole);\n    return plainToInstance(UserRoleDto, dbUserRole);\n  }\n\n  public async findAll(): Promise {\n    const userRoles = await this.repo.find();\n    return plainToInstance(UserRoleDto, userRoles);\n  }\n\n  private async findById(id: string): Promise {\n    const userRole = await this.repo.findOneBy({\n      id,\n    });\n    if (!userRole) throw new NotFoundException();\n    return userRole;\n  }\n\n  public async findOne(id: string): Promise {\n    const userRole = await this.findById(id);\n    return plainToInstance(UserRoleDto, userRole);\n  }\n\n  public async remove(id: string): Promise {\n    const userRole = await this.findById(id);\n    await this.repo.remove(userRole);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSeeder.html":{"url":"classes/UserSeeder.html","title":"class - UserSeeder","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSeeder\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.seeder.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Seeder\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                run\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        run\n                        \n                    \n                \n            \n            \n                \n                    \n                    run()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.seeder.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Seeder } from '@concepta/typeorm-seeding';\nimport { RoleFactory } from '../role/role.factory';\nimport { UserRoleFactory } from '../user-role/user-role.factory';\nimport { UserFactory } from './user.factory';\n\nexport class UserSeeder extends Seeder {\n  async run() {\n    // Create Roles\n    const adminRole = await this.factory(RoleFactory).create({\n      name: 'admin',\n    });\n    const userRole = await this.factory(RoleFactory).create({\n      name: 'user',\n    });\n\n    // Create User\n    const userWithAdminRole = await this.factory(UserFactory).create();\n    const userWithUserRole = await this.factory(UserFactory).create();\n\n    // Create User Roles\n    await this.factory(UserRoleFactory).create({\n      userId: userWithAdminRole.id,\n      roleId: adminRole.id,\n    });\n    await this.factory(UserRoleFactory).create({\n      userId: userWithUserRole.id,\n      roleId: userRole.id,\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                context\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Public\n                                    Async\n                                findAll\n                            \n                            \n                                    Public\n                                    Async\n                                findByEmail\n                            \n                            \n                                    Private\n                                    Async\n                                findById\n                            \n                            \n                                    Public\n                                    Async\n                                findOne\n                            \n                            \n                                    Public\n                                    Async\n                                remove\n                            \n                            \n                                    Public\n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updatePassword\n                            \n                            \n                                    Private\n                                    Async\n                                updateResetToken\n                            \n                            \n                                    Async\n                                updateResetTokenByEmail\n                            \n                            \n                                    Async\n                                validateUserPassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(repo: Repository, loggerService: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/user/user.service.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        repo\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggerService\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUser: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUser\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        remove\n                        \n                    \n                \n            \n            \n                \n                    \n                    remove(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:66\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updatePassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePassword(resetToken: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:145\n                \n            \n\n\n            \n                \n                    Update password if resetToken is valid\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    resetToken\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        rest Token that was sent to the email\n\n                                    \n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        updateResetToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateResetToken(user: User, ttlMinutes: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:183\n                \n            \n\n\n            \n                \n                    Generate a new reset token and save it on user with its expiration date\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    ttlMinutes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        User with new info\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateResetTokenByEmail\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateResetTokenByEmail(email: string, ttlMinutes: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:125\n                \n            \n\n\n            \n                \n                    Generate a new token for resetToken and\nadd expiration Token date\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        email to try to find the user\n\n                                    \n                                \n                                \n                                    ttlMinutes\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        times in minutes of how long token will be expired\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUserPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUserPassword(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.service.ts:91\n                \n            \n\n\n            \n                \n                    Get user based on username or email and validate password\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        User if password is valid\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/user/user.service.ts:22\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { plainToInstance } from 'class-transformer';\nimport { MoreThanOrEqual, Repository } from 'typeorm';\n\nimport {\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException,\n} from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\n\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { UserDto } from './dto/user.dto';\nimport { User } from './user.entity';\nimport { CryptUtil } from '../../common/utils/crypt.util';\nimport { LoggerService } from '../logger/logger.service';\nimport { UserNotFoundException } from './exceptions/user-not-found.exception';\nimport { randomUUID } from 'crypto';\n\n@Injectable()\nexport class UserService {\n  private context: string;\n  constructor(\n    @InjectRepository(User)\n    private repo: Repository,\n    private loggerService: LoggerService\n  ) {\n    this.context = this.constructor.name;\n  }\n\n  public async create(createUser: CreateUserDto): Promise {\n    const user = this.repo.create(createUser);\n    const dbUser = await this.repo.save(user);\n    return plainToInstance(UserDto, dbUser);\n  }\n\n  public async findAll(): Promise {\n    const users = await this.repo.find({\n      relations: ['userRoles.role'],\n    });\n    return plainToInstance(UserDto, users);\n  }\n\n  private async findById(id: string): Promise {\n    // Get without relationships\n    const user = await this.repo.findOne({\n      where: { id },\n      relations: ['userRoles.role'],\n    });\n    if (!user) throw new UserNotFoundException();\n    return user;\n  }\n\n  public async findOne(id: string): Promise {\n    const user = await this.findById(id);\n    return plainToInstance(UserDto, user);\n  }\n\n  public async findByEmail(email: string): Promise {\n    const user = await this.repo.findOne({\n      where: { email },\n    });\n    return plainToInstance(UserDto, user);\n  }\n\n  public async update(\n    id: string,\n    updateUserDto: UpdateUserDto\n  ): Promise {\n    const user = await this.findById(id);\n    const newUser: User = {\n      ...user,\n      ...updateUserDto,\n    };\n    this.repo.save(newUser);\n    return plainToInstance(UserDto, newUser);\n  }\n\n  public async remove(id: string): Promise {\n    const user = await this.findById(id);\n    await this.repo.remove(user);\n  }\n\n  /**\n   * Get user based on username or email and validate password\n   *\n   * @param AuthCredentialsDto\n   * @return User if password is valid\n   * @return null if password is not valid\n   */\n  async validateUserPassword(\n    username: string,\n    password: string\n  ): Promise {\n    // get the username\n    const user = await this.repo.findOne({\n      where: {\n        username,\n      },\n    });\n\n    // if user exists and has a valid password\n    if (\n      user &&\n      (await CryptUtil.validatePassword(password, user.password, user.salt))\n    ) {\n      return plainToInstance(UserDto, user);\n    } else {\n      this.loggerService.debug(\n        `Password was not valid for user ${user?.username}`,\n        this.context\n      );\n      return null;\n    }\n  }\n\n  /**\n   * Generate a new token for resetToken and\n   * add expiration Token date\n   *\n   * @param email email to try to find the user\n   * @param ttlMinutes times in minutes of how long token will be expired\n   * @return Promise\n   */\n  async updateResetTokenByEmail(\n    email: string,\n    ttlMinutes: number\n  ): Promise {\n    // try to find the user by email\n    const user = await this.repo.findOne({ where: { email } });\n\n    if (user) {\n      return this.updateResetToken(user, ttlMinutes);\n    } else {\n      return;\n    }\n  }\n\n  /**\n   * Update password if resetToken is valid\n   *\n   * @param resetToken rest Token that was sent to the email\n   * @return Promise\n   */\n  async updatePassword(\n    resetToken: string,\n    password: string\n  ): Promise {\n    // lookup user by reset token and get user with token not expired\n    const user = await this.repo.findOne({\n      where: {\n        resetToken,\n        resetTokenExp: MoreThanOrEqual(new Date()),\n      },\n    });\n\n    // got a user?\n    if (user) {\n      // yes, set the new password and overwrite token and exp\n      user.password = password;\n      user.resetToken = null;\n      user.resetTokenExp = null;\n      // try to save it\n      try {\n        return this.repo.save(user);\n      } catch (error) {\n        throw new InternalServerErrorException(\n          'Updating user password failed.'\n        );\n      }\n    } else {\n      throw new NotFoundException('Invalid token');\n    }\n  }\n\n  /**\n   * Generate a new reset token and save it on user with its expiration date\n   *\n   * @return User with new info\n   * @param user\n   * @param ttlMinutes\n   */\n  private async updateResetToken(\n    user: User,\n    ttlMinutes: number\n  ): Promise {\n    // current date\n    const now = new Date();\n\n    // new user token is a random uuid\n    user.resetToken = randomUUID();\n\n    // set the token expiration date\n    user.resetTokenExp = new Date(now.getTime() + ttlMinutes * 60 * 1000);\n\n    // call repo to persist it\n    return this.repo.save(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserSubscriber.html":{"url":"classes/UserSubscriber.html","title":"class - UserSubscriber","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserSubscriber\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/user/user.subscriber.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        EntitySubscriberInterface\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                _checkEmailUniqueness\n                            \n                            \n                                    Async\n                                _checkUsernameUniqueness\n                            \n                            \n                                    Async\n                                _hashInsertedPassword\n                            \n                            \n                                    Async\n                                _hashPassword\n                            \n                            \n                                    Async\n                                _hashUpdatedPassword\n                            \n                            \n                                    Async\n                                beforeInsert\n                            \n                            \n                                    Async\n                                beforeUpdate\n                            \n                            \n                                listenTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        _checkEmailUniqueness\n                        \n                    \n                \n            \n            \n                \n                    \n                    _checkEmailUniqueness(event: InsertEvent | UpdateEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.subscriber.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                InsertEvent | UpdateEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        _checkUsernameUniqueness\n                        \n                    \n                \n            \n            \n                \n                    \n                    _checkUsernameUniqueness(event: InsertEvent | UpdateEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.subscriber.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                InsertEvent | UpdateEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        _hashInsertedPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    _hashInsertedPassword(event: InsertEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.subscriber.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                InsertEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        _hashPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    _hashPassword(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.subscriber.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        _hashUpdatedPassword\n                        \n                    \n                \n            \n            \n                \n                    \n                    _hashUpdatedPassword(event: UpdateEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.subscriber.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        beforeInsert\n                        \n                    \n                \n            \n            \n                \n                    \n                    beforeInsert(event: InsertEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.subscriber.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                InsertEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        beforeUpdate\n                        \n                    \n                \n            \n            \n                \n                    \n                    beforeUpdate(event: UpdateEvent)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.subscriber.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                UpdateEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        listenTo\n                        \n                    \n                \n            \n            \n                \nlistenTo()\n                \n            \n\n\n            \n                \n                    Defined in src/modules/user/user.subscriber.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n  EntitySubscriberInterface,\n  Equal,\n  EventSubscriber,\n  InsertEvent,\n  Not,\n  UpdateEvent,\n} from 'typeorm';\nimport { FindOperator } from 'typeorm/find-options/FindOperator';\n\nimport { BadRequestException } from '@nestjs/common';\n\nimport { CryptUtil } from '../../common/utils/crypt.util';\n//import { UserRole } from '../user-role/user-role.entity';\n//import { Role } from '../role/role.entity';\n//import { AppRole } from '../../app.acl';\nimport { User } from './user.entity';\n\n@EventSubscriber()\nexport class UserSubscriber implements EntitySubscriberInterface {\n  listenTo() {\n    return User;\n  }\n\n  async beforeInsert(event: InsertEvent) {\n    await this._checkEmailUniqueness(event);\n    await this._checkUsernameUniqueness(event);\n    await this._hashInsertedPassword(event);\n  }\n\n  // async afterInsert(event: InsertEvent) {\n  //   //await this._assignDefaultUserRole(event);\n  // }\n\n  async beforeUpdate(event: UpdateEvent) {\n    await this._checkEmailUniqueness(event);\n    await this._checkUsernameUniqueness(event);\n    await this._hashUpdatedPassword(event);\n  }\n\n  async _hashPassword(user: User) {\n    // yes, new salt and hash it\n    user.salt = await CryptUtil.generateSalt();\n    user.password = await CryptUtil.hashPassword(user.password, user.salt);\n  }\n\n  async _hashInsertedPassword(event: InsertEvent) {\n    // user being inserted\n    const user = event.entity;\n\n    // hash the password\n    await this._hashPassword(user);\n\n    // all done\n    return;\n  }\n\n  async _hashUpdatedPassword(event: UpdateEvent) {\n    // user being updated\n    const user = event.entity as User;\n\n    // get existing record\n    const currentRecord = await event.manager.findOne(User, {\n      where: {\n        id: user.id,\n      },\n    });\n\n    // has it changed?\n    if (\n      currentRecord?.password &&\n      user?.password &&\n      user.password !== currentRecord.password\n    ) {\n      // yes, hash the password\n      await this._hashPassword(user);\n    }\n\n    // all done\n    return;\n  }\n\n  async _checkEmailUniqueness(event: InsertEvent | UpdateEvent) {\n    // user being inserted\n    const user = event.entity;\n\n    // does user have email set?\n    if (user?.email) {\n      // build the criteria\n      const criteria: {\n        where: {\n          id?: FindOperator;\n          email: FindOperator;\n        };\n      } = {\n        where: {\n          email: Equal(user.email),\n        },\n      };\n      // if user exists, skip own id\n      if (user.id) {\n        criteria.where.id = Not(user.id);\n      }\n      // query for count of users with exact e-mail address\n      const count = await event.manager.count(User, criteria);\n      // if any found, a foreign key violation would occur\n      if (count > 0) {\n        throw new BadRequestException('Email address already exists.');\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  async _checkUsernameUniqueness(event: InsertEvent | UpdateEvent) {\n    // user being inserted\n    const user = event.entity;\n\n    // does user have email set?\n    if (user?.username) {\n      // build the criteria\n      const criteria: {\n        where: {\n          id?: FindOperator;\n          username: FindOperator;\n        };\n      } = {\n        where: {\n          username: Equal(user.username),\n        },\n      };\n      // if user exists, skip own id\n      if (user.id) {\n        criteria.where.id = Not(user.id);\n      }\n      // query for count of users with exact e-mail address\n      const count = await event.manager.count(User, criteria);\n      // if any found, a foreign key violation would occur\n      if (count > 0) {\n        throw new BadRequestException('Username already exists.');\n      } else {\n        return;\n      }\n    } else {\n      return;\n    }\n  }\n\n  //   async _assignDefaultUserRole(event: InsertEvent) {\n  //     // get the user that was inserted\n  //     const user = event.entity;\n\n  //     // already has roles?\n  //     if (Array.isArray(user.userRoles) && user.userRoles.length) {\n  //       // yes, leave roles alone\n  //       return;\n  //     }\n\n  //     // find the role\n  //     const defaultUserRole = await event.manager.findOne(Role, {\n  //       name: AppRole.User,\n  //     });\n\n  //     // did we get the role?\n  //     if (defaultUserRole) {\n  //       // assign the role to the user\n  //       const userRole = event.manager.create(UserRole, {\n  //         user,\n  //         role: defaultUserRole,\n  //       });\n  //       // save it\n  //       await event.manager.save(userRole);\n  //     } else {\n  //       throw new InternalServerErrorException(\n  //         'Failed to find default role to assign to new user.'\n  //       );\n  //     }\n  //   }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/awsS3UploadService.html":{"url":"injectables/awsS3UploadService.html","title":"injectable - awsS3UploadService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  awsS3UploadService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/upload/aws-s3-upload.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                s3\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                uploadFile\n                            \n                            \n                                    Private\n                                    Async\n                                uploadToS3\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: ConfigType<>)\n                    \n                \n                        \n                            \n                                Defined in src/modules/upload/aws-s3-upload.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ConfigType<>\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        uploadFile\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadFile(file: Express.Multer.File)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/upload/aws-s3-upload.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        Async\n                        uploadToS3\n                        \n                    \n                \n            \n            \n                \n                    \n                    uploadToS3(file: Buffer, bucket: string, name: string, mimetype: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/upload/aws-s3-upload.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Buffer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    bucket\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    mimetype\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        s3\n                        \n                    \n                \n            \n                \n                    \n                        Type :     S3\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/upload/aws-s3-upload.service.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Inject,\n  Injectable,\n  InternalServerErrorException,\n} from '@nestjs/common';\nimport { ConfigType } from '@nestjs/config';\nimport { S3 } from 'aws-sdk';\nimport { awsS3Config } from '../../config/aws-s3.config';\nimport { FileResponseDto } from './dto/file-response.dto';\n\n@Injectable()\nexport class awsS3UploadService {\n  private s3!: S3;\n  constructor(\n    @Inject(awsS3Config.KEY)\n    private config: ConfigType\n  ) {\n    this.s3 = new S3({\n      accessKeyId: config.accessKeyId,\n      secretAccessKey: config.secretAccessKey,\n    });\n  }\n\n  async uploadFile(file: Express.Multer.File): Promise {\n    const { originalname } = file;\n\n    return await this.uploadToS3(\n      file.buffer,\n      this.config.bucket,\n      originalname,\n      file.mimetype\n    );\n  }\n\n  private async uploadToS3(\n    file: Buffer,\n    bucket: string,\n    name: string,\n    mimetype: string\n  ): Promise {\n    const params: S3.Types.PutObjectRequest = {\n      Bucket: bucket,\n      Key: String(name),\n      Body: file,\n      ACL: 'public-read',\n      ContentType: mimetype,\n      ContentDisposition: 'inline',\n      //createBundleRenderer\n      // CreateBucketConfiguration: {\n      //   LocationConstraint: 'ap-south-1',\n      // },\n    };\n\n    try {\n      const s3Response = await this.s3.upload(params).promise();\n      return new FileResponseDto(\n        s3Response.Key,\n        s3Response.Key,\n        s3Response.Location\n      );\n    } catch (e) {\n      console.log(e);\n      throw new InternalServerErrorException('Error Trying to upload to S3');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/common.entity.ts\n            \n            class\n            CommonEntity\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/constants.ts\n            \n            variable\n            API_KEY_HEADER\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants.ts\n            \n            variable\n            EMAIL_TEMPLATE_RESET_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants.ts\n            \n            variable\n            GITHUB_MODULE_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants.ts\n            \n            variable\n            JWT_MODULE_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants.ts\n            \n            variable\n            PUBLIC_FOLDER_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants.ts\n            \n            variable\n            PUBLIC_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants.ts\n            \n            variable\n            PUBLIC_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants.ts\n            \n            variable\n            SERVER_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants.ts\n            \n            variable\n            TYPEORM_MODULE_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants.ts\n            \n            variable\n            UPLOAD_FOLDER_NAME\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants.ts\n            \n            variable\n            UPLOAD_PATH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/constants.ts\n            \n            variable\n            UPLOAD_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/api-file-decorator.ts\n            \n            variable\n            ApiFileDecorator\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/is-strong-password.ts\n            \n            function\n            IsStrongPassword\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/is-strong-password.ts\n            \n            function\n            IsUUIDParam\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/decorators/is-uuid-param.ts\n            \n            function\n            UUIDParam\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/doc/swagger.ts\n            \n            function\n            swagger\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/dto/common-entity.dto.ts\n            \n            class\n            CommonEntityDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/filters/error-code-exception.filter.ts\n            \n            class\n            ErrorCodeExceptionFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/transform.interceptor.ts\n            \n            injectable\n            TransformInterceptor\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interceptors/transform.interceptor.ts\n            \n            interface\n            Response\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/interfaces/common-entity.interface.ts\n            \n            interface\n            CommonEntityInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/interfaces/error-code-exception.interface.ts\n            \n            interface\n            ErrorCodeExceptionInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interfaces/github-config.interface.ts\n            \n            interface\n            GithubConfigInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/interfaces/jwt-config.interface.ts\n            \n            interface\n            JwtConfigInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/interfaces/server-config.interface.ts\n            \n            interface\n            ServerConfigInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/utils/crypt.util.ts\n            \n            class\n            CryptUtil\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/common/utils/file-utils.ts\n            \n            variable\n            editFileName\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/common/utils/file-utils.ts\n            \n            variable\n            imageFileFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/auth.config.ts\n            \n            variable\n            authConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/aws-s3.config.ts\n            \n            variable\n            awsS3Config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/email.config.ts\n            \n            variable\n            emailConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/github.config.ts\n            \n            variable\n            githubConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/jwt.config.ts\n            \n            variable\n            jwtConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/logger-sentry.config.ts\n            \n            variable\n            loggerSentryConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/logger.config.ts\n            \n            function\n            splitLogLevel\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/logger.config.ts\n            \n            variable\n            loggerConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/server.config.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/typeorm.config.ts\n            \n            variable\n            typeormConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migrations/1664757497775-initTables.ts\n            \n            class\n            initTables1664757497775\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migrations/1665198934490-AddResetToken.ts\n            \n            class\n            AddResetToken1665198934490\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/migrations/1665882607149-Federated.ts\n            \n            class\n            Federated1665882607149\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/auth-github.controller.ts\n            \n            controller\n            AuthGithubController\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                src/modules/auth/decorator/auth-user.decorator.ts\n            \n            variable\n            AuthUser\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/auth-email.dto.ts\n            \n            class\n            AuthEmailDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/auth-login-dto.ts\n            \n            class\n            AuthLoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/auth-refresh.dto.ts\n            \n            class\n            AuthRefreshDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/auth-response.dto.ts\n            \n            class\n            AuthResponseDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/auth/dto/auth-update-password.dto.ts\n            \n            class\n            AuthUpdatePasswordDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/guards/github-auth-guard.ts\n            \n            injectable\n            GithubAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/guards/jwt-auth-guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/guards/local-auth-guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/auth/interfaces/auth-config.interface.ts\n            \n            interface\n            AuthConfigInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/interfaces/auth-login.interface.ts\n            \n            class\n            AuthLoginInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/interfaces/github-profile.interface.ts\n            \n            interface\n            GitHubProfileInterface\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/interfaces/jwt-payload.interface.ts\n            \n            interface\n            JwtPayload\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/jwt-config.service.ts\n            \n            injectable\n            JwtConfigService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/auth/midleware/api-key.middleware.ts\n            \n            injectable\n            ApiKeyMiddleware\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/auth/strategies/github.strategy.ts\n            \n            injectable\n            AuthGithubStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/strategies/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/auth/strategies/local-strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/email/constants.ts\n            \n            variable\n            SEND_EMAIL_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/email/constants.ts\n            \n            variable\n            TEMPLATE_RESET_PASSWORD\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/email/constants.ts\n            \n            variable\n            TEMPLATE_TEST\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/email/dto/email.dto.ts\n            \n            class\n            EmailDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/email/email.controller.ts\n            \n            controller\n            EmailController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/email/email.service.ts\n            \n            injectable\n            EmailService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/modules/email/interfaces/email-module-options.interface.ts\n            \n            interface\n            EmailModuleOptionsInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/email/interfaces/email-options.interface.ts\n            \n            interface\n            EmailOptionsInterface\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/email/interfaces/send-email-service.interface.ts\n            \n            interface\n            SendEmailServiceInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/federated/dto/create-federated.dto.ts\n            \n            class\n            FederatedCreateDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/federated/dto/federated.dto.ts\n            \n            class\n            FederatedDto\n            \n                42 %\n                (3/7)\n            \n        \n        \n            \n                \n                src/modules/federated/dto/update-federated.dto.ts\n            \n            class\n            FederatedUpdateDto\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/federated/federated.entity.ts\n            \n            entity\n            Federated\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/federated/federated.service.ts\n            \n            injectable\n            FederatedService\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/modules/federated/interfaces/federated.interface.ts\n            \n            interface\n            FederatedInterface\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/modules/handlebar-email/handlebar-email.service.ts\n            \n            injectable\n            HandlebarEmailService\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/modules/logger/interfaces/logger-config.interface.ts\n            \n            interface\n            LoggerConfigInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/logger/interfaces/logger-sentry-config.interface.ts\n            \n            interface\n            LoggerSentryConfigInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/logger/interfaces/logger-transport.interface.ts\n            \n            interface\n            LoggerTransportInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/logger/logger-exception.filter.ts\n            \n            injectable\n            LoggerExceptionFilter\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/modules/logger/logger-request.interceptor.ts\n            \n            injectable\n            LoggerRequestInterceptor\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/modules/logger/logger-transport.service.ts\n            \n            injectable\n            LoggerTransportService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/logger/logger.service.ts\n            \n            injectable\n            LoggerService\n            \n                9 %\n                (1/11)\n            \n        \n        \n            \n                \n                src/modules/logger/transports/logger-sentry.transport.ts\n            \n            injectable\n            LoggerSentryTransport\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/role/decorator/roles.decorator.ts\n            \n            variable\n            Roles\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/role/decorator/roles.decorator.ts\n            \n            variable\n            ROLES_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/role/dto/create-role.dto.ts\n            \n            class\n            CreateRoleDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/role/dto/role.dto.ts\n            \n            class\n            RoleDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/role/dto/update-role.dto.ts\n            \n            class\n            UpdateRoleDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/role/guards/roles.guard.ts\n            \n            guard\n            RolesGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/role/interfaces/role.interface.ts\n            \n            interface\n            RoleInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/role/role.controller.ts\n            \n            controller\n            RoleController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/role/role.entity.ts\n            \n            entity\n            Role\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/role/role.entity.ts\n            \n            class\n            Role\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/role/role.factory.ts\n            \n            class\n            RoleFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/role/role.service.ts\n            \n            injectable\n            RoleService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/upload/aws-s3-upload.service.ts\n            \n            injectable\n            awsS3UploadService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/upload/dto/file-response.dto.ts\n            \n            class\n            FileResponseDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/upload/interfaces/aws-s3-config.interface.ts\n            \n            interface\n            AwsS3ConfigInterface\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/upload/upload.controller.ts\n            \n            controller\n            UploadController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user-role/dto/create-user-role.dto.ts\n            \n            class\n            CreateUserRoleDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user-role/dto/user-role.dto.ts\n            \n            class\n            UserRoleDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/user-role/interfaces/user-role-creatable.interface.ts\n            \n            interface\n            UserRoleCreatableInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user-role/interfaces/user-role.interface.ts\n            \n            interface\n            UserRoleInterface\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user-role/user-role.controller.ts\n            \n            controller\n            UserRoleController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/user-role/user-role.entity.ts\n            \n            entity\n            UserRole\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user-role/user-role.entity.ts\n            \n            class\n            UserRole\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/user-role/user-role.factory.ts\n            \n            class\n            UserRoleFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user-role/user-role.service.ts\n            \n            injectable\n            UserRoleService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/user/__fixtures__/ormconfig.fixture.ts\n            \n            variable\n            ormConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/constant/user.constants.ts\n            \n            variable\n            USER_EMAIL_MAX_LENGTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/constant/user.constants.ts\n            \n            variable\n            USER_EMAIL_MIN_LENGTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/constant/user.constants.ts\n            \n            variable\n            USER_HEIGHT_MAX\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/constant/user.constants.ts\n            \n            variable\n            USER_HEIGHT_MIN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/constant/user.constants.ts\n            \n            variable\n            USER_NAME_MAX_LENGTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/constant/user.constants.ts\n            \n            variable\n            USER_NAME_MIN_LENGTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/constant/user.constants.ts\n            \n            variable\n            USER_PASSWORD_MIN_LENGTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/constant/user.constants.ts\n            \n            variable\n            USER_REPORT_CACHE_KEY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/dto/user.dto.ts\n            \n            class\n            UserDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/user/exceptions/user-not-found.exception.ts\n            \n            class\n            UserNotFoundException\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/interfaces/user-creatable.interface.ts\n            \n            interface\n            UserCreatableInterface\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/interfaces/user-ownable.interface.ts\n            \n            interface\n            UserOwnableInterface\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user/interfaces/user.interface.ts\n            \n            interface\n            UserInterface\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/user/user-report.controller.ts\n            \n            controller\n            UserReportController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/user/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/user/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                src/modules/user/user.factory.ts\n            \n            class\n            UserFactory\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user/user.seeder.ts\n            \n            class\n            UserSeeder\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/user/user.service.ts\n            \n            injectable\n            UserService\n            \n                28 %\n                (4/14)\n            \n        \n        \n            \n                \n                src/modules/user/user.subscriber.ts\n            \n            class\n            UserSubscriber\n            \n                0 %\n                (0/9)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs-modules/mailer : ^1.8.1\n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.2.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^9.0.0\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/passport : ^9.0.0\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/serve-static : ^3.0.0\n        \n            @nestjs/swagger : ^6.1.2\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            @sentry/node : ^7.14.0\n        \n            aws-sdk : ^2.1232.0\n        \n            bcrypt : ^5.0.1\n        \n            cache-manager : 4.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            handlebars : ^4.7.7\n        \n            jest-mock-extended : ^3.0.1\n        \n            nodemailer : ^6.8.0\n        \n            passport : ^0.6.0\n        \n            passport-github : ^1.1.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            pg : ^8.8.0\n        \n            pg-mem : ^2.6.3\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            sqlite3 : ^5.1.2\n        \n            typeorm : ^0.3.9\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            RoleEnum   (src/.../role.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/role/enum/role.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        RoleEnum\n                    \n                \n                        \n                            \n                                 User\n                            \n                        \n                        \n                            \n                                Value : user\n                            \n                        \n                        \n                            \n                                 Admin\n                            \n                        \n                        \n                            \n                                Value : admin\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            IsStrongPassword   (src/.../is-strong-password.ts)\n                        \n                        \n                            IsUUIDParam   (src/.../is-strong-password.ts)\n                        \n                        \n                            splitLogLevel   (src/.../logger.config.ts)\n                        \n                        \n                            swagger   (src/.../swagger.ts)\n                        \n                        \n                            UUIDParam   (src/.../is-uuid-param.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/common/decorators/is-strong-password.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        IsStrongPassword\n                        \n                    \n                \n            \n            \n                \nIsStrongPassword()\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Returns :     PropertyDecorator\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        IsUUIDParam\n                        \n                    \n                \n            \n            \n                \nIsUUIDParam(property: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ParameterDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/config/logger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        splitLogLevel\n                        \n                    \n                \n            \n            \n                \nsplitLogLevel(levels: string)\n                \n            \n\n\n\n\n            \n                \n                    Helper to split log level string and assign to correct log level type.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    levels\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     LogLevel[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/common/doc/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        swagger\n                        \n                    \n                \n            \n            \n                \nswagger(app: INestApplication, environment: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    environment\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/common/decorators/is-uuid-param.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UUIDParam\n                        \n                    \n                \n            \n            \n                \nUUIDParam(property: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    property\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     ParameterDecorator\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/initTables1664757497775.html":{"url":"classes/initTables1664757497775.html","title":"class - initTables1664757497775","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  initTables1664757497775\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1664757497775-initTables.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'initTables1664757497775'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1664757497775-initTables.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1664757497775-initTables.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1664757497775-initTables.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class initTables1664757497775 implements MigrationInterface {\n  name = 'initTables1664757497775';\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"user\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"createdAt\" TIMESTAMP NOT NULL DEFAULT now(), \"updatedAt\" TIMESTAMP NOT NULL DEFAULT now(), \"username\" citext NOT NULL, \"password\" text NOT NULL, \"salt\" text, \"firstName\" citext, \"lastName\" citext, \"email\" citext NOT NULL, \"active\" boolean NOT NULL DEFAULT true, CONSTRAINT \"UQ_e12875dfb3b1d92d7d7c5377e22\" UNIQUE (\"email\"), CONSTRAINT \"UQ_78a916df40e02a9deb1c4b75edb\" UNIQUE (\"username\"), CONSTRAINT \"PK_cace4a159ff9f2512dd42373760\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"user_role\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"createdAt\" TIMESTAMP NOT NULL DEFAULT now(), \"updatedAt\" TIMESTAMP NOT NULL DEFAULT now(), \"userId\" uuid NOT NULL, \"roleId\" uuid NOT NULL, CONSTRAINT \"UQ_7b4e17a669299579dfa55a3fc35\" UNIQUE (\"userId\", \"roleId\"), CONSTRAINT \"PK_fb2e442d14add3cefbdf33c4561\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `CREATE TABLE \"role\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"createdAt\" TIMESTAMP NOT NULL DEFAULT now(), \"updatedAt\" TIMESTAMP NOT NULL DEFAULT now(), \"name\" character varying NOT NULL, CONSTRAINT \"UQ_ae4578dcaed5adff96595e61660\" UNIQUE (\"name\"), CONSTRAINT \"PK_b36bcfe02fc8de3c57a8b2391c2\" PRIMARY KEY (\"id\"))`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user_role\" ADD CONSTRAINT \"FK_ab40a6f0cd7d3ebfcce082131fd\" FOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user_role\" ADD CONSTRAINT \"FK_dba55ed826ef26b5b22bd39409b\" FOREIGN KEY (\"roleId\") REFERENCES \"role\"(\"id\") ON DELETE NO ACTION ON UPDATE NO ACTION`\n    );\n  }\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `ALTER TABLE \"user_role\" DROP CONSTRAINT \"FK_dba55ed826ef26b5b22bd39409b\"`\n    );\n    await queryRunner.query(\n      `ALTER TABLE \"user_role\" DROP CONSTRAINT \"FK_ab40a6f0cd7d3ebfcce082131fd\"`\n    );\n    await queryRunner.query(`DROP TABLE \"role\"`);\n    await queryRunner.query(`DROP TABLE \"user_role\"`);\n    await queryRunner.query(`DROP TABLE \"user\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModuleFixture\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        EmailModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FederatedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        HandlebarEmailModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        RoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UploadModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserRoleModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModuleFixture\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_FederatedModule\n\n\n\ncluster_FederatedModule_exports\n\n\n\ncluster_FederatedModule_providers\n\n\n\ncluster_HandlebarEmailModule\n\n\n\ncluster_HandlebarEmailModule_exports\n\n\n\ncluster_HandlebarEmailModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_RoleModule\n\n\n\ncluster_RoleModule_providers\n\n\n\ncluster_UploadModule\n\n\n\ncluster_UploadModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserRoleModule\n\n\n\ncluster_UserRoleModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nEmailModule\n\nEmailModule\n\nAppModule -->\n\nEmailModule->AppModule\n\n\n\n\n\nFederatedModule\n\nFederatedModule\n\nAuthModule -->\n\nFederatedModule->AuthModule\n\n\n\nAppModule -->\n\nFederatedModule->AppModule\n\n\n\n\n\nFederatedService \n\nFederatedService \n\nFederatedService  -->\n\nFederatedModule->FederatedService \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nLoggerModule->UserModule\n\n\n\nAppModule -->\n\nLoggerModule->AppModule\n\n\n\n\n\nLoggerService \n\nLoggerService \n\nLoggerService  -->\n\nLoggerModule->LoggerService \n\n\n\n\n\nRoleModule\n\nRoleModule\n\nAppModule -->\n\nRoleModule->AppModule\n\n\n\n\n\nUploadModule\n\nUploadModule\n\nAppModule -->\n\nUploadModule->AppModule\n\n\n\nFederatedModule -->\n\nUserModule->FederatedModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppModuleFixture\n\nAppModuleFixture\n\nAppModuleFixture -->\n\nUserModule->AppModuleFixture\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserRoleModule\n\nUserRoleModule\n\nAppModule -->\n\nUserRoleModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthGithubStrategy\n\nAuthGithubStrategy\n\nAuthModule -->\n\nAuthGithubStrategy->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalAuthGuard\n\nLocalAuthGuard\n\nAuthModule -->\n\nLocalAuthGuard->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nFederatedService\n\nFederatedService\n\nFederatedModule -->\n\nFederatedService->FederatedModule\n\n\n\n\n\nHandlebarEmailService \n\nHandlebarEmailService \n\n\n\nHandlebarEmailModule\n\nHandlebarEmailModule\n\nHandlebarEmailService  -->\n\nHandlebarEmailModule->HandlebarEmailService \n\n\n\n\n\nHandlebarEmailService\n\nHandlebarEmailService\n\nHandlebarEmailModule -->\n\nHandlebarEmailService->HandlebarEmailModule\n\n\n\n\n\nLoggerSentryTransport\n\nLoggerSentryTransport\n\nLoggerModule -->\n\nLoggerSentryTransport->LoggerModule\n\n\n\n\n\nLoggerService\n\nLoggerService\n\nLoggerModule -->\n\nLoggerService->LoggerModule\n\n\n\n\n\nLoggerTransportService\n\nLoggerTransportService\n\nLoggerModule -->\n\nLoggerTransportService->LoggerModule\n\n\n\n\n\nRoleService\n\nRoleService\n\nRoleModule -->\n\nRoleService->RoleModule\n\n\n\n\n\nawsS3UploadService\n\nawsS3UploadService\n\nUploadModule -->\n\nawsS3UploadService->UploadModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\nUserRoleService\n\nUserRoleService\n\nUserRoleModule -->\n\nUserRoleService->UserRoleModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        11 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    23 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    35 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    23 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            FederatedCreatableInterface   (src/.../federated-creatable.interface.ts)\n                        \n                        \n                            FederatedUpdatableInterface   (src/.../federated-updatable.interface.ts)\n                        \n                        \n                            UserUpdatableInterface   (src/.../user-updatable.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/federated/interfaces/federated-creatable.interface.ts\n    \n    \n        \n            \n                \n                    \n                    FederatedCreatableInterface\n                \n            \n            \n                \n                            Pick\n\n                \n            \n        \n    \n    src/modules/federated/interfaces/federated-updatable.interface.ts\n    \n    \n        \n            \n                \n                    \n                    FederatedUpdatableInterface\n                \n            \n            \n                \n                            Pick\n\n                \n            \n        \n    \n    src/modules/user/interfaces/user-updatable.interface.ts\n    \n    \n        \n            \n                \n                    \n                    UserUpdatableInterface\n                \n            \n            \n                \n                            Partial>\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            API_KEY_HEADER   (src/.../constants.ts)\n                        \n                        \n                            ApiFileDecorator   (src/.../api-file-decorator.ts)\n                        \n                        \n                            authConfig   (src/.../auth.config.ts)\n                        \n                        \n                            AuthUser   (src/.../auth-user.decorator.ts)\n                        \n                        \n                            awsS3Config   (src/.../aws-s3.config.ts)\n                        \n                        \n                            editFileName   (src/.../file-utils.ts)\n                        \n                        \n                            EMAIL_TEMPLATE_RESET_PASSWORD   (src/.../constants.ts)\n                        \n                        \n                            emailConfig   (src/.../email.config.ts)\n                        \n                        \n                            GITHUB_MODULE_CONFIG   (src/.../constants.ts)\n                        \n                        \n                            githubConfig   (src/.../github.config.ts)\n                        \n                        \n                            imageFileFilter   (src/.../file-utils.ts)\n                        \n                        \n                            JWT_MODULE_CONFIG   (src/.../constants.ts)\n                        \n                        \n                            jwtConfig   (src/.../jwt.config.ts)\n                        \n                        \n                            loggerConfig   (src/.../logger.config.ts)\n                        \n                        \n                            loggerSentryConfig   (src/.../logger-sentry.config.ts)\n                        \n                        \n                            ormConfig   (src/.../ormconfig.fixture.ts)\n                        \n                        \n                            PUBLIC_FOLDER_NAME   (src/.../constants.ts)\n                        \n                        \n                            PUBLIC_PATH   (src/.../constants.ts)\n                        \n                        \n                            PUBLIC_URL   (src/.../constants.ts)\n                        \n                        \n                            Roles   (src/.../roles.decorator.ts)\n                        \n                        \n                            ROLES_KEY   (src/.../roles.decorator.ts)\n                        \n                        \n                            SEND_EMAIL_TOKEN   (src/.../constants.ts)\n                        \n                        \n                            SERVER_CONFIG   (src/.../constants.ts)\n                        \n                        \n                            serverConfig   (src/.../server.config.ts)\n                        \n                        \n                            TEMPLATE_RESET_PASSWORD   (src/.../constants.ts)\n                        \n                        \n                            TEMPLATE_TEST   (src/.../constants.ts)\n                        \n                        \n                            TYPEORM_MODULE_CONFIG   (src/.../constants.ts)\n                        \n                        \n                            typeormConfig   (src/.../typeorm.config.ts)\n                        \n                        \n                            UPLOAD_FOLDER_NAME   (src/.../constants.ts)\n                        \n                        \n                            UPLOAD_PATH   (src/.../constants.ts)\n                        \n                        \n                            UPLOAD_URL   (src/.../constants.ts)\n                        \n                        \n                            USER_EMAIL_MAX_LENGTH   (src/.../user.constants.ts)\n                        \n                        \n                            USER_EMAIL_MIN_LENGTH   (src/.../user.constants.ts)\n                        \n                        \n                            USER_HEIGHT_MAX   (src/.../user.constants.ts)\n                        \n                        \n                            USER_HEIGHT_MIN   (src/.../user.constants.ts)\n                        \n                        \n                            USER_NAME_MAX_LENGTH   (src/.../user.constants.ts)\n                        \n                        \n                            USER_NAME_MIN_LENGTH   (src/.../user.constants.ts)\n                        \n                        \n                            USER_PASSWORD_MIN_LENGTH   (src/.../user.constants.ts)\n                        \n                        \n                            USER_REPORT_CACHE_KEY   (src/.../user.constants.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        API_KEY_HEADER\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'api_key'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        EMAIL_TEMPLATE_RESET_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'resetPassword'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GITHUB_MODULE_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'GITHUB_MODULE_CONFIG'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        JWT_MODULE_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'JWT_MODULE_CONFIG'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PUBLIC_FOLDER_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'public'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PUBLIC_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `./${PUBLIC_FOLDER_NAME}`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PUBLIC_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `/${PUBLIC_FOLDER_NAME}`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SERVER_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SERVER_CONFIG'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TYPEORM_MODULE_CONFIG\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'TYPEORM_MODULE_CONFIG'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPLOAD_FOLDER_NAME\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'files'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPLOAD_PATH\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `./${UPLOAD_FOLDER_NAME}`\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UPLOAD_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `/${UPLOAD_FOLDER_NAME}`\n                    \n                \n\n\n        \n    \n\n    src/common/decorators/api-file-decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ApiFileDecorator\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (fileName = 'file'): MethodDecorator =>\n  (\n    target: object,\n    propertyKey: string | symbol,\n    descriptor: PropertyDescriptor\n  ) => {\n    ApiBody({\n      schema: {\n        type: 'object',\n        properties: {\n          [fileName]: {\n            type: 'string',\n            format: 'binary',\n          },\n        },\n      },\n    })(target, propertyKey, descriptor);\n  }\n                    \n                \n\n\n        \n    \n\n    src/config/auth.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        authConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\n  'AUTH_MODULE_CONFIG',\n  (): AuthConfigInterface => ({\n    resetToken: {\n      ttl: process.env?.AUTH_RESET_TOKEN_TTL\n        ? Number(process.env?.AUTH_RESET_TOKEN_TTL)\n        : 2 * 60,\n    },\n  })\n)\n                    \n                \n\n\n        \n    \n\n    src/modules/auth/decorator/auth-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (data: string, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user = request.user;\n\n    return data ? user?.[data] : user;\n  }\n)\n                    \n                \n\n            \n                \n                    Decorator that takes a property name as key, and returns the\nassociated value if it exists (or undefined if it doesn't exist,\nor if the user object has not been created).\n```ts\n\n                \n            \n\n        \n    \n\n    src/config/aws-s3.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        awsS3Config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\n  'AWS_MODULE_S3_CONFIG',\n  (): AwsS3ConfigInterface => {\n    return {\n      accessKeyId: process.env?.BUCKETEER_AWS_ACCESS_KEY_ID ?? '',\n      secretAccessKey: process.env?.BUCKETEER_AWS_SECRET_ACCESS_KEY ?? '',\n      bucket: process.env?.BUCKETEER_BUCKET_NAME ?? '',\n    };\n  }\n)\n                    \n                \n\n\n        \n    \n\n    src/common/utils/file-utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        editFileName\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  req: any,\n  file: Express.Multer.File,\n  callback: any\n) => {\n  const name = file.originalname.split('.')[0];\n  const fileExtName = extname(file.originalname);\n  const randomName = Array(4)\n    .fill(null)\n    .map(() => Math.round(Math.random() * 16).toString(16))\n    .join('');\n  callback(null, `${name}-${randomName}${fileExtName}`);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageFileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  req: any,\n  file: Express.Multer.File,\n  callback: any\n) => {\n  if (!file?.originalname?.match(/\\.(jpg|jpeg|png|gif)$/)) {\n    return callback(new Error('Only image files are allowed!'), false);\n  }\n  callback(null, true);\n}\n                    \n                \n\n\n        \n    \n\n    src/config/email.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        emailConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\n  'APP_EMAIL_MODULE_CONFIG',\n  (): MailerOptions => ({\n    transport: {\n      host: process.env?.EMAIL_SMTP_SERVER ?? 'smtp.mailgun.org',\n      port: process.env?.EMAIL_SMTP_PORT\n        ? Number(process.env?.EMAIL_SMTP_PORT)\n        : 587,\n      auth: {\n        user: process.env?.EMAIL_SMTP_LOGIN ?? '',\n        pass: process.env?.EMAIL_SMTP_PASSWORD ?? '',\n      },\n    },\n    defaults: {\n      from: process.env?.MAILGUN_FROM_EMAIL ?? '',\n    },\n    template: {\n      dir:\n        __dirname +\n        '/../../' +\n        (process.env?.MAILGUN_TEMPLATE_PATH ?? '/templates'),\n      adapter: new HandlebarsAdapter(),\n      options: {\n        strict: true,\n      },\n    },\n  })\n)\n                    \n                \n\n\n        \n    \n\n    src/config/github.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        githubConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\n  GITHUB_MODULE_CONFIG,\n  (): GithubConfigInterface => ({\n    clientId: process.env.GITHUB_CLIENT_ID ?? 'client_id',\n    clientSecret: process.env.GITHUB_CLIENT_SECRET ?? 'secret',\n    callbackURL: process.env.GITHUB_CALLBACK_URL ?? 'callback_url',\n  })\n)\n                    \n                \n\n\n        \n    \n\n    src/config/jwt.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\n  JWT_MODULE_CONFIG,\n  (): JwtConfigInterface => ({\n    secret: process.env.JWT_SECRET || 'there is no access secret',\n    access: {\n      signOptions: {\n        expiresIn: process.env.JWT_ACCESS_EXPIRES || '1h',\n      },\n    },\n    refresh: {\n      signOptions: {\n        expiresIn: process.env.JWT_REFRESH_EXPIRES || '1y',\n      },\n    },\n  })\n)\n                    \n                \n\n\n        \n    \n\n    src/config/logger.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loggerConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\n  'LOGGER_MODULE_CONFIG',\n  (): LoggerConfigInterface => ({\n    logLevel: process.env?.LOG_LEVEL\n      ? splitLogLevel(process.env.LOG_LEVEL)\n      : ['error'],\n    transportLogLevel: process.env?.TRANSPORT_LOG_LEVEL\n      ? splitLogLevel(process.env.TRANSPORT_LOG_LEVEL)\n      : ['error'],\n  })\n)\n                    \n                \n\n\n        \n    \n\n    src/config/logger-sentry.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loggerSentryConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\n  'LOGGER_MODULE_SENTRY_CONFIG',\n  (): LoggerSentryConfigInterface => ({\n    dsn: process.env?.SENTRY_DSN ?? '',\n    logLevelMap: (logLevel: LogLevel): SeverityLevel => {\n      switch (logLevel) {\n        case 'error':\n          return 'error';\n        case 'debug':\n          return 'debug';\n        case 'log':\n          return 'log';\n        case 'warn':\n          return 'warning';\n        case 'verbose':\n          return 'info';\n      }\n    },\n  })\n)\n                    \n                \n\n\n        \n    \n\n    src/modules/user/__fixtures__/ormconfig.fixture.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ormConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     DataSourceOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n  type: 'postgres',\n  synchronize: true,\n  entities: [User, UserRole, Role, Federated],\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/role/decorator/roles.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        Roles\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (...roles: RoleEnum[]) => SetMetadata(ROLES_KEY, roles)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ROLES_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'roles'\n                    \n                \n\n\n        \n    \n\n    src/modules/email/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SEND_EMAIL_TOKEN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SEND_EMAIL_TOKEN'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TEMPLATE_RESET_PASSWORD\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'resetPassword'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        TEMPLATE_TEST\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'testTemplate'\n                    \n                \n\n\n        \n    \n\n    src/config/server.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\n  SERVER_CONFIG,\n  (): ServerConfigInterface => ({\n    environment: process.env?.NODE_ENV ?? 'development',\n    api: 'http://localhost:3000',\n    port:\n      'string' === typeof process.env.PORT ? parseInt(process.env.PORT) : 3001,\n    cors: {\n      origin: process.env.CORS_ORIGIN\n        ? process.env.CORS_ORIGIN\n        : 'http://localhost:3000',\n    },\n  })\n)\n                    \n                \n\n\n        \n    \n\n    src/config/typeorm.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        typeormConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : registerAs(\n  TYPEORM_MODULE_CONFIG,\n  (): TypeOrmModuleOptions => {\n    return {\n      type: 'postgres',\n      url: process.env.DATABASE_URL\n        ? process.env.DATABASE_URL\n        : 'postgresql://postgres:postgres@localhost:5432/nestjscourse',\n      migrationsRun:\n        'string' === typeof process.env.DATABASE_MIGRATIONS_RUN\n          ? process.env.DATABASE_MIGRATIONS_RUN === 'true'\n          : false,\n      entities: [__dirname + '/../**/*.entity.{js,ts}'],\n      subscribers: [UserSubscriber],\n      synchronize:\n        'string' === typeof process.env.DATABASE_SYNCHRONIZE\n          ? process.env.DATABASE_SYNCHRONIZE === 'true'\n          : false,\n      migrations: [__dirname + '/../migrations/*.{js,ts}'],\n      autoLoadEntities: true,\n      logging: true,\n      logger: 'file',\n    };\n  }\n)\n                    \n                \n\n\n        \n    \n\n    src/modules/user/constant/user.constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        USER_EMAIL_MAX_LENGTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 320\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_EMAIL_MIN_LENGTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 4\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_HEIGHT_MAX\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 96\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_HEIGHT_MIN\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 36\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_NAME_MAX_LENGTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_NAME_MIN_LENGTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_PASSWORD_MIN_LENGTH\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 8\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        USER_REPORT_CACHE_KEY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'USER_REPORT'\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
